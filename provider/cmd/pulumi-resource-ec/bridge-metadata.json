{
    "auto-aliasing": {
        "resources": {
            "ec_deployment": {
                "current": "ec:index/deployment:Deployment",
                "fields": {
                    "elasticsearch": {
                        "fields": {
                            "cold": {
                                "fields": {
                                    "node_roles": {
                                        "maxItemsOne": false
                                    }
                                }
                            },
                            "config": {
                                "fields": {
                                    "plugins": {
                                        "maxItemsOne": false
                                    }
                                }
                            },
                            "coordinating": {
                                "fields": {
                                    "node_roles": {
                                        "maxItemsOne": false
                                    }
                                }
                            },
                            "extension": {
                                "maxItemsOne": false
                            },
                            "frozen": {
                                "fields": {
                                    "node_roles": {
                                        "maxItemsOne": false
                                    }
                                }
                            },
                            "hot": {
                                "fields": {
                                    "node_roles": {
                                        "maxItemsOne": false
                                    }
                                }
                            },
                            "master": {
                                "fields": {
                                    "node_roles": {
                                        "maxItemsOne": false
                                    }
                                }
                            },
                            "ml": {
                                "fields": {
                                    "node_roles": {
                                        "maxItemsOne": false
                                    }
                                }
                            },
                            "remote_cluster": {
                                "maxItemsOne": false
                            },
                            "trust_account": {
                                "maxItemsOne": false,
                                "elem": {
                                    "fields": {
                                        "trust_allowlist": {
                                            "maxItemsOne": false
                                        }
                                    }
                                }
                            },
                            "trust_external": {
                                "maxItemsOne": false,
                                "elem": {
                                    "fields": {
                                        "trust_allowlist": {
                                            "maxItemsOne": false
                                        }
                                    }
                                }
                            },
                            "warm": {
                                "fields": {
                                    "node_roles": {
                                        "maxItemsOne": false
                                    }
                                }
                            }
                        }
                    },
                    "traffic_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "ec_deployment_elasticsearch_keystore": {
                "current": "ec:index/deploymentElasticsearchKeystore:DeploymentElasticsearchKeystore"
            },
            "ec_deployment_extension": {
                "current": "ec:index/deploymentExtension:DeploymentExtension"
            },
            "ec_deployment_traffic_filter": {
                "current": "ec:index/deploymentTrafficFilter:DeploymentTrafficFilter",
                "fields": {
                    "rule": {
                        "maxItemsOne": false
                    }
                }
            },
            "ec_deployment_traffic_filter_association": {
                "current": "ec:index/deploymentTrafficFilterAssociation:DeploymentTrafficFilterAssociation"
            },
            "ec_snapshot_repository": {
                "current": "ec:index/snapshotRepository:SnapshotRepository"
            }
        },
        "datasources": {
            "ec_aws_privatelink_endpoint": {
                "current": "ec:index/getAwsPrivatelinkEndpoint:getAwsPrivatelinkEndpoint",
                "fields": {
                    "zone_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "ec_azure_privatelink_endpoint": {
                "current": "ec:index/getAzurePrivatelinkEndpoint:getAzurePrivatelinkEndpoint"
            },
            "ec_deployment": {
                "current": "ec:index/getDeployment:getDeployment",
                "fields": {
                    "apm": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "topology": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "elasticsearch": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "topology": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "autoscaling": {
                                                "maxItemsOne": false
                                            },
                                            "node_roles": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "enterprise_search": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "topology": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "integrations_server": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "topology": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kibana": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "topology": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "observability": {
                        "maxItemsOne": false
                    },
                    "traffic_filter": {
                        "maxItemsOne": false
                    }
                }
            },
            "ec_deployments": {
                "current": "ec:index/getDeployments:getDeployments",
                "fields": {
                    "apm": {
                        "maxItemsOne": false
                    },
                    "deployments": {
                        "maxItemsOne": false
                    },
                    "elasticsearch": {
                        "maxItemsOne": false
                    },
                    "enterprise_search": {
                        "maxItemsOne": false
                    },
                    "integrations_server": {
                        "maxItemsOne": false
                    },
                    "kibana": {
                        "maxItemsOne": false
                    }
                }
            },
            "ec_gcp_private_service_connect_endpoint": {
                "current": "ec:index/getGcpPrivateServiceConnectEndpoint:getGcpPrivateServiceConnectEndpoint"
            },
            "ec_stack": {
                "current": "ec:index/getStack:getStack",
                "fields": {
                    "apm": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "compatible_node_types": {
                                    "maxItemsOne": false
                                },
                                "denylist": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "elasticsearch": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "compatible_node_types": {
                                    "maxItemsOne": false
                                },
                                "default_plugins": {
                                    "maxItemsOne": false
                                },
                                "denylist": {
                                    "maxItemsOne": false
                                },
                                "plugins": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "enterprise_search": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "compatible_node_types": {
                                    "maxItemsOne": false
                                },
                                "denylist": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "kibana": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "compatible_node_types": {
                                    "maxItemsOne": false
                                },
                                "denylist": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "upgradable_to": {
                        "maxItemsOne": false
                    }
                }
            },
            "ec_traffic_filter": {
                "current": "ec:index/getTrafficFilter:getTrafficFilter",
                "fields": {
                    "rulesets": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rules": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "auto-settings": {},
    "renames": {
        "resources": {
            "ec:index/deployment:Deployment": "ec_deployment",
            "ec:index/deploymentElasticsearchKeystore:DeploymentElasticsearchKeystore": "ec_deployment_elasticsearch_keystore",
            "ec:index/deploymentExtension:DeploymentExtension": "ec_deployment_extension",
            "ec:index/deploymentTrafficFilter:DeploymentTrafficFilter": "ec_deployment_traffic_filter",
            "ec:index/deploymentTrafficFilterAssociation:DeploymentTrafficFilterAssociation": "ec_deployment_traffic_filter_association",
            "ec:index/snapshotRepository:SnapshotRepository": "ec_snapshot_repository"
        },
        "functions": {
            "ec:index/getAwsPrivatelinkEndpoint:getAwsPrivatelinkEndpoint": "ec_aws_privatelink_endpoint",
            "ec:index/getAzurePrivatelinkEndpoint:getAzurePrivatelinkEndpoint": "ec_azure_privatelink_endpoint",
            "ec:index/getDeployment:getDeployment": "ec_deployment",
            "ec:index/getDeployments:getDeployments": "ec_deployments",
            "ec:index/getGcpPrivateServiceConnectEndpoint:getGcpPrivateServiceConnectEndpoint": "ec_gcp_private_service_connect_endpoint",
            "ec:index/getStack:getStack": "ec_stack",
            "ec:index/getTrafficFilter:getTrafficFilter": "ec_traffic_filter"
        },
        "renamedProperties": {
            "ec:index/DeploymentApm:DeploymentApm": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "instanceConfigurationId": "instance_configuration_id",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentApmConfig:DeploymentApmConfig": {
                "debugEnabled": "debug_enabled",
                "dockerImage": "docker_image",
                "userSettingsJson": "user_settings_json",
                "userSettingsOverrideJson": "user_settings_override_json",
                "userSettingsOverrideYaml": "user_settings_override_yaml",
                "userSettingsYaml": "user_settings_yaml"
            },
            "ec:index/DeploymentElasticsearch:DeploymentElasticsearch": {
                "cloudId": "cloud_id",
                "extensions": "extension",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "keystoreContents": "keystore_contents",
                "refId": "ref_id",
                "remoteClusters": "remote_cluster",
                "resourceId": "resource_id",
                "snapshotSource": "snapshot_source",
                "trustAccounts": "trust_account",
                "trustExternals": "trust_external"
            },
            "ec:index/DeploymentElasticsearchCold:DeploymentElasticsearchCold": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentElasticsearchColdAutoscaling:DeploymentElasticsearchColdAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/DeploymentElasticsearchConfig:DeploymentElasticsearchConfig": {
                "dockerImage": "docker_image",
                "userSettingsJson": "user_settings_json",
                "userSettingsOverrideJson": "user_settings_override_json",
                "userSettingsOverrideYaml": "user_settings_override_yaml",
                "userSettingsYaml": "user_settings_yaml"
            },
            "ec:index/DeploymentElasticsearchCoordinating:DeploymentElasticsearchCoordinating": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentElasticsearchCoordinatingAutoscaling:DeploymentElasticsearchCoordinatingAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/DeploymentElasticsearchFrozen:DeploymentElasticsearchFrozen": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentElasticsearchFrozenAutoscaling:DeploymentElasticsearchFrozenAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/DeploymentElasticsearchHot:DeploymentElasticsearchHot": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentElasticsearchHotAutoscaling:DeploymentElasticsearchHotAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/DeploymentElasticsearchKeystoreContents:DeploymentElasticsearchKeystoreContents": {
                "asFile": "as_file"
            },
            "ec:index/DeploymentElasticsearchMaster:DeploymentElasticsearchMaster": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentElasticsearchMasterAutoscaling:DeploymentElasticsearchMasterAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/DeploymentElasticsearchMl:DeploymentElasticsearchMl": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentElasticsearchMlAutoscaling:DeploymentElasticsearchMlAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/DeploymentElasticsearchRemoteCluster:DeploymentElasticsearchRemoteCluster": {
                "deploymentId": "deployment_id",
                "refId": "ref_id",
                "skipUnavailable": "skip_unavailable"
            },
            "ec:index/DeploymentElasticsearchSnapshotRepositoryReference:DeploymentElasticsearchSnapshotRepositoryReference": {
                "repositoryName": "repository_name"
            },
            "ec:index/DeploymentElasticsearchSnapshotSource:DeploymentElasticsearchSnapshotSource": {
                "snapshotName": "snapshot_name",
                "sourceElasticsearchClusterId": "source_elasticsearch_cluster_id"
            },
            "ec:index/DeploymentElasticsearchTrustAccount:DeploymentElasticsearchTrustAccount": {
                "accountId": "account_id",
                "trustAll": "trust_all",
                "trustAllowlists": "trust_allowlist"
            },
            "ec:index/DeploymentElasticsearchTrustExternal:DeploymentElasticsearchTrustExternal": {
                "relationshipId": "relationship_id",
                "trustAll": "trust_all",
                "trustAllowlists": "trust_allowlist"
            },
            "ec:index/DeploymentElasticsearchWarm:DeploymentElasticsearchWarm": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentElasticsearchWarmAutoscaling:DeploymentElasticsearchWarmAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/DeploymentEnterpriseSearch:DeploymentEnterpriseSearch": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "instanceConfigurationId": "instance_configuration_id",
                "nodeTypeAppserver": "node_type_appserver",
                "nodeTypeConnector": "node_type_connector",
                "nodeTypeWorker": "node_type_worker",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentEnterpriseSearchConfig:DeploymentEnterpriseSearchConfig": {
                "dockerImage": "docker_image",
                "userSettingsJson": "user_settings_json",
                "userSettingsOverrideJson": "user_settings_override_json",
                "userSettingsOverrideYaml": "user_settings_override_yaml",
                "userSettingsYaml": "user_settings_yaml"
            },
            "ec:index/DeploymentIntegrationsServer:DeploymentIntegrationsServer": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "instanceConfigurationId": "instance_configuration_id",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentIntegrationsServerConfig:DeploymentIntegrationsServerConfig": {
                "debugEnabled": "debug_enabled",
                "dockerImage": "docker_image",
                "userSettingsJson": "user_settings_json",
                "userSettingsOverrideJson": "user_settings_override_json",
                "userSettingsOverrideYaml": "user_settings_override_yaml",
                "userSettingsYaml": "user_settings_yaml"
            },
            "ec:index/DeploymentKibana:DeploymentKibana": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "instanceConfigurationId": "instance_configuration_id",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/DeploymentKibanaConfig:DeploymentKibanaConfig": {
                "dockerImage": "docker_image",
                "userSettingsJson": "user_settings_json",
                "userSettingsOverrideJson": "user_settings_override_json",
                "userSettingsOverrideYaml": "user_settings_override_yaml",
                "userSettingsYaml": "user_settings_yaml"
            },
            "ec:index/DeploymentObservability:DeploymentObservability": {
                "deploymentId": "deployment_id",
                "refId": "ref_id"
            },
            "ec:index/DeploymentTrafficFilterRule:DeploymentTrafficFilterRule": {
                "azureEndpointGuid": "azure_endpoint_guid",
                "azureEndpointName": "azure_endpoint_name"
            },
            "ec:index/SnapshotRepositoryS3:SnapshotRepositoryS3": {
                "accessKey": "access_key",
                "pathStyleAccess": "path_style_access",
                "secretKey": "secret_key",
                "serverSideEncryption": "server_side_encryption"
            },
            "ec:index/deployment:Deployment": {
                "apmSecretToken": "apm_secret_token",
                "deploymentTemplateId": "deployment_template_id",
                "elasticsearchPassword": "elasticsearch_password",
                "elasticsearchUsername": "elasticsearch_username",
                "enterpriseSearch": "enterprise_search",
                "integrationsServer": "integrations_server",
                "requestId": "request_id",
                "resetElasticsearchPassword": "reset_elasticsearch_password",
                "trafficFilters": "traffic_filter"
            },
            "ec:index/deploymentElasticsearchKeystore:DeploymentElasticsearchKeystore": {
                "asFile": "as_file",
                "deploymentId": "deployment_id",
                "settingName": "setting_name"
            },
            "ec:index/deploymentExtension:DeploymentExtension": {
                "downloadUrl": "download_url",
                "extensionType": "extension_type",
                "fileHash": "file_hash",
                "filePath": "file_path",
                "lastModified": "last_modified"
            },
            "ec:index/deploymentTrafficFilter:DeploymentTrafficFilter": {
                "includeByDefault": "include_by_default",
                "rules": "rule"
            },
            "ec:index/deploymentTrafficFilterAssociation:DeploymentTrafficFilterAssociation": {
                "deploymentId": "deployment_id",
                "trafficFilterId": "traffic_filter_id"
            },
            "ec:index/getAwsPrivatelinkEndpoint:getAwsPrivatelinkEndpoint": {
                "domainName": "domain_name",
                "vpcServiceName": "vpc_service_name",
                "zoneIds": "zone_ids"
            },
            "ec:index/getAzurePrivatelinkEndpoint:getAzurePrivatelinkEndpoint": {
                "domainName": "domain_name",
                "serviceAlias": "service_alias"
            },
            "ec:index/getDeployment:getDeployment": {
                "apms": "apm",
                "deploymentTemplateId": "deployment_template_id",
                "elasticsearches": "elasticsearch",
                "enterpriseSearches": "enterprise_search",
                "integrationsServers": "integrations_server",
                "kibanas": "kibana",
                "observabilities": "observability",
                "trafficFilters": "traffic_filter"
            },
            "ec:index/getDeploymentApm:getDeploymentApm": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "topologies": "topology"
            },
            "ec:index/getDeploymentApmTopology:getDeploymentApmTopology": {
                "instanceConfigurationId": "instance_configuration_id",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/getDeploymentElasticsearch:getDeploymentElasticsearch": {
                "cloudId": "cloud_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "topologies": "topology"
            },
            "ec:index/getDeploymentElasticsearchTopology:getDeploymentElasticsearchTopology": {
                "autoscalings": "autoscaling",
                "instanceConfigurationId": "instance_configuration_id",
                "nodeRoles": "node_roles",
                "nodeTypeData": "node_type_data",
                "nodeTypeIngest": "node_type_ingest",
                "nodeTypeMaster": "node_type_master",
                "nodeTypeMl": "node_type_ml",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/getDeploymentElasticsearchTopologyAutoscaling:getDeploymentElasticsearchTopologyAutoscaling": {
                "maxSize": "max_size",
                "maxSizeResource": "max_size_resource",
                "minSize": "min_size",
                "minSizeResource": "min_size_resource",
                "policyOverrideJson": "policy_override_json"
            },
            "ec:index/getDeploymentEnterpriseSearch:getDeploymentEnterpriseSearch": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "topologies": "topology"
            },
            "ec:index/getDeploymentEnterpriseSearchTopology:getDeploymentEnterpriseSearchTopology": {
                "instanceConfigurationId": "instance_configuration_id",
                "nodeTypeAppserver": "node_type_appserver",
                "nodeTypeConnector": "node_type_connector",
                "nodeTypeWorker": "node_type_worker",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/getDeploymentIntegrationsServer:getDeploymentIntegrationsServer": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "topologies": "topology"
            },
            "ec:index/getDeploymentIntegrationsServerTopology:getDeploymentIntegrationsServerTopology": {
                "instanceConfigurationId": "instance_configuration_id",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/getDeploymentKibana:getDeploymentKibana": {
                "elasticsearchClusterRefId": "elasticsearch_cluster_ref_id",
                "httpEndpoint": "http_endpoint",
                "httpsEndpoint": "https_endpoint",
                "refId": "ref_id",
                "resourceId": "resource_id",
                "topologies": "topology"
            },
            "ec:index/getDeploymentKibanaTopology:getDeploymentKibanaTopology": {
                "instanceConfigurationId": "instance_configuration_id",
                "sizeResource": "size_resource",
                "zoneCount": "zone_count"
            },
            "ec:index/getDeploymentObservability:getDeploymentObservability": {
                "deploymentId": "deployment_id",
                "refId": "ref_id"
            },
            "ec:index/getDeployments:getDeployments": {
                "apms": "apm",
                "deploymentTemplateId": "deployment_template_id",
                "elasticsearches": "elasticsearch",
                "enterpriseSearches": "enterprise_search",
                "integrationsServers": "integrations_server",
                "kibanas": "kibana",
                "namePrefix": "name_prefix",
                "returnCount": "return_count"
            },
            "ec:index/getDeploymentsDeployment:getDeploymentsDeployment": {
                "apmRefId": "apm_ref_id",
                "apmResourceId": "apm_resource_id",
                "deploymentId": "deployment_id",
                "elasticsearchRefId": "elasticsearch_ref_id",
                "elasticsearchResourceId": "elasticsearch_resource_id",
                "enterpriseSearchRefId": "enterprise_search_ref_id",
                "enterpriseSearchResourceId": "enterprise_search_resource_id",
                "integrationsServerRefId": "integrations_server_ref_id",
                "integrationsServerResourceId": "integrations_server_resource_id",
                "kibanaRefId": "kibana_ref_id",
                "kibanaResourceId": "kibana_resource_id"
            },
            "ec:index/getGcpPrivateServiceConnectEndpoint:getGcpPrivateServiceConnectEndpoint": {
                "domainName": "domain_name",
                "serviceAttachmentUri": "service_attachment_uri"
            },
            "ec:index/getStack:getStack": {
                "apms": "apm",
                "elasticsearches": "elasticsearch",
                "enterpriseSearches": "enterprise_search",
                "kibanas": "kibana",
                "minUpgradableFrom": "min_upgradable_from",
                "upgradableTos": "upgradable_to",
                "versionRegex": "version_regex"
            },
            "ec:index/getStackApm:getStackApm": {
                "capacityConstraintsMax": "capacity_constraints_max",
                "capacityConstraintsMin": "capacity_constraints_min",
                "compatibleNodeTypes": "compatible_node_types",
                "denylists": "denylist",
                "dockerImage": "docker_image"
            },
            "ec:index/getStackElasticsearch:getStackElasticsearch": {
                "capacityConstraintsMax": "capacity_constraints_max",
                "capacityConstraintsMin": "capacity_constraints_min",
                "compatibleNodeTypes": "compatible_node_types",
                "defaultPlugins": "default_plugins",
                "denylists": "denylist",
                "dockerImage": "docker_image"
            },
            "ec:index/getStackEnterpriseSearch:getStackEnterpriseSearch": {
                "capacityConstraintsMax": "capacity_constraints_max",
                "capacityConstraintsMin": "capacity_constraints_min",
                "compatibleNodeTypes": "compatible_node_types",
                "denylists": "denylist",
                "dockerImage": "docker_image"
            },
            "ec:index/getStackKibana:getStackKibana": {
                "capacityConstraintsMax": "capacity_constraints_max",
                "capacityConstraintsMin": "capacity_constraints_min",
                "compatibleNodeTypes": "compatible_node_types",
                "denylists": "denylist",
                "dockerImage": "docker_image"
            },
            "ec:index/getTrafficFilterRuleset:getTrafficFilterRuleset": {
                "includeByDefault": "include_by_default"
            },
            "ec:index:Provider": {
                "verboseCredentials": "verbose_credentials",
                "verboseFile": "verbose_file"
            }
        },
        "renamedConfigProperties": {
            "verboseCredentials": "verbose_credentials",
            "verboseFile": "verbose_file"
        }
    }
}