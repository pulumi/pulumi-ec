// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityProjectMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityProjectMetadataArgs Empty = new ObservabilityProjectMetadataArgs();

    /**
     * Date and time when the project was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Date and time when the project was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * ID of the user.
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return ID of the user.
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The Organization ID who owns the project.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The Organization ID who owns the project.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * Date and time when the project was suspended.
     * 
     */
    @Import(name="suspendedAt")
    private @Nullable Output<String> suspendedAt;

    /**
     * @return Date and time when the project was suspended.
     * 
     */
    public Optional<Output<String>> suspendedAt() {
        return Optional.ofNullable(this.suspendedAt);
    }

    /**
     * Reason why the project was suspended.
     * 
     */
    @Import(name="suspendedReason")
    private @Nullable Output<String> suspendedReason;

    /**
     * @return Reason why the project was suspended.
     * 
     */
    public Optional<Output<String>> suspendedReason() {
        return Optional.ofNullable(this.suspendedReason);
    }

    private ObservabilityProjectMetadataArgs() {}

    private ObservabilityProjectMetadataArgs(ObservabilityProjectMetadataArgs $) {
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.organizationId = $.organizationId;
        this.suspendedAt = $.suspendedAt;
        this.suspendedReason = $.suspendedReason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityProjectMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityProjectMetadataArgs $;

        public Builder() {
            $ = new ObservabilityProjectMetadataArgs();
        }

        public Builder(ObservabilityProjectMetadataArgs defaults) {
            $ = new ObservabilityProjectMetadataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Date and time when the project was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Date and time when the project was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy ID of the user.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy ID of the user.
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param organizationId The Organization ID who owns the project.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The Organization ID who owns the project.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param suspendedAt Date and time when the project was suspended.
         * 
         * @return builder
         * 
         */
        public Builder suspendedAt(@Nullable Output<String> suspendedAt) {
            $.suspendedAt = suspendedAt;
            return this;
        }

        /**
         * @param suspendedAt Date and time when the project was suspended.
         * 
         * @return builder
         * 
         */
        public Builder suspendedAt(String suspendedAt) {
            return suspendedAt(Output.of(suspendedAt));
        }

        /**
         * @param suspendedReason Reason why the project was suspended.
         * 
         * @return builder
         * 
         */
        public Builder suspendedReason(@Nullable Output<String> suspendedReason) {
            $.suspendedReason = suspendedReason;
            return this;
        }

        /**
         * @param suspendedReason Reason why the project was suspended.
         * 
         * @return builder
         * 
         */
        public Builder suspendedReason(String suspendedReason) {
            return suspendedReason(Output.of(suspendedReason));
        }

        public ObservabilityProjectMetadataArgs build() {
            return $;
        }
    }

}
