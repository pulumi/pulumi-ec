// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ec.DeploymentArgs;
import com.pulumi.ec.Utilities;
import com.pulumi.ec.inputs.DeploymentState;
import com.pulumi.ec.outputs.DeploymentApm;
import com.pulumi.ec.outputs.DeploymentElasticsearch;
import com.pulumi.ec.outputs.DeploymentEnterpriseSearch;
import com.pulumi.ec.outputs.DeploymentIntegrationsServer;
import com.pulumi.ec.outputs.DeploymentKibana;
import com.pulumi.ec.outputs.DeploymentObservability;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Basic
 * 
 * ### With config
 * 
 * `es.yaml`
 * 
 * `deployment.tf`:
 * 
 * ### With autoscaling
 * 
 * ### With observability
 * 
 * It is possible to enable observability without using a second deployment, by storing the observability data in the current deployment. To enable this, set `deployment_id` to `self`.
 * 
 * ### With Cross Cluster Search settings
 * 
 * ### With Keystore
 * 
 * ## Import
 * 
 * ~&gt; **Note on deployment credentials** The `elastic` user credentials are only available whilst creating a deployment. Importing a deployment will not import the `elasticsearch_username` or `elasticsearch_password` attributes.
 * 
 * ~&gt; **Note on legacy (pre-slider) deployments** Importing deployments created prior to the addition of sliders in ECE or ESS, without being migrated to use sliders, is not supported.
 * 
 * ~&gt; **Note on pre 6.6.0 deployments** Importing deployments with a version lower than `6.6.0` is not supported.
 * 
 * ~&gt; **Note on deployments with topology user settings** Only deployments with global user settings (config) are supported. Make sure to migrate to global settings before importing.
 * 
 * Deployments can be imported using the `id`, for example:
 * 
 * ```sh
 * $ pulumi import ec:index/deployment:Deployment search 320b7b540dfc967a7a649c18e2fce4ed
 * ```
 * 
 */
@ResourceType(type="ec:index/deployment:Deployment")
public class Deployment extends com.pulumi.resources.CustomResource {
    /**
     * Deployment alias, affects the format of the resource URLs. Set to an empty value (&#34;&#34;) to disable the alias.
     * 
     */
    @Export(name="alias", refs={String.class}, tree="[0]")
    private Output<String> alias;

    /**
     * @return Deployment alias, affects the format of the resource URLs. Set to an empty value (&#34;&#34;) to disable the alias.
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }
    /**
     * **DEPRECATED** APM cluster definition. This should only be used for deployments running a version lower than 8.0
     * 
     */
    @Export(name="apm", refs={DeploymentApm.class}, tree="[0]")
    private Output</* @Nullable */ DeploymentApm> apm;

    /**
     * @return **DEPRECATED** APM cluster definition. This should only be used for deployments running a version lower than 8.0
     * 
     */
    public Output<Optional<DeploymentApm>> apm() {
        return Codegen.optional(this.apm);
    }
    @Export(name="apmSecretToken", refs={String.class}, tree="[0]")
    private Output<String> apmSecretToken;

    public Output<String> apmSecretToken() {
        return this.apmSecretToken;
    }
    /**
     * Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
     * 
     */
    @Export(name="deploymentTemplateId", refs={String.class}, tree="[0]")
    private Output<String> deploymentTemplateId;

    /**
     * @return Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
     * 
     */
    public Output<String> deploymentTemplateId() {
        return this.deploymentTemplateId;
    }
    /**
     * Elasticsearch cluster definition
     * 
     */
    @Export(name="elasticsearch", refs={DeploymentElasticsearch.class}, tree="[0]")
    private Output<DeploymentElasticsearch> elasticsearch;

    /**
     * @return Elasticsearch cluster definition
     * 
     */
    public Output<DeploymentElasticsearch> elasticsearch() {
        return this.elasticsearch;
    }
    @Export(name="elasticsearchPassword", refs={String.class}, tree="[0]")
    private Output<String> elasticsearchPassword;

    public Output<String> elasticsearchPassword() {
        return this.elasticsearchPassword;
    }
    /**
     * Username for authenticating to the Elasticsearch resource.
     * 
     */
    @Export(name="elasticsearchUsername", refs={String.class}, tree="[0]")
    private Output<String> elasticsearchUsername;

    /**
     * @return Username for authenticating to the Elasticsearch resource.
     * 
     */
    public Output<String> elasticsearchUsername() {
        return this.elasticsearchUsername;
    }
    /**
     * Enterprise Search cluster definition.
     * 
     */
    @Export(name="enterpriseSearch", refs={DeploymentEnterpriseSearch.class}, tree="[0]")
    private Output</* @Nullable */ DeploymentEnterpriseSearch> enterpriseSearch;

    /**
     * @return Enterprise Search cluster definition.
     * 
     */
    public Output<Optional<DeploymentEnterpriseSearch>> enterpriseSearch() {
        return Codegen.optional(this.enterpriseSearch);
    }
    /**
     * Integrations Server cluster definition. Integrations Server replaces `apm` in Stack versions &gt; 8.0
     * 
     */
    @Export(name="integrationsServer", refs={DeploymentIntegrationsServer.class}, tree="[0]")
    private Output</* @Nullable */ DeploymentIntegrationsServer> integrationsServer;

    /**
     * @return Integrations Server cluster definition. Integrations Server replaces `apm` in Stack versions &gt; 8.0
     * 
     */
    public Output<Optional<DeploymentIntegrationsServer>> integrationsServer() {
        return Codegen.optional(this.integrationsServer);
    }
    /**
     * Kibana cluster definition. &gt; **Note on disabling Kibana** While optional it is recommended deployments specify a Kibana
     * block, since not doing so might cause issues when modifying or upgrading the deployment.
     * 
     */
    @Export(name="kibana", refs={DeploymentKibana.class}, tree="[0]")
    private Output</* @Nullable */ DeploymentKibana> kibana;

    /**
     * @return Kibana cluster definition. &gt; **Note on disabling Kibana** While optional it is recommended deployments specify a Kibana
     * block, since not doing so might cause issues when modifying or upgrading the deployment.
     * 
     */
    public Output<Optional<DeploymentKibana>> kibana() {
        return Codegen.optional(this.kibana);
    }
    /**
     * When set to true, the deployment will be updated according to the latest deployment template values. &gt; **Note** If the
     * &lt;code&gt;instance_configuration_id&lt;/code&gt; or &lt;code&gt;instance_configuration_version&lt;/code&gt; fields are set for a specific
     * topology element, that element will not be updated. &gt; **Note** Hardware migrations are not supported for deployments
     * with node types. To use this field, the deployment needs to be migrated to node roles first.
     * 
     */
    @Export(name="migrateToLatestHardware", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> migrateToLatestHardware;

    /**
     * @return When set to true, the deployment will be updated according to the latest deployment template values. &gt; **Note** If the
     * &lt;code&gt;instance_configuration_id&lt;/code&gt; or &lt;code&gt;instance_configuration_version&lt;/code&gt; fields are set for a specific
     * topology element, that element will not be updated. &gt; **Note** Hardware migrations are not supported for deployments
     * with node types. To use this field, the deployment needs to be migrated to node roles first.
     * 
     */
    public Output<Optional<Boolean>> migrateToLatestHardware() {
        return Codegen.optional(this.migrateToLatestHardware);
    }
    /**
     * Name for the deployment
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name for the deployment
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the
     * current deployment itself by setting observability.deployment_id to `self`.
     * 
     */
    @Export(name="observability", refs={DeploymentObservability.class}, tree="[0]")
    private Output</* @Nullable */ DeploymentObservability> observability;

    /**
     * @return Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the
     * current deployment itself by setting observability.deployment_id to `self`.
     * 
     */
    public Output<Optional<DeploymentObservability>> observability() {
        return Codegen.optional(this.observability);
    }
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `&#34;ece-region&#34;.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `&#34;ece-region&#34;.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Request ID to set when you create the deployment. Use it only when previous attempts return an error and `request_id` is
     * returned as part of the error.
     * 
     */
    @Export(name="requestId", refs={String.class}, tree="[0]")
    private Output<String> requestId;

    /**
     * @return Request ID to set when you create the deployment. Use it only when previous attempts return an error and `request_id` is
     * returned as part of the error.
     * 
     */
    public Output<String> requestId() {
        return this.requestId;
    }
    /**
     * Explicitly resets the elasticsearch_password when true
     * 
     */
    @Export(name="resetElasticsearchPassword", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> resetElasticsearchPassword;

    /**
     * @return Explicitly resets the elasticsearch_password when true
     * 
     */
    public Output<Optional<Boolean>> resetElasticsearchPassword() {
        return Codegen.optional(this.resetElasticsearchPassword);
    }
    /**
     * Optional map of deployment tags
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return Optional map of deployment tags
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * List of traffic filters rule identifiers that will be applied to the deployment.
     * 
     */
    @Export(name="trafficFilters", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> trafficFilters;

    /**
     * @return List of traffic filters rule identifiers that will be applied to the deployment.
     * 
     */
    public Output<List<String>> trafficFilters() {
        return this.trafficFilters;
    }
    /**
     * Elastic Stack version to use for all of the deployment resources.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return Elastic Stack version to use for all of the deployment resources.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Deployment(java.lang.String name) {
        this(name, DeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Deployment(java.lang.String name, DeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Deployment(java.lang.String name, DeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ec:index/deployment:Deployment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Deployment(java.lang.String name, Output<java.lang.String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ec:index/deployment:Deployment", name, state, makeResourceOptions(options, id), false);
    }

    private static DeploymentArgs makeArgs(DeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DeploymentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "apmSecretToken",
                "elasticsearchPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Deployment get(java.lang.String name, Output<java.lang.String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Deployment(name, id, state, options);
    }
}
