// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ElasticsearchProjectSearchLake {
    /**
     * @return Determines how much data can benefit from faster search. When ingested, a certain amount of data is loaded into a cache that makes it super fast to query. The system dynamically adjusts the cache allocated to your project based on how much data you ingest during the period defined by your Search Boost Window.
     * 
     */
    private @Nullable Integer boostWindow;
    /**
     * @return Controls how fast searches are against your project data. When ingested, a certain amount of data is loaded into a cache that makes it super fast to query. You can either increase the performance of searches on cached data by adding replicas, or reduce the quantity of cached data by a static factor to save on costs.
     * 
     */
    private @Nullable Integer searchPower;

    private ElasticsearchProjectSearchLake() {}
    /**
     * @return Determines how much data can benefit from faster search. When ingested, a certain amount of data is loaded into a cache that makes it super fast to query. The system dynamically adjusts the cache allocated to your project based on how much data you ingest during the period defined by your Search Boost Window.
     * 
     */
    public Optional<Integer> boostWindow() {
        return Optional.ofNullable(this.boostWindow);
    }
    /**
     * @return Controls how fast searches are against your project data. When ingested, a certain amount of data is loaded into a cache that makes it super fast to query. You can either increase the performance of searches on cached data by adding replicas, or reduce the quantity of cached data by a static factor to save on costs.
     * 
     */
    public Optional<Integer> searchPower() {
        return Optional.ofNullable(this.searchPower);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ElasticsearchProjectSearchLake defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer boostWindow;
        private @Nullable Integer searchPower;
        public Builder() {}
        public Builder(ElasticsearchProjectSearchLake defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.boostWindow = defaults.boostWindow;
    	      this.searchPower = defaults.searchPower;
        }

        @CustomType.Setter
        public Builder boostWindow(@Nullable Integer boostWindow) {

            this.boostWindow = boostWindow;
            return this;
        }
        @CustomType.Setter
        public Builder searchPower(@Nullable Integer searchPower) {

            this.searchPower = searchPower;
            return this;
        }
        public ElasticsearchProjectSearchLake build() {
            final var _resultValue = new ElasticsearchProjectSearchLake();
            _resultValue.boostWindow = boostWindow;
            _resultValue.searchPower = searchPower;
            return _resultValue;
        }
    }
}
