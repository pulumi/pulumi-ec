// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.ec.outputs.GetDeploymentsApm;
import com.pulumi.ec.outputs.GetDeploymentsDeployment;
import com.pulumi.ec.outputs.GetDeploymentsElasticsearch;
import com.pulumi.ec.outputs.GetDeploymentsEnterpriseSearch;
import com.pulumi.ec.outputs.GetDeploymentsIntegrationsServer;
import com.pulumi.ec.outputs.GetDeploymentsKibana;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentsResult {
    private @Nullable GetDeploymentsApm apm;
    private @Nullable String deploymentTemplateId;
    /**
     * @return List of deployments which match the specified query.
     * * `deployments.#.deployment_id` - The deployment unique ID.
     * * `deployments.#.alias` - Deployment alias.
     * * `deployments.#.name` - The name of the deployment.
     * * `deployments.#.elasticsearch_resource_id` - The Elasticsearch resource unique ID.
     * * `deployments.#.elasticsearch_ref_id` - The Elasticsearch resource reference.
     * * `deployments.#.kibana_resource_id` - The Kibana resource unique ID.
     * * `deployments.#.kibana_ref_id` - The Kibana resource reference.
     * * `deployments.#.integrations_server_resource_id` - The Integrations Server resource unique ID.
     * * `deployments.#.integrations_server_ref_id` - The Integrations Server resource reference.
     * * `deployments.#.apm_resource_id` - The APM resource unique ID.
     * * `deployments.#.apm_ref_id` - The APM resource reference.
     * * `deployments.#.enterprise_search_resource_id` - The Enterprise Search resource unique ID.
     * * `deployments.#.enterprise_search_ref_id` - The Enterprise Search resource reference.
     * 
     */
    private List<GetDeploymentsDeployment> deployments;
    private @Nullable GetDeploymentsElasticsearch elasticsearch;
    private @Nullable GetDeploymentsEnterpriseSearch enterpriseSearch;
    private @Nullable String healthy;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable GetDeploymentsIntegrationsServer integrationsServer;
    private @Nullable GetDeploymentsKibana kibana;
    private @Nullable String namePrefix;
    private Integer returnCount;
    private @Nullable Integer size;
    private @Nullable Map<String,String> tags;

    private GetDeploymentsResult() {}
    public Optional<GetDeploymentsApm> apm() {
        return Optional.ofNullable(this.apm);
    }
    public Optional<String> deploymentTemplateId() {
        return Optional.ofNullable(this.deploymentTemplateId);
    }
    /**
     * @return List of deployments which match the specified query.
     * * `deployments.#.deployment_id` - The deployment unique ID.
     * * `deployments.#.alias` - Deployment alias.
     * * `deployments.#.name` - The name of the deployment.
     * * `deployments.#.elasticsearch_resource_id` - The Elasticsearch resource unique ID.
     * * `deployments.#.elasticsearch_ref_id` - The Elasticsearch resource reference.
     * * `deployments.#.kibana_resource_id` - The Kibana resource unique ID.
     * * `deployments.#.kibana_ref_id` - The Kibana resource reference.
     * * `deployments.#.integrations_server_resource_id` - The Integrations Server resource unique ID.
     * * `deployments.#.integrations_server_ref_id` - The Integrations Server resource reference.
     * * `deployments.#.apm_resource_id` - The APM resource unique ID.
     * * `deployments.#.apm_ref_id` - The APM resource reference.
     * * `deployments.#.enterprise_search_resource_id` - The Enterprise Search resource unique ID.
     * * `deployments.#.enterprise_search_ref_id` - The Enterprise Search resource reference.
     * 
     */
    public List<GetDeploymentsDeployment> deployments() {
        return this.deployments;
    }
    public Optional<GetDeploymentsElasticsearch> elasticsearch() {
        return Optional.ofNullable(this.elasticsearch);
    }
    public Optional<GetDeploymentsEnterpriseSearch> enterpriseSearch() {
        return Optional.ofNullable(this.enterpriseSearch);
    }
    public Optional<String> healthy() {
        return Optional.ofNullable(this.healthy);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<GetDeploymentsIntegrationsServer> integrationsServer() {
        return Optional.ofNullable(this.integrationsServer);
    }
    public Optional<GetDeploymentsKibana> kibana() {
        return Optional.ofNullable(this.kibana);
    }
    public Optional<String> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }
    public Integer returnCount() {
        return this.returnCount;
    }
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetDeploymentsApm apm;
        private @Nullable String deploymentTemplateId;
        private List<GetDeploymentsDeployment> deployments;
        private @Nullable GetDeploymentsElasticsearch elasticsearch;
        private @Nullable GetDeploymentsEnterpriseSearch enterpriseSearch;
        private @Nullable String healthy;
        private String id;
        private @Nullable GetDeploymentsIntegrationsServer integrationsServer;
        private @Nullable GetDeploymentsKibana kibana;
        private @Nullable String namePrefix;
        private Integer returnCount;
        private @Nullable Integer size;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetDeploymentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apm = defaults.apm;
    	      this.deploymentTemplateId = defaults.deploymentTemplateId;
    	      this.deployments = defaults.deployments;
    	      this.elasticsearch = defaults.elasticsearch;
    	      this.enterpriseSearch = defaults.enterpriseSearch;
    	      this.healthy = defaults.healthy;
    	      this.id = defaults.id;
    	      this.integrationsServer = defaults.integrationsServer;
    	      this.kibana = defaults.kibana;
    	      this.namePrefix = defaults.namePrefix;
    	      this.returnCount = defaults.returnCount;
    	      this.size = defaults.size;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder apm(@Nullable GetDeploymentsApm apm) {
            this.apm = apm;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentTemplateId(@Nullable String deploymentTemplateId) {
            this.deploymentTemplateId = deploymentTemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder deployments(List<GetDeploymentsDeployment> deployments) {
            this.deployments = Objects.requireNonNull(deployments);
            return this;
        }
        public Builder deployments(GetDeploymentsDeployment... deployments) {
            return deployments(List.of(deployments));
        }
        @CustomType.Setter
        public Builder elasticsearch(@Nullable GetDeploymentsElasticsearch elasticsearch) {
            this.elasticsearch = elasticsearch;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseSearch(@Nullable GetDeploymentsEnterpriseSearch enterpriseSearch) {
            this.enterpriseSearch = enterpriseSearch;
            return this;
        }
        @CustomType.Setter
        public Builder healthy(@Nullable String healthy) {
            this.healthy = healthy;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder integrationsServer(@Nullable GetDeploymentsIntegrationsServer integrationsServer) {
            this.integrationsServer = integrationsServer;
            return this;
        }
        @CustomType.Setter
        public Builder kibana(@Nullable GetDeploymentsKibana kibana) {
            this.kibana = kibana;
            return this;
        }
        @CustomType.Setter
        public Builder namePrefix(@Nullable String namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder returnCount(Integer returnCount) {
            this.returnCount = Objects.requireNonNull(returnCount);
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Integer size) {
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public GetDeploymentsResult build() {
            final var o = new GetDeploymentsResult();
            o.apm = apm;
            o.deploymentTemplateId = deploymentTemplateId;
            o.deployments = deployments;
            o.elasticsearch = elasticsearch;
            o.enterpriseSearch = enterpriseSearch;
            o.healthy = healthy;
            o.id = id;
            o.integrationsServer = integrationsServer;
            o.kibana = kibana;
            o.namePrefix = namePrefix;
            o.returnCount = returnCount;
            o.size = size;
            o.tags = tags;
            return o;
        }
    }
}
