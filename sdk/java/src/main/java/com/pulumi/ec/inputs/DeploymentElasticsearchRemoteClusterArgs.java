// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentElasticsearchRemoteClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentElasticsearchRemoteClusterArgs Empty = new DeploymentElasticsearchRemoteClusterArgs();

    @Import(name="alias", required=true)
    private Output<String> alias;

    public Output<String> alias() {
        return this.alias;
    }

    @Import(name="deploymentId", required=true)
    private Output<String> deploymentId;

    public Output<String> deploymentId() {
        return this.deploymentId;
    }

    @Import(name="refId")
    private @Nullable Output<String> refId;

    public Optional<Output<String>> refId() {
        return Optional.ofNullable(this.refId);
    }

    @Import(name="skipUnavailable")
    private @Nullable Output<Boolean> skipUnavailable;

    public Optional<Output<Boolean>> skipUnavailable() {
        return Optional.ofNullable(this.skipUnavailable);
    }

    private DeploymentElasticsearchRemoteClusterArgs() {}

    private DeploymentElasticsearchRemoteClusterArgs(DeploymentElasticsearchRemoteClusterArgs $) {
        this.alias = $.alias;
        this.deploymentId = $.deploymentId;
        this.refId = $.refId;
        this.skipUnavailable = $.skipUnavailable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentElasticsearchRemoteClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentElasticsearchRemoteClusterArgs $;

        public Builder() {
            $ = new DeploymentElasticsearchRemoteClusterArgs();
        }

        public Builder(DeploymentElasticsearchRemoteClusterArgs defaults) {
            $ = new DeploymentElasticsearchRemoteClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder alias(Output<String> alias) {
            $.alias = alias;
            return this;
        }

        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        public Builder deploymentId(Output<String> deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        public Builder deploymentId(String deploymentId) {
            return deploymentId(Output.of(deploymentId));
        }

        public Builder refId(@Nullable Output<String> refId) {
            $.refId = refId;
            return this;
        }

        public Builder refId(String refId) {
            return refId(Output.of(refId));
        }

        public Builder skipUnavailable(@Nullable Output<Boolean> skipUnavailable) {
            $.skipUnavailable = skipUnavailable;
            return this;
        }

        public Builder skipUnavailable(Boolean skipUnavailable) {
            return skipUnavailable(Output.of(skipUnavailable));
        }

        public DeploymentElasticsearchRemoteClusterArgs build() {
            $.alias = Objects.requireNonNull($.alias, "expected parameter 'alias' to be non-null");
            $.deploymentId = Objects.requireNonNull($.deploymentId, "expected parameter 'deploymentId' to be non-null");
            return $;
        }
    }

}
