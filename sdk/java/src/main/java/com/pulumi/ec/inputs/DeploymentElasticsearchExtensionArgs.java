// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DeploymentElasticsearchExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentElasticsearchExtensionArgs Empty = new DeploymentElasticsearchExtensionArgs();

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    /**
     * Elastic Stack version to use for all of the deployment resources.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return Elastic Stack version to use for all of the deployment resources.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    private DeploymentElasticsearchExtensionArgs() {}

    private DeploymentElasticsearchExtensionArgs(DeploymentElasticsearchExtensionArgs $) {
        this.name = $.name;
        this.type = $.type;
        this.url = $.url;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentElasticsearchExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentElasticsearchExtensionArgs $;

        public Builder() {
            $ = new DeploymentElasticsearchExtensionArgs();
        }

        public Builder(DeploymentElasticsearchExtensionArgs defaults) {
            $ = new DeploymentElasticsearchExtensionArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param version Elastic Stack version to use for all of the deployment resources.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Elastic Stack version to use for all of the deployment resources.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public DeploymentElasticsearchExtensionArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
