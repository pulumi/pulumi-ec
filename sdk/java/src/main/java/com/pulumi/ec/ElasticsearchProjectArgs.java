// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ec.inputs.ElasticsearchProjectSearchLakeArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElasticsearchProjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final ElasticsearchProjectArgs Empty = new ElasticsearchProjectArgs();

    /**
     * A custom domain label compatible with RFC-1035 standards. Derived from the project name by default.
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return A custom domain label compatible with RFC-1035 standards. Derived from the project name by default.
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * Descriptive name for a project.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Descriptive name for a project.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The purpose for which the hardware of this elasticsearch project is optimized for. Also known as the Elasticsearch project subtype.
     * 
     */
    @Import(name="optimizedFor")
    private @Nullable Output<String> optimizedFor;

    /**
     * @return The purpose for which the hardware of this elasticsearch project is optimized for. Also known as the Elasticsearch project subtype.
     * 
     */
    public Optional<Output<String>> optimizedFor() {
        return Optional.ofNullable(this.optimizedFor);
    }

    /**
     * Unique human-readable identifier for a region in Elastic Cloud.
     * 
     */
    @Import(name="regionId", required=true)
    private Output<String> regionId;

    /**
     * @return Unique human-readable identifier for a region in Elastic Cloud.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }

    /**
     * Configuration for entire set of capabilities that make the data searchable in Elasticsearch.
     * 
     */
    @Import(name="searchLake")
    private @Nullable Output<ElasticsearchProjectSearchLakeArgs> searchLake;

    /**
     * @return Configuration for entire set of capabilities that make the data searchable in Elasticsearch.
     * 
     */
    public Optional<Output<ElasticsearchProjectSearchLakeArgs>> searchLake() {
        return Optional.ofNullable(this.searchLake);
    }

    private ElasticsearchProjectArgs() {}

    private ElasticsearchProjectArgs(ElasticsearchProjectArgs $) {
        this.alias = $.alias;
        this.name = $.name;
        this.optimizedFor = $.optimizedFor;
        this.regionId = $.regionId;
        this.searchLake = $.searchLake;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElasticsearchProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElasticsearchProjectArgs $;

        public Builder() {
            $ = new ElasticsearchProjectArgs();
        }

        public Builder(ElasticsearchProjectArgs defaults) {
            $ = new ElasticsearchProjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias A custom domain label compatible with RFC-1035 standards. Derived from the project name by default.
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias A custom domain label compatible with RFC-1035 standards. Derived from the project name by default.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param name Descriptive name for a project.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Descriptive name for a project.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param optimizedFor The purpose for which the hardware of this elasticsearch project is optimized for. Also known as the Elasticsearch project subtype.
         * 
         * @return builder
         * 
         */
        public Builder optimizedFor(@Nullable Output<String> optimizedFor) {
            $.optimizedFor = optimizedFor;
            return this;
        }

        /**
         * @param optimizedFor The purpose for which the hardware of this elasticsearch project is optimized for. Also known as the Elasticsearch project subtype.
         * 
         * @return builder
         * 
         */
        public Builder optimizedFor(String optimizedFor) {
            return optimizedFor(Output.of(optimizedFor));
        }

        /**
         * @param regionId Unique human-readable identifier for a region in Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder regionId(Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId Unique human-readable identifier for a region in Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        /**
         * @param searchLake Configuration for entire set of capabilities that make the data searchable in Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder searchLake(@Nullable Output<ElasticsearchProjectSearchLakeArgs> searchLake) {
            $.searchLake = searchLake;
            return this;
        }

        /**
         * @param searchLake Configuration for entire set of capabilities that make the data searchable in Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder searchLake(ElasticsearchProjectSearchLakeArgs searchLake) {
            return searchLake(Output.of(searchLake));
        }

        public ElasticsearchProjectArgs build() {
            if ($.regionId == null) {
                throw new MissingRequiredPropertyException("ElasticsearchProjectArgs", "regionId");
            }
            return $;
        }
    }

}
