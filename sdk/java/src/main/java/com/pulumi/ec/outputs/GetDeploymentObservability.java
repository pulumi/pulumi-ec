// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeploymentObservability {
    /**
     * @return Destination deployment ID for the shipped logs and monitoring metrics.
     * 
     */
    private String deploymentId;
    /**
     * @return Defines whether logs are shipped to the destination deployment.
     * 
     */
    private Boolean logs;
    /**
     * @return Defines whether metrics are shipped to the destination deployment.
     * 
     */
    private Boolean metrics;
    /**
     * @return Elasticsearch resource kind ref_id of the destination deployment.
     * 
     */
    private String refId;

    private GetDeploymentObservability() {}
    /**
     * @return Destination deployment ID for the shipped logs and monitoring metrics.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return Defines whether logs are shipped to the destination deployment.
     * 
     */
    public Boolean logs() {
        return this.logs;
    }
    /**
     * @return Defines whether metrics are shipped to the destination deployment.
     * 
     */
    public Boolean metrics() {
        return this.metrics;
    }
    /**
     * @return Elasticsearch resource kind ref_id of the destination deployment.
     * 
     */
    public String refId() {
        return this.refId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentObservability defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deploymentId;
        private Boolean logs;
        private Boolean metrics;
        private String refId;
        public Builder() {}
        public Builder(GetDeploymentObservability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentId = defaults.deploymentId;
    	      this.logs = defaults.logs;
    	      this.metrics = defaults.metrics;
    	      this.refId = defaults.refId;
        }

        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            if (deploymentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentObservability", "deploymentId");
            }
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder logs(Boolean logs) {
            if (logs == null) {
              throw new MissingRequiredPropertyException("GetDeploymentObservability", "logs");
            }
            this.logs = logs;
            return this;
        }
        @CustomType.Setter
        public Builder metrics(Boolean metrics) {
            if (metrics == null) {
              throw new MissingRequiredPropertyException("GetDeploymentObservability", "metrics");
            }
            this.metrics = metrics;
            return this;
        }
        @CustomType.Setter
        public Builder refId(String refId) {
            if (refId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentObservability", "refId");
            }
            this.refId = refId;
            return this;
        }
        public GetDeploymentObservability build() {
            final var _resultValue = new GetDeploymentObservability();
            _resultValue.deploymentId = deploymentId;
            _resultValue.logs = logs;
            _resultValue.metrics = metrics;
            _resultValue.refId = refId;
            return _resultValue;
        }
    }
}
