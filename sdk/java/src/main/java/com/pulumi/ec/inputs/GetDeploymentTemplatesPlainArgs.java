// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDeploymentTemplatesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDeploymentTemplatesPlainArgs Empty = new GetDeploymentTemplatesPlainArgs();

    /**
     * The id of the deployment template.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The id of the deployment template.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Region to select. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`.
     * 
     */
    @Import(name="region", required=true)
    private String region;

    /**
     * @return Region to select. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`.
     * 
     */
    public String region() {
        return this.region;
    }

    /**
     * Enable to also show deprecated deployment templates. (Set to false by default.)
     * 
     */
    @Import(name="showDeprecated")
    private @Nullable Boolean showDeprecated;

    /**
     * @return Enable to also show deprecated deployment templates. (Set to false by default.)
     * 
     */
    public Optional<Boolean> showDeprecated() {
        return Optional.ofNullable(this.showDeprecated);
    }

    /**
     * Filters for deployment templates compatible with this stack version.
     * 
     */
    @Import(name="stackVersion")
    private @Nullable String stackVersion;

    /**
     * @return Filters for deployment templates compatible with this stack version.
     * 
     */
    public Optional<String> stackVersion() {
        return Optional.ofNullable(this.stackVersion);
    }

    private GetDeploymentTemplatesPlainArgs() {}

    private GetDeploymentTemplatesPlainArgs(GetDeploymentTemplatesPlainArgs $) {
        this.id = $.id;
        this.region = $.region;
        this.showDeprecated = $.showDeprecated;
        this.stackVersion = $.stackVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeploymentTemplatesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeploymentTemplatesPlainArgs $;

        public Builder() {
            $ = new GetDeploymentTemplatesPlainArgs();
        }

        public Builder(GetDeploymentTemplatesPlainArgs defaults) {
            $ = new GetDeploymentTemplatesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The id of the deployment template.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param region Region to select. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            $.region = region;
            return this;
        }

        /**
         * @param showDeprecated Enable to also show deprecated deployment templates. (Set to false by default.)
         * 
         * @return builder
         * 
         */
        public Builder showDeprecated(@Nullable Boolean showDeprecated) {
            $.showDeprecated = showDeprecated;
            return this;
        }

        /**
         * @param stackVersion Filters for deployment templates compatible with this stack version.
         * 
         * @return builder
         * 
         */
        public Builder stackVersion(@Nullable String stackVersion) {
            $.stackVersion = stackVersion;
            return this;
        }

        public GetDeploymentTemplatesPlainArgs build() {
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GetDeploymentTemplatesPlainArgs", "region");
            }
            return $;
        }
    }

}
