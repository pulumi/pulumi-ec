// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SnapshotRepositoryGenericArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotRepositoryGenericArgs Empty = new SnapshotRepositoryGenericArgs();

    /**
     * An arbitrary JSON object containing the repository settings.
     * 
     */
    @Import(name="settings", required=true)
    private Output<String> settings;

    /**
     * @return An arbitrary JSON object containing the repository settings.
     * 
     */
    public Output<String> settings() {
        return this.settings;
    }

    /**
     * Repository type
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Repository type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private SnapshotRepositoryGenericArgs() {}

    private SnapshotRepositoryGenericArgs(SnapshotRepositoryGenericArgs $) {
        this.settings = $.settings;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotRepositoryGenericArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotRepositoryGenericArgs $;

        public Builder() {
            $ = new SnapshotRepositoryGenericArgs();
        }

        public Builder(SnapshotRepositoryGenericArgs defaults) {
            $ = new SnapshotRepositoryGenericArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param settings An arbitrary JSON object containing the repository settings.
         * 
         * @return builder
         * 
         */
        public Builder settings(Output<String> settings) {
            $.settings = settings;
            return this;
        }

        /**
         * @param settings An arbitrary JSON object containing the repository settings.
         * 
         * @return builder
         * 
         */
        public Builder settings(String settings) {
            return settings(Output.of(settings));
        }

        /**
         * @param type Repository type
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Repository type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SnapshotRepositoryGenericArgs build() {
            if ($.settings == null) {
                throw new MissingRequiredPropertyException("SnapshotRepositoryGenericArgs", "settings");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("SnapshotRepositoryGenericArgs", "type");
            }
            return $;
        }
    }

}
