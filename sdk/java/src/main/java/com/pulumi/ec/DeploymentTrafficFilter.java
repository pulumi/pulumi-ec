// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ec.DeploymentTrafficFilterArgs;
import com.pulumi.ec.Utilities;
import com.pulumi.ec.inputs.DeploymentTrafficFilterState;
import com.pulumi.ec.outputs.DeploymentTrafficFilterRule;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Elastic Cloud traffic filter resource, which allows traffic filter rules to be created, updated, and deleted. Traffic filter rules are used to limit inbound traffic to deployment resources.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * You can import traffic filters using the `id`, for example
 * 
 * ```sh
 *  $ pulumi import ec:index/deploymentTrafficFilter:DeploymentTrafficFilter name 320b7b540dfc967a7a649c18e2fce4ed
 * ```
 * 
 */
@ResourceType(type="ec:index/deploymentTrafficFilter:DeploymentTrafficFilter")
public class DeploymentTrafficFilter extends com.pulumi.resources.CustomResource {
    /**
     * Description of the ruleset.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the ruleset.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * To automatically include the ruleset in the new deployments. Defaults to `false`.
     * 
     */
    @Export(name="includeByDefault", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> includeByDefault;

    /**
     * @return To automatically include the ruleset in the new deployments. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> includeByDefault() {
        return Codegen.optional(this.includeByDefault);
    }
    /**
     * Name of the ruleset.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the ruleset.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Filter region, the ruleset can only be attached to deployments in the specific region.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return Filter region, the ruleset can only be attached to deployments in the specific region.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Rule block, which can be specified multiple times for multiple rules.
     * 
     */
    @Export(name="rules", type=List.class, parameters={DeploymentTrafficFilterRule.class})
    private Output<List<DeploymentTrafficFilterRule>> rules;

    /**
     * @return Rule block, which can be specified multiple times for multiple rules.
     * 
     */
    public Output<List<DeploymentTrafficFilterRule>> rules() {
        return this.rules;
    }
    /**
     * Type of the ruleset.  It can be `&#34;ip&#34;`, `&#34;vpce&#34;` or `&#34;azure_private_endpoint&#34;`.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Type of the ruleset.  It can be `&#34;ip&#34;`, `&#34;vpce&#34;` or `&#34;azure_private_endpoint&#34;`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DeploymentTrafficFilter(String name) {
        this(name, DeploymentTrafficFilterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DeploymentTrafficFilter(String name, DeploymentTrafficFilterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DeploymentTrafficFilter(String name, DeploymentTrafficFilterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ec:index/deploymentTrafficFilter:DeploymentTrafficFilter", name, args == null ? DeploymentTrafficFilterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DeploymentTrafficFilter(String name, Output<String> id, @Nullable DeploymentTrafficFilterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ec:index/deploymentTrafficFilter:DeploymentTrafficFilter", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DeploymentTrafficFilter get(String name, Output<String> id, @Nullable DeploymentTrafficFilterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DeploymentTrafficFilter(name, id, state, options);
    }
}
