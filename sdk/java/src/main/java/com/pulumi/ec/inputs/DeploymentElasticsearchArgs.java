// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ec.inputs.DeploymentElasticsearchConfigArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchExtensionArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchRemoteClusterArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchSnapshotSourceArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchStrategyArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchTopologyArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchTrustAccountArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchTrustExternalArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentElasticsearchArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentElasticsearchArgs Empty = new DeploymentElasticsearchArgs();

    /**
     * Enable or disable autoscaling. Defaults to the setting coming from the deployment template. Accepted values are `&#34;true&#34;` or `&#34;false&#34;`.
     * 
     */
    @Import(name="autoscale")
    private @Nullable Output<String> autoscale;

    /**
     * @return Enable or disable autoscaling. Defaults to the setting coming from the deployment template. Accepted values are `&#34;true&#34;` or `&#34;false&#34;`.
     * 
     */
    public Optional<Output<String>> autoscale() {
        return Optional.ofNullable(this.autoscale);
    }

    @Import(name="cloudId")
    private @Nullable Output<String> cloudId;

    public Optional<Output<String>> cloudId() {
        return Optional.ofNullable(this.cloudId);
    }

    /**
     * Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
     * 
     */
    @Import(name="config")
    private @Nullable Output<DeploymentElasticsearchConfigArgs> config;

    /**
     * @return Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
     * 
     */
    public Optional<Output<DeploymentElasticsearchConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * Custom Elasticsearch bundles or plugins. Can be set multiple times.
     * 
     */
    @Import(name="extensions")
    private @Nullable Output<List<DeploymentElasticsearchExtensionArgs>> extensions;

    /**
     * @return Custom Elasticsearch bundles or plugins. Can be set multiple times.
     * 
     */
    public Optional<Output<List<DeploymentElasticsearchExtensionArgs>>> extensions() {
        return Optional.ofNullable(this.extensions);
    }

    @Import(name="httpEndpoint")
    private @Nullable Output<String> httpEndpoint;

    public Optional<Output<String>> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }

    @Import(name="httpsEndpoint")
    private @Nullable Output<String> httpsEndpoint;

    public Optional<Output<String>> httpsEndpoint() {
        return Optional.ofNullable(this.httpsEndpoint);
    }

    /**
     * Can be set on the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     * 
     */
    @Import(name="refId")
    private @Nullable Output<String> refId;

    /**
     * @return Can be set on the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     * 
     */
    public Optional<Output<String>> refId() {
        return Optional.ofNullable(this.refId);
    }

    /**
     * Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
     * 
     */
    @Import(name="remoteClusters")
    private @Nullable Output<List<DeploymentElasticsearchRemoteClusterArgs>> remoteClusters;

    /**
     * @return Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
     * 
     */
    public Optional<Output<List<DeploymentElasticsearchRemoteClusterArgs>>> remoteClusters() {
        return Optional.ofNullable(this.remoteClusters);
    }

    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * Restores data from a snapshot of another deployment.
     * 
     */
    @Import(name="snapshotSource")
    private @Nullable Output<DeploymentElasticsearchSnapshotSourceArgs> snapshotSource;

    /**
     * @return Restores data from a snapshot of another deployment.
     * 
     */
    public Optional<Output<DeploymentElasticsearchSnapshotSourceArgs>> snapshotSource() {
        return Optional.ofNullable(this.snapshotSource);
    }

    /**
     * Choose the configuration strategy used to apply the changes.
     * 
     */
    @Import(name="strategy")
    private @Nullable Output<DeploymentElasticsearchStrategyArgs> strategy;

    /**
     * @return Choose the configuration strategy used to apply the changes.
     * 
     */
    public Optional<Output<DeploymentElasticsearchStrategyArgs>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    /**
     * Can be set multiple times to compose complex topologies.
     * 
     */
    @Import(name="topologies")
    private @Nullable Output<List<DeploymentElasticsearchTopologyArgs>> topologies;

    /**
     * @return Can be set multiple times to compose complex topologies.
     * 
     */
    public Optional<Output<List<DeploymentElasticsearchTopologyArgs>>> topologies() {
        return Optional.ofNullable(this.topologies);
    }

    /**
     * The trust relationships with other ESS accounts.
     * 
     */
    @Import(name="trustAccounts")
    private @Nullable Output<List<DeploymentElasticsearchTrustAccountArgs>> trustAccounts;

    /**
     * @return The trust relationships with other ESS accounts.
     * 
     */
    public Optional<Output<List<DeploymentElasticsearchTrustAccountArgs>>> trustAccounts() {
        return Optional.ofNullable(this.trustAccounts);
    }

    /**
     * The trust relationship with external entities (remote environments, remote accounts...).
     * 
     */
    @Import(name="trustExternals")
    private @Nullable Output<List<DeploymentElasticsearchTrustExternalArgs>> trustExternals;

    /**
     * @return The trust relationship with external entities (remote environments, remote accounts...).
     * 
     */
    public Optional<Output<List<DeploymentElasticsearchTrustExternalArgs>>> trustExternals() {
        return Optional.ofNullable(this.trustExternals);
    }

    private DeploymentElasticsearchArgs() {}

    private DeploymentElasticsearchArgs(DeploymentElasticsearchArgs $) {
        this.autoscale = $.autoscale;
        this.cloudId = $.cloudId;
        this.config = $.config;
        this.extensions = $.extensions;
        this.httpEndpoint = $.httpEndpoint;
        this.httpsEndpoint = $.httpsEndpoint;
        this.refId = $.refId;
        this.region = $.region;
        this.remoteClusters = $.remoteClusters;
        this.resourceId = $.resourceId;
        this.snapshotSource = $.snapshotSource;
        this.strategy = $.strategy;
        this.topologies = $.topologies;
        this.trustAccounts = $.trustAccounts;
        this.trustExternals = $.trustExternals;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentElasticsearchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentElasticsearchArgs $;

        public Builder() {
            $ = new DeploymentElasticsearchArgs();
        }

        public Builder(DeploymentElasticsearchArgs defaults) {
            $ = new DeploymentElasticsearchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscale Enable or disable autoscaling. Defaults to the setting coming from the deployment template. Accepted values are `&#34;true&#34;` or `&#34;false&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder autoscale(@Nullable Output<String> autoscale) {
            $.autoscale = autoscale;
            return this;
        }

        /**
         * @param autoscale Enable or disable autoscaling. Defaults to the setting coming from the deployment template. Accepted values are `&#34;true&#34;` or `&#34;false&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder autoscale(String autoscale) {
            return autoscale(Output.of(autoscale));
        }

        public Builder cloudId(@Nullable Output<String> cloudId) {
            $.cloudId = cloudId;
            return this;
        }

        public Builder cloudId(String cloudId) {
            return cloudId(Output.of(cloudId));
        }

        /**
         * @param config Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<DeploymentElasticsearchConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
         * 
         * @return builder
         * 
         */
        public Builder config(DeploymentElasticsearchConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param extensions Custom Elasticsearch bundles or plugins. Can be set multiple times.
         * 
         * @return builder
         * 
         */
        public Builder extensions(@Nullable Output<List<DeploymentElasticsearchExtensionArgs>> extensions) {
            $.extensions = extensions;
            return this;
        }

        /**
         * @param extensions Custom Elasticsearch bundles or plugins. Can be set multiple times.
         * 
         * @return builder
         * 
         */
        public Builder extensions(List<DeploymentElasticsearchExtensionArgs> extensions) {
            return extensions(Output.of(extensions));
        }

        /**
         * @param extensions Custom Elasticsearch bundles or plugins. Can be set multiple times.
         * 
         * @return builder
         * 
         */
        public Builder extensions(DeploymentElasticsearchExtensionArgs... extensions) {
            return extensions(List.of(extensions));
        }

        public Builder httpEndpoint(@Nullable Output<String> httpEndpoint) {
            $.httpEndpoint = httpEndpoint;
            return this;
        }

        public Builder httpEndpoint(String httpEndpoint) {
            return httpEndpoint(Output.of(httpEndpoint));
        }

        public Builder httpsEndpoint(@Nullable Output<String> httpsEndpoint) {
            $.httpsEndpoint = httpsEndpoint;
            return this;
        }

        public Builder httpsEndpoint(String httpsEndpoint) {
            return httpsEndpoint(Output.of(httpsEndpoint));
        }

        /**
         * @param refId Can be set on the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
         * 
         * @return builder
         * 
         */
        public Builder refId(@Nullable Output<String> refId) {
            $.refId = refId;
            return this;
        }

        /**
         * @param refId Can be set on the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
         * 
         * @return builder
         * 
         */
        public Builder refId(String refId) {
            return refId(Output.of(refId));
        }

        /**
         * @param region Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param remoteClusters Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
         * 
         * @return builder
         * 
         */
        public Builder remoteClusters(@Nullable Output<List<DeploymentElasticsearchRemoteClusterArgs>> remoteClusters) {
            $.remoteClusters = remoteClusters;
            return this;
        }

        /**
         * @param remoteClusters Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
         * 
         * @return builder
         * 
         */
        public Builder remoteClusters(List<DeploymentElasticsearchRemoteClusterArgs> remoteClusters) {
            return remoteClusters(Output.of(remoteClusters));
        }

        /**
         * @param remoteClusters Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
         * 
         * @return builder
         * 
         */
        public Builder remoteClusters(DeploymentElasticsearchRemoteClusterArgs... remoteClusters) {
            return remoteClusters(List.of(remoteClusters));
        }

        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param snapshotSource Restores data from a snapshot of another deployment.
         * 
         * @return builder
         * 
         */
        public Builder snapshotSource(@Nullable Output<DeploymentElasticsearchSnapshotSourceArgs> snapshotSource) {
            $.snapshotSource = snapshotSource;
            return this;
        }

        /**
         * @param snapshotSource Restores data from a snapshot of another deployment.
         * 
         * @return builder
         * 
         */
        public Builder snapshotSource(DeploymentElasticsearchSnapshotSourceArgs snapshotSource) {
            return snapshotSource(Output.of(snapshotSource));
        }

        /**
         * @param strategy Choose the configuration strategy used to apply the changes.
         * 
         * @return builder
         * 
         */
        public Builder strategy(@Nullable Output<DeploymentElasticsearchStrategyArgs> strategy) {
            $.strategy = strategy;
            return this;
        }

        /**
         * @param strategy Choose the configuration strategy used to apply the changes.
         * 
         * @return builder
         * 
         */
        public Builder strategy(DeploymentElasticsearchStrategyArgs strategy) {
            return strategy(Output.of(strategy));
        }

        /**
         * @param topologies Can be set multiple times to compose complex topologies.
         * 
         * @return builder
         * 
         */
        public Builder topologies(@Nullable Output<List<DeploymentElasticsearchTopologyArgs>> topologies) {
            $.topologies = topologies;
            return this;
        }

        /**
         * @param topologies Can be set multiple times to compose complex topologies.
         * 
         * @return builder
         * 
         */
        public Builder topologies(List<DeploymentElasticsearchTopologyArgs> topologies) {
            return topologies(Output.of(topologies));
        }

        /**
         * @param topologies Can be set multiple times to compose complex topologies.
         * 
         * @return builder
         * 
         */
        public Builder topologies(DeploymentElasticsearchTopologyArgs... topologies) {
            return topologies(List.of(topologies));
        }

        /**
         * @param trustAccounts The trust relationships with other ESS accounts.
         * 
         * @return builder
         * 
         */
        public Builder trustAccounts(@Nullable Output<List<DeploymentElasticsearchTrustAccountArgs>> trustAccounts) {
            $.trustAccounts = trustAccounts;
            return this;
        }

        /**
         * @param trustAccounts The trust relationships with other ESS accounts.
         * 
         * @return builder
         * 
         */
        public Builder trustAccounts(List<DeploymentElasticsearchTrustAccountArgs> trustAccounts) {
            return trustAccounts(Output.of(trustAccounts));
        }

        /**
         * @param trustAccounts The trust relationships with other ESS accounts.
         * 
         * @return builder
         * 
         */
        public Builder trustAccounts(DeploymentElasticsearchTrustAccountArgs... trustAccounts) {
            return trustAccounts(List.of(trustAccounts));
        }

        /**
         * @param trustExternals The trust relationship with external entities (remote environments, remote accounts...).
         * 
         * @return builder
         * 
         */
        public Builder trustExternals(@Nullable Output<List<DeploymentElasticsearchTrustExternalArgs>> trustExternals) {
            $.trustExternals = trustExternals;
            return this;
        }

        /**
         * @param trustExternals The trust relationship with external entities (remote environments, remote accounts...).
         * 
         * @return builder
         * 
         */
        public Builder trustExternals(List<DeploymentElasticsearchTrustExternalArgs> trustExternals) {
            return trustExternals(Output.of(trustExternals));
        }

        /**
         * @param trustExternals The trust relationship with external entities (remote environments, remote accounts...).
         * 
         * @return builder
         * 
         */
        public Builder trustExternals(DeploymentElasticsearchTrustExternalArgs... trustExternals) {
            return trustExternals(List.of(trustExternals));
        }

        public DeploymentElasticsearchArgs build() {
            return $;
        }
    }

}
