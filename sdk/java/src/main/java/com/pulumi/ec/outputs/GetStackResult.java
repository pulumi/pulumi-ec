// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.ec.outputs.GetStackApm;
import com.pulumi.ec.outputs.GetStackElasticsearch;
import com.pulumi.ec.outputs.GetStackEnterpriseSearch;
import com.pulumi.ec.outputs.GetStackKibana;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStackResult {
    /**
     * @return To have this version accessible/not accessible by the calling user. This is only relevant for Elasticsearch Service (ESS), not for ECE.
     * 
     */
    private Boolean accessible;
    /**
     * @return To include/not include this version in the `allowlist`. This is only relevant for Elasticsearch Service (ESS), not for ECE.
     * 
     */
    private Boolean allowlisted;
    /**
     * @return Information for APM workloads on this stack version.
     * * `apm.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `apm.#.capacity_constraints_min` - Minimum size of the instances.
     * * `apm.#.capacity_constraints_max` - Maximum size of the instances.
     * * `apm.#.compatible_node_types` - List of node types compatible with this one.
     * * `apm.#.docker_image` - Docker image to use for the APM instance.
     * 
     */
    private List<GetStackApm> apms;
    /**
     * @return Information for Elasticsearch workloads on this stack version.
     * * `elasticsearch.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `elasticsearch.#.capacity_constraints_min` - Minimum size of the instances.
     * * `elasticsearch.#.capacity_constraints_max` - Maximum size of the instances.
     * * `elasticsearch.#.compatible_node_types` - List of node types compatible with this one.
     * * `elasticsearch.#.default_plugins` - List of default plugins which are included in all Elasticsearch cluster instances.
     * * `elasticsearch.#.docker_image` - Docker image to use for the Elasticsearch cluster instances.
     * * `elasticsearch.#.plugins` - List of available plugins to be specified by users in Elasticsearch cluster instances.
     * 
     */
    private List<GetStackElasticsearch> elasticsearches;
    /**
     * @return Information for Enterprise Search workloads on this stack version.
     * * `enterprise_search.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `enterprise_search.#.capacity_constraints_min` - Minimum size of the instances.
     * * `enterprise_search.#.capacity_constraints_max` - Maximum size of the instances.
     * * `enterprise_search.#.compatible_node_types` - List of node types compatible with this one.
     * * `enterprise_search.#.docker_image` - Docker image to use for the Enterprise Search instance.
     * 
     */
    private List<GetStackEnterpriseSearch> enterpriseSearches;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Information for Kibana workloads on this stack version.
     * * `kibana.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `kibana.#.capacity_constraints_min` - Minimum size of the instances.
     * * `kibana.#.capacity_constraints_max` - Maximum size of the instances.
     * * `kibana.#.compatible_node_types` - List of node types compatible with this one.
     * * `kibana.#.docker_image` - Docker image to use for the Kibana instance.
     * 
     */
    private List<GetStackKibana> kibanas;
    private @Nullable Boolean lock;
    /**
     * @return The minimum stack version recommended.
     * 
     */
    private String minUpgradableFrom;
    private String region;
    /**
     * @return The stack version you can upgrade to.
     * 
     */
    private List<String> upgradableTos;
    /**
     * @return The stack version.
     * 
     */
    private String version;
    private String versionRegex;

    private GetStackResult() {}
    /**
     * @return To have this version accessible/not accessible by the calling user. This is only relevant for Elasticsearch Service (ESS), not for ECE.
     * 
     */
    public Boolean accessible() {
        return this.accessible;
    }
    /**
     * @return To include/not include this version in the `allowlist`. This is only relevant for Elasticsearch Service (ESS), not for ECE.
     * 
     */
    public Boolean allowlisted() {
        return this.allowlisted;
    }
    /**
     * @return Information for APM workloads on this stack version.
     * * `apm.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `apm.#.capacity_constraints_min` - Minimum size of the instances.
     * * `apm.#.capacity_constraints_max` - Maximum size of the instances.
     * * `apm.#.compatible_node_types` - List of node types compatible with this one.
     * * `apm.#.docker_image` - Docker image to use for the APM instance.
     * 
     */
    public List<GetStackApm> apms() {
        return this.apms;
    }
    /**
     * @return Information for Elasticsearch workloads on this stack version.
     * * `elasticsearch.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `elasticsearch.#.capacity_constraints_min` - Minimum size of the instances.
     * * `elasticsearch.#.capacity_constraints_max` - Maximum size of the instances.
     * * `elasticsearch.#.compatible_node_types` - List of node types compatible with this one.
     * * `elasticsearch.#.default_plugins` - List of default plugins which are included in all Elasticsearch cluster instances.
     * * `elasticsearch.#.docker_image` - Docker image to use for the Elasticsearch cluster instances.
     * * `elasticsearch.#.plugins` - List of available plugins to be specified by users in Elasticsearch cluster instances.
     * 
     */
    public List<GetStackElasticsearch> elasticsearches() {
        return this.elasticsearches;
    }
    /**
     * @return Information for Enterprise Search workloads on this stack version.
     * * `enterprise_search.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `enterprise_search.#.capacity_constraints_min` - Minimum size of the instances.
     * * `enterprise_search.#.capacity_constraints_max` - Maximum size of the instances.
     * * `enterprise_search.#.compatible_node_types` - List of node types compatible with this one.
     * * `enterprise_search.#.docker_image` - Docker image to use for the Enterprise Search instance.
     * 
     */
    public List<GetStackEnterpriseSearch> enterpriseSearches() {
        return this.enterpriseSearches;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Information for Kibana workloads on this stack version.
     * * `kibana.#.denylist` - List of configuration options that cannot be overridden by user settings.
     * * `kibana.#.capacity_constraints_min` - Minimum size of the instances.
     * * `kibana.#.capacity_constraints_max` - Maximum size of the instances.
     * * `kibana.#.compatible_node_types` - List of node types compatible with this one.
     * * `kibana.#.docker_image` - Docker image to use for the Kibana instance.
     * 
     */
    public List<GetStackKibana> kibanas() {
        return this.kibanas;
    }
    public Optional<Boolean> lock() {
        return Optional.ofNullable(this.lock);
    }
    /**
     * @return The minimum stack version recommended.
     * 
     */
    public String minUpgradableFrom() {
        return this.minUpgradableFrom;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return The stack version you can upgrade to.
     * 
     */
    public List<String> upgradableTos() {
        return this.upgradableTos;
    }
    /**
     * @return The stack version.
     * 
     */
    public String version() {
        return this.version;
    }
    public String versionRegex() {
        return this.versionRegex;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStackResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean accessible;
        private Boolean allowlisted;
        private List<GetStackApm> apms;
        private List<GetStackElasticsearch> elasticsearches;
        private List<GetStackEnterpriseSearch> enterpriseSearches;
        private String id;
        private List<GetStackKibana> kibanas;
        private @Nullable Boolean lock;
        private String minUpgradableFrom;
        private String region;
        private List<String> upgradableTos;
        private String version;
        private String versionRegex;
        public Builder() {}
        public Builder(GetStackResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessible = defaults.accessible;
    	      this.allowlisted = defaults.allowlisted;
    	      this.apms = defaults.apms;
    	      this.elasticsearches = defaults.elasticsearches;
    	      this.enterpriseSearches = defaults.enterpriseSearches;
    	      this.id = defaults.id;
    	      this.kibanas = defaults.kibanas;
    	      this.lock = defaults.lock;
    	      this.minUpgradableFrom = defaults.minUpgradableFrom;
    	      this.region = defaults.region;
    	      this.upgradableTos = defaults.upgradableTos;
    	      this.version = defaults.version;
    	      this.versionRegex = defaults.versionRegex;
        }

        @CustomType.Setter
        public Builder accessible(Boolean accessible) {
            this.accessible = Objects.requireNonNull(accessible);
            return this;
        }
        @CustomType.Setter
        public Builder allowlisted(Boolean allowlisted) {
            this.allowlisted = Objects.requireNonNull(allowlisted);
            return this;
        }
        @CustomType.Setter
        public Builder apms(List<GetStackApm> apms) {
            this.apms = Objects.requireNonNull(apms);
            return this;
        }
        public Builder apms(GetStackApm... apms) {
            return apms(List.of(apms));
        }
        @CustomType.Setter
        public Builder elasticsearches(List<GetStackElasticsearch> elasticsearches) {
            this.elasticsearches = Objects.requireNonNull(elasticsearches);
            return this;
        }
        public Builder elasticsearches(GetStackElasticsearch... elasticsearches) {
            return elasticsearches(List.of(elasticsearches));
        }
        @CustomType.Setter
        public Builder enterpriseSearches(List<GetStackEnterpriseSearch> enterpriseSearches) {
            this.enterpriseSearches = Objects.requireNonNull(enterpriseSearches);
            return this;
        }
        public Builder enterpriseSearches(GetStackEnterpriseSearch... enterpriseSearches) {
            return enterpriseSearches(List.of(enterpriseSearches));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder kibanas(List<GetStackKibana> kibanas) {
            this.kibanas = Objects.requireNonNull(kibanas);
            return this;
        }
        public Builder kibanas(GetStackKibana... kibanas) {
            return kibanas(List.of(kibanas));
        }
        @CustomType.Setter
        public Builder lock(@Nullable Boolean lock) {
            this.lock = lock;
            return this;
        }
        @CustomType.Setter
        public Builder minUpgradableFrom(String minUpgradableFrom) {
            this.minUpgradableFrom = Objects.requireNonNull(minUpgradableFrom);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder upgradableTos(List<String> upgradableTos) {
            this.upgradableTos = Objects.requireNonNull(upgradableTos);
            return this;
        }
        public Builder upgradableTos(String... upgradableTos) {
            return upgradableTos(List.of(upgradableTos));
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        @CustomType.Setter
        public Builder versionRegex(String versionRegex) {
            this.versionRegex = Objects.requireNonNull(versionRegex);
            return this;
        }
        public GetStackResult build() {
            final var o = new GetStackResult();
            o.accessible = accessible;
            o.allowlisted = allowlisted;
            o.apms = apms;
            o.elasticsearches = elasticsearches;
            o.enterpriseSearches = enterpriseSearches;
            o.id = id;
            o.kibanas = kibanas;
            o.lock = lock;
            o.minUpgradableFrom = minUpgradableFrom;
            o.region = region;
            o.upgradableTos = upgradableTos;
            o.version = version;
            o.versionRegex = versionRegex;
            return o;
        }
    }
}
