// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ec.inputs.DeploymentElasticsearchSnapshotRepositoryArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentElasticsearchSnapshotArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentElasticsearchSnapshotArgs Empty = new DeploymentElasticsearchSnapshotArgs();

    /**
     * Indicates if Snapshotting is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Indicates if Snapshotting is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Snapshot repository configuration
     * 
     */
    @Import(name="repository")
    private @Nullable Output<DeploymentElasticsearchSnapshotRepositoryArgs> repository;

    /**
     * @return Snapshot repository configuration
     * 
     */
    public Optional<Output<DeploymentElasticsearchSnapshotRepositoryArgs>> repository() {
        return Optional.ofNullable(this.repository);
    }

    private DeploymentElasticsearchSnapshotArgs() {}

    private DeploymentElasticsearchSnapshotArgs(DeploymentElasticsearchSnapshotArgs $) {
        this.enabled = $.enabled;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentElasticsearchSnapshotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentElasticsearchSnapshotArgs $;

        public Builder() {
            $ = new DeploymentElasticsearchSnapshotArgs();
        }

        public Builder(DeploymentElasticsearchSnapshotArgs defaults) {
            $ = new DeploymentElasticsearchSnapshotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Indicates if Snapshotting is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Indicates if Snapshotting is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param repository Snapshot repository configuration
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<DeploymentElasticsearchSnapshotRepositoryArgs> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository Snapshot repository configuration
         * 
         * @return builder
         * 
         */
        public Builder repository(DeploymentElasticsearchSnapshotRepositoryArgs repository) {
            return repository(Output.of(repository));
        }

        public DeploymentElasticsearchSnapshotArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("DeploymentElasticsearchSnapshotArgs", "enabled");
            }
            return $;
        }
    }

}
