// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ec.inputs.DeploymentTrafficFilterRuleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentTrafficFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentTrafficFilterArgs Empty = new DeploymentTrafficFilterArgs();

    /**
     * Description of the ruleset.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the ruleset.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * To automatically include the ruleset in the new deployments. Defaults to `false`.
     * 
     */
    @Import(name="includeByDefault")
    private @Nullable Output<Boolean> includeByDefault;

    /**
     * @return To automatically include the ruleset in the new deployments. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> includeByDefault() {
        return Optional.ofNullable(this.includeByDefault);
    }

    /**
     * Name of the ruleset.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the ruleset.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Filter region, the ruleset can only be attached to deployments in the specific region.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return Filter region, the ruleset can only be attached to deployments in the specific region.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * Rule block, which can be specified multiple times for multiple rules.
     * 
     */
    @Import(name="rules", required=true)
    private Output<List<DeploymentTrafficFilterRuleArgs>> rules;

    /**
     * @return Rule block, which can be specified multiple times for multiple rules.
     * 
     */
    public Output<List<DeploymentTrafficFilterRuleArgs>> rules() {
        return this.rules;
    }

    /**
     * Type of the ruleset.  It can be `&#34;ip&#34;`, `&#34;vpce&#34;`, `&#34;azure_private_endpoint&#34;`, or `&#34;gcp_private_service_connect_endpoint&#34;`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of the ruleset.  It can be `&#34;ip&#34;`, `&#34;vpce&#34;`, `&#34;azure_private_endpoint&#34;`, or `&#34;gcp_private_service_connect_endpoint&#34;`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DeploymentTrafficFilterArgs() {}

    private DeploymentTrafficFilterArgs(DeploymentTrafficFilterArgs $) {
        this.description = $.description;
        this.includeByDefault = $.includeByDefault;
        this.name = $.name;
        this.region = $.region;
        this.rules = $.rules;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentTrafficFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentTrafficFilterArgs $;

        public Builder() {
            $ = new DeploymentTrafficFilterArgs();
        }

        public Builder(DeploymentTrafficFilterArgs defaults) {
            $ = new DeploymentTrafficFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param includeByDefault To automatically include the ruleset in the new deployments. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder includeByDefault(@Nullable Output<Boolean> includeByDefault) {
            $.includeByDefault = includeByDefault;
            return this;
        }

        /**
         * @param includeByDefault To automatically include the ruleset in the new deployments. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder includeByDefault(Boolean includeByDefault) {
            return includeByDefault(Output.of(includeByDefault));
        }

        /**
         * @param name Name of the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region Filter region, the ruleset can only be attached to deployments in the specific region.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Filter region, the ruleset can only be attached to deployments in the specific region.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param rules Rule block, which can be specified multiple times for multiple rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<List<DeploymentTrafficFilterRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Rule block, which can be specified multiple times for multiple rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<DeploymentTrafficFilterRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Rule block, which can be specified multiple times for multiple rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(DeploymentTrafficFilterRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param type Type of the ruleset.  It can be `&#34;ip&#34;`, `&#34;vpce&#34;`, `&#34;azure_private_endpoint&#34;`, or `&#34;gcp_private_service_connect_endpoint&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the ruleset.  It can be `&#34;ip&#34;`, `&#34;vpce&#34;`, `&#34;azure_private_endpoint&#34;`, or `&#34;gcp_private_service_connect_endpoint&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DeploymentTrafficFilterArgs build() {
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
