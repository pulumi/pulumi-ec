// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ec.inputs.DeploymentApmArgs;
import com.pulumi.ec.inputs.DeploymentElasticsearchArgs;
import com.pulumi.ec.inputs.DeploymentEnterpriseSearchArgs;
import com.pulumi.ec.inputs.DeploymentIntegrationsServerArgs;
import com.pulumi.ec.inputs.DeploymentKibanaArgs;
import com.pulumi.ec.inputs.DeploymentObservabilityArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentState extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentState Empty = new DeploymentState();

    /**
     * Deployment alias, affects the format of the resource URLs.
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return Deployment alias, affects the format of the resource URLs.
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * **DEPRECATED** (Optional) APM instance definition, can only be specified once. It should only be used with deployments with a version prior to 8.0.0.
     * 
     */
    @Import(name="apm")
    private @Nullable Output<DeploymentApmArgs> apm;

    /**
     * @return **DEPRECATED** (Optional) APM instance definition, can only be specified once. It should only be used with deployments with a version prior to 8.0.0.
     * 
     */
    public Optional<Output<DeploymentApmArgs>> apm() {
        return Optional.ofNullable(this.apm);
    }

    /**
     * Auto-generated APM secret_token, empty unless an `apm` resource is specified.
     * * `elasticsearch.#.resource_id` - Elasticsearch resource unique identifier.
     * * `elasticsearch.#.region` - Elasticsearch region.
     * * `elasticsearch.#.cloud_id` - Encoded Elasticsearch credentials to use in Beats or Logstash. For more information, see [Configure Beats and Logstash with Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html).
     * * `elasticsearch.#.http_endpoint` - Elasticsearch resource HTTP endpoint.
     * * `elasticsearch.#.https_endpoint` - Elasticsearch resource HTTPs endpoint.
     * * `elasticsearch.#.topology.#.instance_configuration_id` - instance configuration of the deployment topology element.
     * * `elasticsearch.#.topology.#.node_type_data` - Node type (data) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_type_master` - Node type (master) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_type_ingest` - Node type (ingest) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_type_ml` - Node type (machine learning) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_roles` - List of roles for the topology element. They are inferred from the deployment template.
     * * `elasticsearch.#.topology.#.autoscaling.#.policy_override_json` - Computed policy overrides set directly via the API or other clients.
     * * `elasticsearch.#.snapshot_source.#.source_elasticsearch_cluster_id` - ID of the Elasticsearch cluster that will be used as the source of the snapshot.
     * * `elasticsearch.#.snapshot_source.#.snapshot_name` - Name of the snapshot to restore.
     * * `kibana.#.resource_id` - Kibana resource unique identifier.
     * * `kibana.#.region` - Kibana region.
     * * `kibana.#.http_endpoint` - Kibana resource HTTP endpoint.
     * * `kibana.#.https_endpoint` - Kibana resource HTTPs endpoint.
     * * `integrations_server.#.resource_id` - Integrations Server resource unique identifier.
     * * `integrations_server.#.region` - Integrations Server region.
     * * `integrations_server.#.http_endpoint` - Integrations Server resource HTTP endpoint.
     * * `integrations_server.#.https_endpoint` - Integrations Server resource HTTPs endpoint.
     * * `integrations_server.#.fleet_https_endpoint` - HTTPs endpoint for Fleet Server.
     * * `integrations_server.#.apm_https_endpoint` - HTTPs endpoint for APM Server.
     * * `apm.#.resource_id` - APM resource unique identifier.
     * * `apm.#.region` - APM region.
     * * `apm.#.http_endpoint` - APM resource HTTP endpoint.
     * * `apm.#.https_endpoint` - APM resource HTTPs endpoint.
     * * `enterprise_search.#.resource_id` - Enterprise Search resource unique identifier.
     * * `enterprise_search.#.region` - Enterprise Search region.
     * * `enterprise_search.#.http_endpoint` - Enterprise Search resource HTTP endpoint.
     * * `enterprise_search.#.https_endpoint` - Enterprise Search resource HTTPs endpoint.
     * * `enterprise_search.#.topology.#.node_type_appserver` - Node type (Appserver) for the Enterprise Search topology element.
     * * `enterprise_search.#.topology.#.node_type_connector` - Node type (Connector) for the Enterprise Search topology element.
     * * `enterprise_search.#.topology.#.node_type_worker` - Node type (worker) for the Enterprise Search topology element.
     * * `observability.#.deployment_id` - Destination deployment ID for the shipped logs and monitoring metrics. Use `self` as destination deployment ID to target the current deployment.
     * * `observability.#.ref_id` - (Optional) Elasticsearch resource kind ref_id of the destination deployment.
     * * `observability.#.logs` - Enables or disables shipping logs. Defaults to true.
     * * `observability.#.metrics` - Enables or disables shipping metrics. Defaults to true.
     * 
     */
    @Import(name="apmSecretToken")
    private @Nullable Output<String> apmSecretToken;

    /**
     * @return Auto-generated APM secret_token, empty unless an `apm` resource is specified.
     * * `elasticsearch.#.resource_id` - Elasticsearch resource unique identifier.
     * * `elasticsearch.#.region` - Elasticsearch region.
     * * `elasticsearch.#.cloud_id` - Encoded Elasticsearch credentials to use in Beats or Logstash. For more information, see [Configure Beats and Logstash with Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html).
     * * `elasticsearch.#.http_endpoint` - Elasticsearch resource HTTP endpoint.
     * * `elasticsearch.#.https_endpoint` - Elasticsearch resource HTTPs endpoint.
     * * `elasticsearch.#.topology.#.instance_configuration_id` - instance configuration of the deployment topology element.
     * * `elasticsearch.#.topology.#.node_type_data` - Node type (data) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_type_master` - Node type (master) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_type_ingest` - Node type (ingest) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_type_ml` - Node type (machine learning) for the Elasticsearch topology element.
     * * `elasticsearch.#.topology.#.node_roles` - List of roles for the topology element. They are inferred from the deployment template.
     * * `elasticsearch.#.topology.#.autoscaling.#.policy_override_json` - Computed policy overrides set directly via the API or other clients.
     * * `elasticsearch.#.snapshot_source.#.source_elasticsearch_cluster_id` - ID of the Elasticsearch cluster that will be used as the source of the snapshot.
     * * `elasticsearch.#.snapshot_source.#.snapshot_name` - Name of the snapshot to restore.
     * * `kibana.#.resource_id` - Kibana resource unique identifier.
     * * `kibana.#.region` - Kibana region.
     * * `kibana.#.http_endpoint` - Kibana resource HTTP endpoint.
     * * `kibana.#.https_endpoint` - Kibana resource HTTPs endpoint.
     * * `integrations_server.#.resource_id` - Integrations Server resource unique identifier.
     * * `integrations_server.#.region` - Integrations Server region.
     * * `integrations_server.#.http_endpoint` - Integrations Server resource HTTP endpoint.
     * * `integrations_server.#.https_endpoint` - Integrations Server resource HTTPs endpoint.
     * * `integrations_server.#.fleet_https_endpoint` - HTTPs endpoint for Fleet Server.
     * * `integrations_server.#.apm_https_endpoint` - HTTPs endpoint for APM Server.
     * * `apm.#.resource_id` - APM resource unique identifier.
     * * `apm.#.region` - APM region.
     * * `apm.#.http_endpoint` - APM resource HTTP endpoint.
     * * `apm.#.https_endpoint` - APM resource HTTPs endpoint.
     * * `enterprise_search.#.resource_id` - Enterprise Search resource unique identifier.
     * * `enterprise_search.#.region` - Enterprise Search region.
     * * `enterprise_search.#.http_endpoint` - Enterprise Search resource HTTP endpoint.
     * * `enterprise_search.#.https_endpoint` - Enterprise Search resource HTTPs endpoint.
     * * `enterprise_search.#.topology.#.node_type_appserver` - Node type (Appserver) for the Enterprise Search topology element.
     * * `enterprise_search.#.topology.#.node_type_connector` - Node type (Connector) for the Enterprise Search topology element.
     * * `enterprise_search.#.topology.#.node_type_worker` - Node type (worker) for the Enterprise Search topology element.
     * * `observability.#.deployment_id` - Destination deployment ID for the shipped logs and monitoring metrics. Use `self` as destination deployment ID to target the current deployment.
     * * `observability.#.ref_id` - (Optional) Elasticsearch resource kind ref_id of the destination deployment.
     * * `observability.#.logs` - Enables or disables shipping logs. Defaults to true.
     * * `observability.#.metrics` - Enables or disables shipping metrics. Defaults to true.
     * 
     */
    public Optional<Output<String>> apmSecretToken() {
        return Optional.ofNullable(this.apmSecretToken);
    }

    /**
     * Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
     * 
     */
    @Import(name="deploymentTemplateId")
    private @Nullable Output<String> deploymentTemplateId;

    /**
     * @return Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
     * 
     */
    public Optional<Output<String>> deploymentTemplateId() {
        return Optional.ofNullable(this.deploymentTemplateId);
    }

    /**
     * Elasticsearch cluster definition, can only be specified once. For multi-node Elasticsearch clusters, use multiple `topology` blocks.
     * 
     */
    @Import(name="elasticsearch")
    private @Nullable Output<DeploymentElasticsearchArgs> elasticsearch;

    /**
     * @return Elasticsearch cluster definition, can only be specified once. For multi-node Elasticsearch clusters, use multiple `topology` blocks.
     * 
     */
    public Optional<Output<DeploymentElasticsearchArgs>> elasticsearch() {
        return Optional.ofNullable(this.elasticsearch);
    }

    /**
     * Auto-generated Elasticsearch password.
     * 
     */
    @Import(name="elasticsearchPassword")
    private @Nullable Output<String> elasticsearchPassword;

    /**
     * @return Auto-generated Elasticsearch password.
     * 
     */
    public Optional<Output<String>> elasticsearchPassword() {
        return Optional.ofNullable(this.elasticsearchPassword);
    }

    /**
     * Auto-generated Elasticsearch username.
     * 
     */
    @Import(name="elasticsearchUsername")
    private @Nullable Output<String> elasticsearchUsername;

    /**
     * @return Auto-generated Elasticsearch username.
     * 
     */
    public Optional<Output<String>> elasticsearchUsername() {
        return Optional.ofNullable(this.elasticsearchUsername);
    }

    /**
     * Enterprise Search server definition, can only be specified once. For multi-node Enterprise Search deployments, use multiple `topology` blocks.
     * 
     */
    @Import(name="enterpriseSearch")
    private @Nullable Output<DeploymentEnterpriseSearchArgs> enterpriseSearch;

    /**
     * @return Enterprise Search server definition, can only be specified once. For multi-node Enterprise Search deployments, use multiple `topology` blocks.
     * 
     */
    public Optional<Output<DeploymentEnterpriseSearchArgs>> enterpriseSearch() {
        return Optional.ofNullable(this.enterpriseSearch);
    }

    /**
     * Integrations Server instance definition, can only be specified once. It has replaced `apm` in stack version 8.0.0.
     * 
     */
    @Import(name="integrationsServer")
    private @Nullable Output<DeploymentIntegrationsServerArgs> integrationsServer;

    /**
     * @return Integrations Server instance definition, can only be specified once. It has replaced `apm` in stack version 8.0.0.
     * 
     */
    public Optional<Output<DeploymentIntegrationsServerArgs>> integrationsServer() {
        return Optional.ofNullable(this.integrationsServer);
    }

    /**
     * Kibana instance definition, can only be specified once.
     * 
     */
    @Import(name="kibana")
    private @Nullable Output<DeploymentKibanaArgs> kibana;

    /**
     * @return Kibana instance definition, can only be specified once.
     * 
     */
    public Optional<Output<DeploymentKibanaArgs>> kibana() {
        return Optional.ofNullable(this.kibana);
    }

    /**
     * Name of the deployment.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the deployment.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the current deployment itself.
     * 
     */
    @Import(name="observability")
    private @Nullable Output<DeploymentObservabilityArgs> observability;

    /**
     * @return Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the current deployment itself.
     * 
     */
    public Optional<Output<DeploymentObservabilityArgs>> observability() {
        return Optional.ofNullable(this.observability);
    }

    /**
     * Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Request ID to set when you create the deployment. Use it only when previous attempts return an error and `request_id` is returned as part of the error.
     * 
     */
    @Import(name="requestId")
    private @Nullable Output<String> requestId;

    /**
     * @return Request ID to set when you create the deployment. Use it only when previous attempts return an error and `request_id` is returned as part of the error.
     * 
     */
    public Optional<Output<String>> requestId() {
        return Optional.ofNullable(this.requestId);
    }

    /**
     * Key value map of arbitrary string tags.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Key value map of arbitrary string tags.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * List of traffic filter rule identifiers that will be applied to the deployment.
     * 
     */
    @Import(name="trafficFilters")
    private @Nullable Output<List<String>> trafficFilters;

    /**
     * @return List of traffic filter rule identifiers that will be applied to the deployment.
     * 
     */
    public Optional<Output<List<String>>> trafficFilters() {
        return Optional.ofNullable(this.trafficFilters);
    }

    /**
     * Elastic Stack version to use for all the deployment resources.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Elastic Stack version to use for all the deployment resources.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private DeploymentState() {}

    private DeploymentState(DeploymentState $) {
        this.alias = $.alias;
        this.apm = $.apm;
        this.apmSecretToken = $.apmSecretToken;
        this.deploymentTemplateId = $.deploymentTemplateId;
        this.elasticsearch = $.elasticsearch;
        this.elasticsearchPassword = $.elasticsearchPassword;
        this.elasticsearchUsername = $.elasticsearchUsername;
        this.enterpriseSearch = $.enterpriseSearch;
        this.integrationsServer = $.integrationsServer;
        this.kibana = $.kibana;
        this.name = $.name;
        this.observability = $.observability;
        this.region = $.region;
        this.requestId = $.requestId;
        this.tags = $.tags;
        this.trafficFilters = $.trafficFilters;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentState $;

        public Builder() {
            $ = new DeploymentState();
        }

        public Builder(DeploymentState defaults) {
            $ = new DeploymentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias Deployment alias, affects the format of the resource URLs.
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias Deployment alias, affects the format of the resource URLs.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param apm **DEPRECATED** (Optional) APM instance definition, can only be specified once. It should only be used with deployments with a version prior to 8.0.0.
         * 
         * @return builder
         * 
         */
        public Builder apm(@Nullable Output<DeploymentApmArgs> apm) {
            $.apm = apm;
            return this;
        }

        /**
         * @param apm **DEPRECATED** (Optional) APM instance definition, can only be specified once. It should only be used with deployments with a version prior to 8.0.0.
         * 
         * @return builder
         * 
         */
        public Builder apm(DeploymentApmArgs apm) {
            return apm(Output.of(apm));
        }

        /**
         * @param apmSecretToken Auto-generated APM secret_token, empty unless an `apm` resource is specified.
         * * `elasticsearch.#.resource_id` - Elasticsearch resource unique identifier.
         * * `elasticsearch.#.region` - Elasticsearch region.
         * * `elasticsearch.#.cloud_id` - Encoded Elasticsearch credentials to use in Beats or Logstash. For more information, see [Configure Beats and Logstash with Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html).
         * * `elasticsearch.#.http_endpoint` - Elasticsearch resource HTTP endpoint.
         * * `elasticsearch.#.https_endpoint` - Elasticsearch resource HTTPs endpoint.
         * * `elasticsearch.#.topology.#.instance_configuration_id` - instance configuration of the deployment topology element.
         * * `elasticsearch.#.topology.#.node_type_data` - Node type (data) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_type_master` - Node type (master) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_type_ingest` - Node type (ingest) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_type_ml` - Node type (machine learning) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_roles` - List of roles for the topology element. They are inferred from the deployment template.
         * * `elasticsearch.#.topology.#.autoscaling.#.policy_override_json` - Computed policy overrides set directly via the API or other clients.
         * * `elasticsearch.#.snapshot_source.#.source_elasticsearch_cluster_id` - ID of the Elasticsearch cluster that will be used as the source of the snapshot.
         * * `elasticsearch.#.snapshot_source.#.snapshot_name` - Name of the snapshot to restore.
         * * `kibana.#.resource_id` - Kibana resource unique identifier.
         * * `kibana.#.region` - Kibana region.
         * * `kibana.#.http_endpoint` - Kibana resource HTTP endpoint.
         * * `kibana.#.https_endpoint` - Kibana resource HTTPs endpoint.
         * * `integrations_server.#.resource_id` - Integrations Server resource unique identifier.
         * * `integrations_server.#.region` - Integrations Server region.
         * * `integrations_server.#.http_endpoint` - Integrations Server resource HTTP endpoint.
         * * `integrations_server.#.https_endpoint` - Integrations Server resource HTTPs endpoint.
         * * `integrations_server.#.fleet_https_endpoint` - HTTPs endpoint for Fleet Server.
         * * `integrations_server.#.apm_https_endpoint` - HTTPs endpoint for APM Server.
         * * `apm.#.resource_id` - APM resource unique identifier.
         * * `apm.#.region` - APM region.
         * * `apm.#.http_endpoint` - APM resource HTTP endpoint.
         * * `apm.#.https_endpoint` - APM resource HTTPs endpoint.
         * * `enterprise_search.#.resource_id` - Enterprise Search resource unique identifier.
         * * `enterprise_search.#.region` - Enterprise Search region.
         * * `enterprise_search.#.http_endpoint` - Enterprise Search resource HTTP endpoint.
         * * `enterprise_search.#.https_endpoint` - Enterprise Search resource HTTPs endpoint.
         * * `enterprise_search.#.topology.#.node_type_appserver` - Node type (Appserver) for the Enterprise Search topology element.
         * * `enterprise_search.#.topology.#.node_type_connector` - Node type (Connector) for the Enterprise Search topology element.
         * * `enterprise_search.#.topology.#.node_type_worker` - Node type (worker) for the Enterprise Search topology element.
         * * `observability.#.deployment_id` - Destination deployment ID for the shipped logs and monitoring metrics. Use `self` as destination deployment ID to target the current deployment.
         * * `observability.#.ref_id` - (Optional) Elasticsearch resource kind ref_id of the destination deployment.
         * * `observability.#.logs` - Enables or disables shipping logs. Defaults to true.
         * * `observability.#.metrics` - Enables or disables shipping metrics. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder apmSecretToken(@Nullable Output<String> apmSecretToken) {
            $.apmSecretToken = apmSecretToken;
            return this;
        }

        /**
         * @param apmSecretToken Auto-generated APM secret_token, empty unless an `apm` resource is specified.
         * * `elasticsearch.#.resource_id` - Elasticsearch resource unique identifier.
         * * `elasticsearch.#.region` - Elasticsearch region.
         * * `elasticsearch.#.cloud_id` - Encoded Elasticsearch credentials to use in Beats or Logstash. For more information, see [Configure Beats and Logstash with Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html).
         * * `elasticsearch.#.http_endpoint` - Elasticsearch resource HTTP endpoint.
         * * `elasticsearch.#.https_endpoint` - Elasticsearch resource HTTPs endpoint.
         * * `elasticsearch.#.topology.#.instance_configuration_id` - instance configuration of the deployment topology element.
         * * `elasticsearch.#.topology.#.node_type_data` - Node type (data) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_type_master` - Node type (master) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_type_ingest` - Node type (ingest) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_type_ml` - Node type (machine learning) for the Elasticsearch topology element.
         * * `elasticsearch.#.topology.#.node_roles` - List of roles for the topology element. They are inferred from the deployment template.
         * * `elasticsearch.#.topology.#.autoscaling.#.policy_override_json` - Computed policy overrides set directly via the API or other clients.
         * * `elasticsearch.#.snapshot_source.#.source_elasticsearch_cluster_id` - ID of the Elasticsearch cluster that will be used as the source of the snapshot.
         * * `elasticsearch.#.snapshot_source.#.snapshot_name` - Name of the snapshot to restore.
         * * `kibana.#.resource_id` - Kibana resource unique identifier.
         * * `kibana.#.region` - Kibana region.
         * * `kibana.#.http_endpoint` - Kibana resource HTTP endpoint.
         * * `kibana.#.https_endpoint` - Kibana resource HTTPs endpoint.
         * * `integrations_server.#.resource_id` - Integrations Server resource unique identifier.
         * * `integrations_server.#.region` - Integrations Server region.
         * * `integrations_server.#.http_endpoint` - Integrations Server resource HTTP endpoint.
         * * `integrations_server.#.https_endpoint` - Integrations Server resource HTTPs endpoint.
         * * `integrations_server.#.fleet_https_endpoint` - HTTPs endpoint for Fleet Server.
         * * `integrations_server.#.apm_https_endpoint` - HTTPs endpoint for APM Server.
         * * `apm.#.resource_id` - APM resource unique identifier.
         * * `apm.#.region` - APM region.
         * * `apm.#.http_endpoint` - APM resource HTTP endpoint.
         * * `apm.#.https_endpoint` - APM resource HTTPs endpoint.
         * * `enterprise_search.#.resource_id` - Enterprise Search resource unique identifier.
         * * `enterprise_search.#.region` - Enterprise Search region.
         * * `enterprise_search.#.http_endpoint` - Enterprise Search resource HTTP endpoint.
         * * `enterprise_search.#.https_endpoint` - Enterprise Search resource HTTPs endpoint.
         * * `enterprise_search.#.topology.#.node_type_appserver` - Node type (Appserver) for the Enterprise Search topology element.
         * * `enterprise_search.#.topology.#.node_type_connector` - Node type (Connector) for the Enterprise Search topology element.
         * * `enterprise_search.#.topology.#.node_type_worker` - Node type (worker) for the Enterprise Search topology element.
         * * `observability.#.deployment_id` - Destination deployment ID for the shipped logs and monitoring metrics. Use `self` as destination deployment ID to target the current deployment.
         * * `observability.#.ref_id` - (Optional) Elasticsearch resource kind ref_id of the destination deployment.
         * * `observability.#.logs` - Enables or disables shipping logs. Defaults to true.
         * * `observability.#.metrics` - Enables or disables shipping metrics. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder apmSecretToken(String apmSecretToken) {
            return apmSecretToken(Output.of(apmSecretToken));
        }

        /**
         * @param deploymentTemplateId Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTemplateId(@Nullable Output<String> deploymentTemplateId) {
            $.deploymentTemplateId = deploymentTemplateId;
            return this;
        }

        /**
         * @param deploymentTemplateId Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTemplateId(String deploymentTemplateId) {
            return deploymentTemplateId(Output.of(deploymentTemplateId));
        }

        /**
         * @param elasticsearch Elasticsearch cluster definition, can only be specified once. For multi-node Elasticsearch clusters, use multiple `topology` blocks.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearch(@Nullable Output<DeploymentElasticsearchArgs> elasticsearch) {
            $.elasticsearch = elasticsearch;
            return this;
        }

        /**
         * @param elasticsearch Elasticsearch cluster definition, can only be specified once. For multi-node Elasticsearch clusters, use multiple `topology` blocks.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearch(DeploymentElasticsearchArgs elasticsearch) {
            return elasticsearch(Output.of(elasticsearch));
        }

        /**
         * @param elasticsearchPassword Auto-generated Elasticsearch password.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchPassword(@Nullable Output<String> elasticsearchPassword) {
            $.elasticsearchPassword = elasticsearchPassword;
            return this;
        }

        /**
         * @param elasticsearchPassword Auto-generated Elasticsearch password.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchPassword(String elasticsearchPassword) {
            return elasticsearchPassword(Output.of(elasticsearchPassword));
        }

        /**
         * @param elasticsearchUsername Auto-generated Elasticsearch username.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchUsername(@Nullable Output<String> elasticsearchUsername) {
            $.elasticsearchUsername = elasticsearchUsername;
            return this;
        }

        /**
         * @param elasticsearchUsername Auto-generated Elasticsearch username.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchUsername(String elasticsearchUsername) {
            return elasticsearchUsername(Output.of(elasticsearchUsername));
        }

        /**
         * @param enterpriseSearch Enterprise Search server definition, can only be specified once. For multi-node Enterprise Search deployments, use multiple `topology` blocks.
         * 
         * @return builder
         * 
         */
        public Builder enterpriseSearch(@Nullable Output<DeploymentEnterpriseSearchArgs> enterpriseSearch) {
            $.enterpriseSearch = enterpriseSearch;
            return this;
        }

        /**
         * @param enterpriseSearch Enterprise Search server definition, can only be specified once. For multi-node Enterprise Search deployments, use multiple `topology` blocks.
         * 
         * @return builder
         * 
         */
        public Builder enterpriseSearch(DeploymentEnterpriseSearchArgs enterpriseSearch) {
            return enterpriseSearch(Output.of(enterpriseSearch));
        }

        /**
         * @param integrationsServer Integrations Server instance definition, can only be specified once. It has replaced `apm` in stack version 8.0.0.
         * 
         * @return builder
         * 
         */
        public Builder integrationsServer(@Nullable Output<DeploymentIntegrationsServerArgs> integrationsServer) {
            $.integrationsServer = integrationsServer;
            return this;
        }

        /**
         * @param integrationsServer Integrations Server instance definition, can only be specified once. It has replaced `apm` in stack version 8.0.0.
         * 
         * @return builder
         * 
         */
        public Builder integrationsServer(DeploymentIntegrationsServerArgs integrationsServer) {
            return integrationsServer(Output.of(integrationsServer));
        }

        /**
         * @param kibana Kibana instance definition, can only be specified once.
         * 
         * @return builder
         * 
         */
        public Builder kibana(@Nullable Output<DeploymentKibanaArgs> kibana) {
            $.kibana = kibana;
            return this;
        }

        /**
         * @param kibana Kibana instance definition, can only be specified once.
         * 
         * @return builder
         * 
         */
        public Builder kibana(DeploymentKibanaArgs kibana) {
            return kibana(Output.of(kibana));
        }

        /**
         * @param name Name of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param observability Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the current deployment itself.
         * 
         * @return builder
         * 
         */
        public Builder observability(@Nullable Output<DeploymentObservabilityArgs> observability) {
            $.observability = observability;
            return this;
        }

        /**
         * @param observability Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the current deployment itself.
         * 
         * @return builder
         * 
         */
        public Builder observability(DeploymentObservabilityArgs observability) {
            return observability(Output.of(observability));
        }

        /**
         * @param region Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param requestId Request ID to set when you create the deployment. Use it only when previous attempts return an error and `request_id` is returned as part of the error.
         * 
         * @return builder
         * 
         */
        public Builder requestId(@Nullable Output<String> requestId) {
            $.requestId = requestId;
            return this;
        }

        /**
         * @param requestId Request ID to set when you create the deployment. Use it only when previous attempts return an error and `request_id` is returned as part of the error.
         * 
         * @return builder
         * 
         */
        public Builder requestId(String requestId) {
            return requestId(Output.of(requestId));
        }

        /**
         * @param tags Key value map of arbitrary string tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Key value map of arbitrary string tags.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param trafficFilters List of traffic filter rule identifiers that will be applied to the deployment.
         * 
         * @return builder
         * 
         */
        public Builder trafficFilters(@Nullable Output<List<String>> trafficFilters) {
            $.trafficFilters = trafficFilters;
            return this;
        }

        /**
         * @param trafficFilters List of traffic filter rule identifiers that will be applied to the deployment.
         * 
         * @return builder
         * 
         */
        public Builder trafficFilters(List<String> trafficFilters) {
            return trafficFilters(Output.of(trafficFilters));
        }

        /**
         * @param trafficFilters List of traffic filter rule identifiers that will be applied to the deployment.
         * 
         * @return builder
         * 
         */
        public Builder trafficFilters(String... trafficFilters) {
            return trafficFilters(List.of(trafficFilters));
        }

        /**
         * @param version Elastic Stack version to use for all the deployment resources.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Elastic Stack version to use for all the deployment resources.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public DeploymentState build() {
            return $;
        }
    }

}
