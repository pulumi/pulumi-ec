// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentElasticsearchTrustExternalArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentElasticsearchTrustExternalArgs Empty = new DeploymentElasticsearchTrustExternalArgs();

    /**
     * The ID of the external trust relationship.
     * 
     */
    @Import(name="relationshipId", required=true)
    private Output<String> relationshipId;

    /**
     * @return The ID of the external trust relationship.
     * 
     */
    public Output<String> relationshipId() {
        return this.relationshipId;
    }

    /**
     * If true, all clusters in this account will by default be trusted and the `trust_allowlist` is ignored.
     * 
     */
    @Import(name="trustAll", required=true)
    private Output<Boolean> trustAll;

    /**
     * @return If true, all clusters in this account will by default be trusted and the `trust_allowlist` is ignored.
     * 
     */
    public Output<Boolean> trustAll() {
        return this.trustAll;
    }

    /**
     * The list of clusters to trust. Only used when `trust_all` is false.
     * 
     */
    @Import(name="trustAllowlists")
    private @Nullable Output<List<String>> trustAllowlists;

    /**
     * @return The list of clusters to trust. Only used when `trust_all` is false.
     * 
     */
    public Optional<Output<List<String>>> trustAllowlists() {
        return Optional.ofNullable(this.trustAllowlists);
    }

    private DeploymentElasticsearchTrustExternalArgs() {}

    private DeploymentElasticsearchTrustExternalArgs(DeploymentElasticsearchTrustExternalArgs $) {
        this.relationshipId = $.relationshipId;
        this.trustAll = $.trustAll;
        this.trustAllowlists = $.trustAllowlists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentElasticsearchTrustExternalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentElasticsearchTrustExternalArgs $;

        public Builder() {
            $ = new DeploymentElasticsearchTrustExternalArgs();
        }

        public Builder(DeploymentElasticsearchTrustExternalArgs defaults) {
            $ = new DeploymentElasticsearchTrustExternalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param relationshipId The ID of the external trust relationship.
         * 
         * @return builder
         * 
         */
        public Builder relationshipId(Output<String> relationshipId) {
            $.relationshipId = relationshipId;
            return this;
        }

        /**
         * @param relationshipId The ID of the external trust relationship.
         * 
         * @return builder
         * 
         */
        public Builder relationshipId(String relationshipId) {
            return relationshipId(Output.of(relationshipId));
        }

        /**
         * @param trustAll If true, all clusters in this account will by default be trusted and the `trust_allowlist` is ignored.
         * 
         * @return builder
         * 
         */
        public Builder trustAll(Output<Boolean> trustAll) {
            $.trustAll = trustAll;
            return this;
        }

        /**
         * @param trustAll If true, all clusters in this account will by default be trusted and the `trust_allowlist` is ignored.
         * 
         * @return builder
         * 
         */
        public Builder trustAll(Boolean trustAll) {
            return trustAll(Output.of(trustAll));
        }

        /**
         * @param trustAllowlists The list of clusters to trust. Only used when `trust_all` is false.
         * 
         * @return builder
         * 
         */
        public Builder trustAllowlists(@Nullable Output<List<String>> trustAllowlists) {
            $.trustAllowlists = trustAllowlists;
            return this;
        }

        /**
         * @param trustAllowlists The list of clusters to trust. Only used when `trust_all` is false.
         * 
         * @return builder
         * 
         */
        public Builder trustAllowlists(List<String> trustAllowlists) {
            return trustAllowlists(Output.of(trustAllowlists));
        }

        /**
         * @param trustAllowlists The list of clusters to trust. Only used when `trust_all` is false.
         * 
         * @return builder
         * 
         */
        public Builder trustAllowlists(String... trustAllowlists) {
            return trustAllowlists(List.of(trustAllowlists));
        }

        public DeploymentElasticsearchTrustExternalArgs build() {
            if ($.relationshipId == null) {
                throw new MissingRequiredPropertyException("DeploymentElasticsearchTrustExternalArgs", "relationshipId");
            }
            if ($.trustAll == null) {
                throw new MissingRequiredPropertyException("DeploymentElasticsearchTrustExternalArgs", "trustAll");
            }
            return $;
        }
    }

}
