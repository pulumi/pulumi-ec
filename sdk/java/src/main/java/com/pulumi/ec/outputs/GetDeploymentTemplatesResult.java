// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.ec.outputs.GetDeploymentTemplatesTemplate;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentTemplatesResult {
    /**
     * @return Filters for a deployment template with this id.
     * 
     */
    private @Nullable String id;
    /**
     * @return Region to select. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`.
     * 
     */
    private String region;
    /**
     * @return Enable to also show deprecated deployment templates. (Set to false by default.)
     * 
     */
    private @Nullable Boolean showDeprecated;
    /**
     * @return Filters for deployment templates compatible with this stack version.
     * 
     */
    private @Nullable String stackVersion;
    /**
     * @return List of available deployment templates.
     * 
     */
    private List<GetDeploymentTemplatesTemplate> templates;

    private GetDeploymentTemplatesResult() {}
    /**
     * @return Filters for a deployment template with this id.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Region to select. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Enable to also show deprecated deployment templates. (Set to false by default.)
     * 
     */
    public Optional<Boolean> showDeprecated() {
        return Optional.ofNullable(this.showDeprecated);
    }
    /**
     * @return Filters for deployment templates compatible with this stack version.
     * 
     */
    public Optional<String> stackVersion() {
        return Optional.ofNullable(this.stackVersion);
    }
    /**
     * @return List of available deployment templates.
     * 
     */
    public List<GetDeploymentTemplatesTemplate> templates() {
        return this.templates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentTemplatesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private String region;
        private @Nullable Boolean showDeprecated;
        private @Nullable String stackVersion;
        private List<GetDeploymentTemplatesTemplate> templates;
        public Builder() {}
        public Builder(GetDeploymentTemplatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.region = defaults.region;
    	      this.showDeprecated = defaults.showDeprecated;
    	      this.stackVersion = defaults.stackVersion;
    	      this.templates = defaults.templates;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetDeploymentTemplatesResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder showDeprecated(@Nullable Boolean showDeprecated) {

            this.showDeprecated = showDeprecated;
            return this;
        }
        @CustomType.Setter
        public Builder stackVersion(@Nullable String stackVersion) {

            this.stackVersion = stackVersion;
            return this;
        }
        @CustomType.Setter
        public Builder templates(List<GetDeploymentTemplatesTemplate> templates) {
            if (templates == null) {
              throw new MissingRequiredPropertyException("GetDeploymentTemplatesResult", "templates");
            }
            this.templates = templates;
            return this;
        }
        public Builder templates(GetDeploymentTemplatesTemplate... templates) {
            return templates(List.of(templates));
        }
        public GetDeploymentTemplatesResult build() {
            final var _resultValue = new GetDeploymentTemplatesResult();
            _resultValue.id = id;
            _resultValue.region = region;
            _resultValue.showDeprecated = showDeprecated;
            _resultValue.stackVersion = stackVersion;
            _resultValue.templates = templates;
            return _resultValue;
        }
    }
}
