// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ec.inputs.OrganizationMembersArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationState Empty = new OrganizationState();

    /**
     * Manages the members of an Elastic Cloud organization. The key of each entry should be the email of the member.
     * 
     */
    @Import(name="members")
    private @Nullable Output<Map<String,OrganizationMembersArgs>> members;

    /**
     * @return Manages the members of an Elastic Cloud organization. The key of each entry should be the email of the member.
     * 
     */
    public Optional<Output<Map<String,OrganizationMembersArgs>>> members() {
        return Optional.ofNullable(this.members);
    }

    private OrganizationState() {}

    private OrganizationState(OrganizationState $) {
        this.members = $.members;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationState $;

        public Builder() {
            $ = new OrganizationState();
        }

        public Builder(OrganizationState defaults) {
            $ = new OrganizationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param members Manages the members of an Elastic Cloud organization. The key of each entry should be the email of the member.
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable Output<Map<String,OrganizationMembersArgs>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members Manages the members of an Elastic Cloud organization. The key of each entry should be the email of the member.
         * 
         * @return builder
         * 
         */
        public Builder members(Map<String,OrganizationMembersArgs> members) {
            return members(Output.of(members));
        }

        public OrganizationState build() {
            return $;
        }
    }

}
