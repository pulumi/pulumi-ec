// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DeploymentElasticsearchExtension {
    /**
     * @return Extension name.
     * 
     */
    private String name;
    /**
     * @return Extension type, only `bundle` or `plugin` are supported.
     * 
     */
    private String type;
    /**
     * @return Bundle or plugin URL, the extension URL can be obtained from the `ec_deployment_extension.&lt;name&gt;.url` attribute or the API and cannot be a random HTTP address that is hosted elsewhere.
     * 
     */
    private String url;
    /**
     * @return Elasticsearch compatibility version. Bundles should specify major or minor versions with wildcards, such as `7.*` or `*` but **plugins must use full version notation down to the patch level**, such as `7.10.1` and wildcards are not allowed.
     * 
     */
    private String version;

    private DeploymentElasticsearchExtension() {}
    /**
     * @return Extension name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Extension type, only `bundle` or `plugin` are supported.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Bundle or plugin URL, the extension URL can be obtained from the `ec_deployment_extension.&lt;name&gt;.url` attribute or the API and cannot be a random HTTP address that is hosted elsewhere.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return Elasticsearch compatibility version. Bundles should specify major or minor versions with wildcards, such as `7.*` or `*` but **plugins must use full version notation down to the patch level**, such as `7.10.1` and wildcards are not allowed.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentElasticsearchExtension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String type;
        private String url;
        private String version;
        public Builder() {}
        public Builder(DeploymentElasticsearchExtension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("DeploymentElasticsearchExtension", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DeploymentElasticsearchExtension", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("DeploymentElasticsearchExtension", "url");
            }
            this.url = url;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("DeploymentElasticsearchExtension", "version");
            }
            this.version = version;
            return this;
        }
        public DeploymentElasticsearchExtension build() {
            final var _resultValue = new DeploymentElasticsearchExtension();
            _resultValue.name = name;
            _resultValue.type = type;
            _resultValue.url = url;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
