// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.ec.outputs.DeploymentIntegrationsServerConfig;
import com.pulumi.ec.outputs.DeploymentIntegrationsServerEndpoints;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentIntegrationsServer {
    /**
     * @return Optionally define the Integrations Server configuration options for the IntegrationsServer Server
     * 
     */
    private @Nullable DeploymentIntegrationsServerConfig config;
    private @Nullable String elasticsearchClusterRefId;
    /**
     * @return URLs for the accessing the Fleet and APM API&#39;s within this Integrations Server resource.
     * 
     */
    private @Nullable DeploymentIntegrationsServerEndpoints endpoints;
    private @Nullable String httpEndpoint;
    private @Nullable String httpsEndpoint;
    private @Nullable String instanceConfigurationId;
    private @Nullable String refId;
    /**
     * @return Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `&#34;ece-region&#34;.
     * 
     */
    private @Nullable String region;
    private @Nullable String resourceId;
    private @Nullable String size;
    /**
     * @return Optional size type, defaults to &#34;memory&#34;.
     * 
     */
    private @Nullable String sizeResource;
    private @Nullable Integer zoneCount;

    private DeploymentIntegrationsServer() {}
    /**
     * @return Optionally define the Integrations Server configuration options for the IntegrationsServer Server
     * 
     */
    public Optional<DeploymentIntegrationsServerConfig> config() {
        return Optional.ofNullable(this.config);
    }
    public Optional<String> elasticsearchClusterRefId() {
        return Optional.ofNullable(this.elasticsearchClusterRefId);
    }
    /**
     * @return URLs for the accessing the Fleet and APM API&#39;s within this Integrations Server resource.
     * 
     */
    public Optional<DeploymentIntegrationsServerEndpoints> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }
    public Optional<String> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }
    public Optional<String> httpsEndpoint() {
        return Optional.ofNullable(this.httpsEndpoint);
    }
    public Optional<String> instanceConfigurationId() {
        return Optional.ofNullable(this.instanceConfigurationId);
    }
    public Optional<String> refId() {
        return Optional.ofNullable(this.refId);
    }
    /**
     * @return Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `&#34;ece-region&#34;.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }
    /**
     * @return Optional size type, defaults to &#34;memory&#34;.
     * 
     */
    public Optional<String> sizeResource() {
        return Optional.ofNullable(this.sizeResource);
    }
    public Optional<Integer> zoneCount() {
        return Optional.ofNullable(this.zoneCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentIntegrationsServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DeploymentIntegrationsServerConfig config;
        private @Nullable String elasticsearchClusterRefId;
        private @Nullable DeploymentIntegrationsServerEndpoints endpoints;
        private @Nullable String httpEndpoint;
        private @Nullable String httpsEndpoint;
        private @Nullable String instanceConfigurationId;
        private @Nullable String refId;
        private @Nullable String region;
        private @Nullable String resourceId;
        private @Nullable String size;
        private @Nullable String sizeResource;
        private @Nullable Integer zoneCount;
        public Builder() {}
        public Builder(DeploymentIntegrationsServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.elasticsearchClusterRefId = defaults.elasticsearchClusterRefId;
    	      this.endpoints = defaults.endpoints;
    	      this.httpEndpoint = defaults.httpEndpoint;
    	      this.httpsEndpoint = defaults.httpsEndpoint;
    	      this.instanceConfigurationId = defaults.instanceConfigurationId;
    	      this.refId = defaults.refId;
    	      this.region = defaults.region;
    	      this.resourceId = defaults.resourceId;
    	      this.size = defaults.size;
    	      this.sizeResource = defaults.sizeResource;
    	      this.zoneCount = defaults.zoneCount;
        }

        @CustomType.Setter
        public Builder config(@Nullable DeploymentIntegrationsServerConfig config) {
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder elasticsearchClusterRefId(@Nullable String elasticsearchClusterRefId) {
            this.elasticsearchClusterRefId = elasticsearchClusterRefId;
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(@Nullable DeploymentIntegrationsServerEndpoints endpoints) {
            this.endpoints = endpoints;
            return this;
        }
        @CustomType.Setter
        public Builder httpEndpoint(@Nullable String httpEndpoint) {
            this.httpEndpoint = httpEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder httpsEndpoint(@Nullable String httpsEndpoint) {
            this.httpsEndpoint = httpsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder instanceConfigurationId(@Nullable String instanceConfigurationId) {
            this.instanceConfigurationId = instanceConfigurationId;
            return this;
        }
        @CustomType.Setter
        public Builder refId(@Nullable String refId) {
            this.refId = refId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable String size) {
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder sizeResource(@Nullable String sizeResource) {
            this.sizeResource = sizeResource;
            return this;
        }
        @CustomType.Setter
        public Builder zoneCount(@Nullable Integer zoneCount) {
            this.zoneCount = zoneCount;
            return this;
        }
        public DeploymentIntegrationsServer build() {
            final var o = new DeploymentIntegrationsServer();
            o.config = config;
            o.elasticsearchClusterRefId = elasticsearchClusterRefId;
            o.endpoints = endpoints;
            o.httpEndpoint = httpEndpoint;
            o.httpsEndpoint = httpsEndpoint;
            o.instanceConfigurationId = instanceConfigurationId;
            o.refId = refId;
            o.region = region;
            o.resourceId = resourceId;
            o.size = size;
            o.sizeResource = sizeResource;
            o.zoneCount = zoneCount;
            return o;
        }
    }
}
