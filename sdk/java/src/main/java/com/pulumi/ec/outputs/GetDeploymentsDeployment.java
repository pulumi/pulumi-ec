// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeployment {
    private String alias;
    private String apmRefId;
    private String apmResourceId;
    private String deploymentId;
    private String elasticsearchRefId;
    private String elasticsearchResourceId;
    private String enterpriseSearchRefId;
    private String enterpriseSearchResourceId;
    private String integrationsServerRefId;
    private String integrationsServerResourceId;
    private String kibanaRefId;
    private String kibanaResourceId;
    private String name;

    private GetDeploymentsDeployment() {}
    public String alias() {
        return this.alias;
    }
    public String apmRefId() {
        return this.apmRefId;
    }
    public String apmResourceId() {
        return this.apmResourceId;
    }
    public String deploymentId() {
        return this.deploymentId;
    }
    public String elasticsearchRefId() {
        return this.elasticsearchRefId;
    }
    public String elasticsearchResourceId() {
        return this.elasticsearchResourceId;
    }
    public String enterpriseSearchRefId() {
        return this.enterpriseSearchRefId;
    }
    public String enterpriseSearchResourceId() {
        return this.enterpriseSearchResourceId;
    }
    public String integrationsServerRefId() {
        return this.integrationsServerRefId;
    }
    public String integrationsServerResourceId() {
        return this.integrationsServerResourceId;
    }
    public String kibanaRefId() {
        return this.kibanaRefId;
    }
    public String kibanaResourceId() {
        return this.kibanaResourceId;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeployment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alias;
        private String apmRefId;
        private String apmResourceId;
        private String deploymentId;
        private String elasticsearchRefId;
        private String elasticsearchResourceId;
        private String enterpriseSearchRefId;
        private String enterpriseSearchResourceId;
        private String integrationsServerRefId;
        private String integrationsServerResourceId;
        private String kibanaRefId;
        private String kibanaResourceId;
        private String name;
        public Builder() {}
        public Builder(GetDeploymentsDeployment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alias = defaults.alias;
    	      this.apmRefId = defaults.apmRefId;
    	      this.apmResourceId = defaults.apmResourceId;
    	      this.deploymentId = defaults.deploymentId;
    	      this.elasticsearchRefId = defaults.elasticsearchRefId;
    	      this.elasticsearchResourceId = defaults.elasticsearchResourceId;
    	      this.enterpriseSearchRefId = defaults.enterpriseSearchRefId;
    	      this.enterpriseSearchResourceId = defaults.enterpriseSearchResourceId;
    	      this.integrationsServerRefId = defaults.integrationsServerRefId;
    	      this.integrationsServerResourceId = defaults.integrationsServerResourceId;
    	      this.kibanaRefId = defaults.kibanaRefId;
    	      this.kibanaResourceId = defaults.kibanaResourceId;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder alias(String alias) {
            this.alias = Objects.requireNonNull(alias);
            return this;
        }
        @CustomType.Setter
        public Builder apmRefId(String apmRefId) {
            this.apmRefId = Objects.requireNonNull(apmRefId);
            return this;
        }
        @CustomType.Setter
        public Builder apmResourceId(String apmResourceId) {
            this.apmResourceId = Objects.requireNonNull(apmResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            this.deploymentId = Objects.requireNonNull(deploymentId);
            return this;
        }
        @CustomType.Setter
        public Builder elasticsearchRefId(String elasticsearchRefId) {
            this.elasticsearchRefId = Objects.requireNonNull(elasticsearchRefId);
            return this;
        }
        @CustomType.Setter
        public Builder elasticsearchResourceId(String elasticsearchResourceId) {
            this.elasticsearchResourceId = Objects.requireNonNull(elasticsearchResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseSearchRefId(String enterpriseSearchRefId) {
            this.enterpriseSearchRefId = Objects.requireNonNull(enterpriseSearchRefId);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseSearchResourceId(String enterpriseSearchResourceId) {
            this.enterpriseSearchResourceId = Objects.requireNonNull(enterpriseSearchResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder integrationsServerRefId(String integrationsServerRefId) {
            this.integrationsServerRefId = Objects.requireNonNull(integrationsServerRefId);
            return this;
        }
        @CustomType.Setter
        public Builder integrationsServerResourceId(String integrationsServerResourceId) {
            this.integrationsServerResourceId = Objects.requireNonNull(integrationsServerResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder kibanaRefId(String kibanaRefId) {
            this.kibanaRefId = Objects.requireNonNull(kibanaRefId);
            return this;
        }
        @CustomType.Setter
        public Builder kibanaResourceId(String kibanaResourceId) {
            this.kibanaResourceId = Objects.requireNonNull(kibanaResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetDeploymentsDeployment build() {
            final var o = new GetDeploymentsDeployment();
            o.alias = alias;
            o.apmRefId = apmRefId;
            o.apmResourceId = apmResourceId;
            o.deploymentId = deploymentId;
            o.elasticsearchRefId = elasticsearchRefId;
            o.elasticsearchResourceId = elasticsearchResourceId;
            o.enterpriseSearchRefId = enterpriseSearchRefId;
            o.enterpriseSearchResourceId = enterpriseSearchResourceId;
            o.integrationsServerRefId = integrationsServerRefId;
            o.integrationsServerResourceId = integrationsServerResourceId;
            o.kibanaRefId = kibanaRefId;
            o.kibanaResourceId = kibanaResourceId;
            o.name = name;
            return o;
        }
    }
}
