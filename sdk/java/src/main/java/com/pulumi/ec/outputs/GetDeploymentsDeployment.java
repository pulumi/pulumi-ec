// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeployment {
    /**
     * @return Deployment alias.
     * 
     */
    private String alias;
    /**
     * @return The APM resource reference.
     * 
     */
    private String apmRefId;
    /**
     * @return The APM resource unique ID.
     * 
     */
    private String apmResourceId;
    /**
     * @return The deployment unique ID.
     * 
     */
    private String deploymentId;
    /**
     * @return The Elasticsearch resource reference.
     * 
     */
    private String elasticsearchRefId;
    /**
     * @return The Elasticsearch resource unique ID.
     * 
     */
    private String elasticsearchResourceId;
    /**
     * @return The Enterprise Search resource reference.
     * 
     */
    private String enterpriseSearchRefId;
    /**
     * @return The Enterprise Search resource unique ID.
     * 
     */
    private String enterpriseSearchResourceId;
    /**
     * @return The Integrations Server resource reference.
     * 
     */
    private String integrationsServerRefId;
    /**
     * @return The Integrations Server resource unique ID.
     * 
     */
    private String integrationsServerResourceId;
    /**
     * @return The Kibana resource reference.
     * 
     */
    private String kibanaRefId;
    /**
     * @return The Kibana resource unique ID.
     * 
     */
    private String kibanaResourceId;
    /**
     * @return The name of the deployment.
     * 
     */
    private String name;

    private GetDeploymentsDeployment() {}
    /**
     * @return Deployment alias.
     * 
     */
    public String alias() {
        return this.alias;
    }
    /**
     * @return The APM resource reference.
     * 
     */
    public String apmRefId() {
        return this.apmRefId;
    }
    /**
     * @return The APM resource unique ID.
     * 
     */
    public String apmResourceId() {
        return this.apmResourceId;
    }
    /**
     * @return The deployment unique ID.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return The Elasticsearch resource reference.
     * 
     */
    public String elasticsearchRefId() {
        return this.elasticsearchRefId;
    }
    /**
     * @return The Elasticsearch resource unique ID.
     * 
     */
    public String elasticsearchResourceId() {
        return this.elasticsearchResourceId;
    }
    /**
     * @return The Enterprise Search resource reference.
     * 
     */
    public String enterpriseSearchRefId() {
        return this.enterpriseSearchRefId;
    }
    /**
     * @return The Enterprise Search resource unique ID.
     * 
     */
    public String enterpriseSearchResourceId() {
        return this.enterpriseSearchResourceId;
    }
    /**
     * @return The Integrations Server resource reference.
     * 
     */
    public String integrationsServerRefId() {
        return this.integrationsServerRefId;
    }
    /**
     * @return The Integrations Server resource unique ID.
     * 
     */
    public String integrationsServerResourceId() {
        return this.integrationsServerResourceId;
    }
    /**
     * @return The Kibana resource reference.
     * 
     */
    public String kibanaRefId() {
        return this.kibanaRefId;
    }
    /**
     * @return The Kibana resource unique ID.
     * 
     */
    public String kibanaResourceId() {
        return this.kibanaResourceId;
    }
    /**
     * @return The name of the deployment.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeployment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alias;
        private String apmRefId;
        private String apmResourceId;
        private String deploymentId;
        private String elasticsearchRefId;
        private String elasticsearchResourceId;
        private String enterpriseSearchRefId;
        private String enterpriseSearchResourceId;
        private String integrationsServerRefId;
        private String integrationsServerResourceId;
        private String kibanaRefId;
        private String kibanaResourceId;
        private String name;
        public Builder() {}
        public Builder(GetDeploymentsDeployment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alias = defaults.alias;
    	      this.apmRefId = defaults.apmRefId;
    	      this.apmResourceId = defaults.apmResourceId;
    	      this.deploymentId = defaults.deploymentId;
    	      this.elasticsearchRefId = defaults.elasticsearchRefId;
    	      this.elasticsearchResourceId = defaults.elasticsearchResourceId;
    	      this.enterpriseSearchRefId = defaults.enterpriseSearchRefId;
    	      this.enterpriseSearchResourceId = defaults.enterpriseSearchResourceId;
    	      this.integrationsServerRefId = defaults.integrationsServerRefId;
    	      this.integrationsServerResourceId = defaults.integrationsServerResourceId;
    	      this.kibanaRefId = defaults.kibanaRefId;
    	      this.kibanaResourceId = defaults.kibanaResourceId;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder alias(String alias) {
            if (alias == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "alias");
            }
            this.alias = alias;
            return this;
        }
        @CustomType.Setter
        public Builder apmRefId(String apmRefId) {
            if (apmRefId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "apmRefId");
            }
            this.apmRefId = apmRefId;
            return this;
        }
        @CustomType.Setter
        public Builder apmResourceId(String apmResourceId) {
            if (apmResourceId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "apmResourceId");
            }
            this.apmResourceId = apmResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            if (deploymentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "deploymentId");
            }
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder elasticsearchRefId(String elasticsearchRefId) {
            if (elasticsearchRefId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "elasticsearchRefId");
            }
            this.elasticsearchRefId = elasticsearchRefId;
            return this;
        }
        @CustomType.Setter
        public Builder elasticsearchResourceId(String elasticsearchResourceId) {
            if (elasticsearchResourceId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "elasticsearchResourceId");
            }
            this.elasticsearchResourceId = elasticsearchResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseSearchRefId(String enterpriseSearchRefId) {
            if (enterpriseSearchRefId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "enterpriseSearchRefId");
            }
            this.enterpriseSearchRefId = enterpriseSearchRefId;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseSearchResourceId(String enterpriseSearchResourceId) {
            if (enterpriseSearchResourceId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "enterpriseSearchResourceId");
            }
            this.enterpriseSearchResourceId = enterpriseSearchResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder integrationsServerRefId(String integrationsServerRefId) {
            if (integrationsServerRefId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "integrationsServerRefId");
            }
            this.integrationsServerRefId = integrationsServerRefId;
            return this;
        }
        @CustomType.Setter
        public Builder integrationsServerResourceId(String integrationsServerResourceId) {
            if (integrationsServerResourceId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "integrationsServerResourceId");
            }
            this.integrationsServerResourceId = integrationsServerResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder kibanaRefId(String kibanaRefId) {
            if (kibanaRefId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "kibanaRefId");
            }
            this.kibanaRefId = kibanaRefId;
            return this;
        }
        @CustomType.Setter
        public Builder kibanaResourceId(String kibanaResourceId) {
            if (kibanaResourceId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "kibanaResourceId");
            }
            this.kibanaResourceId = kibanaResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeployment", "name");
            }
            this.name = name;
            return this;
        }
        public GetDeploymentsDeployment build() {
            final var _resultValue = new GetDeploymentsDeployment();
            _resultValue.alias = alias;
            _resultValue.apmRefId = apmRefId;
            _resultValue.apmResourceId = apmResourceId;
            _resultValue.deploymentId = deploymentId;
            _resultValue.elasticsearchRefId = elasticsearchRefId;
            _resultValue.elasticsearchResourceId = elasticsearchResourceId;
            _resultValue.enterpriseSearchRefId = enterpriseSearchRefId;
            _resultValue.enterpriseSearchResourceId = enterpriseSearchResourceId;
            _resultValue.integrationsServerRefId = integrationsServerRefId;
            _resultValue.integrationsServerResourceId = integrationsServerResourceId;
            _resultValue.kibanaRefId = kibanaRefId;
            _resultValue.kibanaResourceId = kibanaResourceId;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
