// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGcpPrivateServiceConnectEndpointResult {
    /**
     * @return The domain name to point towards the PSC endpoint.
     * 
     */
    private String domainName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Region to retrieve the Prive Link configuration for.
     * 
     */
    private String region;
    /**
     * @return The service attachment URI to attach the PSC endpoint to.
     * 
     */
    private String serviceAttachmentUri;

    private GetGcpPrivateServiceConnectEndpointResult() {}
    /**
     * @return The domain name to point towards the PSC endpoint.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Region to retrieve the Prive Link configuration for.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The service attachment URI to attach the PSC endpoint to.
     * 
     */
    public String serviceAttachmentUri() {
        return this.serviceAttachmentUri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGcpPrivateServiceConnectEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainName;
        private String id;
        private String region;
        private String serviceAttachmentUri;
        public Builder() {}
        public Builder(GetGcpPrivateServiceConnectEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.region = defaults.region;
    	      this.serviceAttachmentUri = defaults.serviceAttachmentUri;
        }

        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetGcpPrivateServiceConnectEndpointResult", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGcpPrivateServiceConnectEndpointResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetGcpPrivateServiceConnectEndpointResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAttachmentUri(String serviceAttachmentUri) {
            if (serviceAttachmentUri == null) {
              throw new MissingRequiredPropertyException("GetGcpPrivateServiceConnectEndpointResult", "serviceAttachmentUri");
            }
            this.serviceAttachmentUri = serviceAttachmentUri;
            return this;
        }
        public GetGcpPrivateServiceConnectEndpointResult build() {
            final var _resultValue = new GetGcpPrivateServiceConnectEndpointResult();
            _resultValue.domainName = domainName;
            _resultValue.id = id;
            _resultValue.region = region;
            _resultValue.serviceAttachmentUri = serviceAttachmentUri;
            return _resultValue;
        }
    }
}
