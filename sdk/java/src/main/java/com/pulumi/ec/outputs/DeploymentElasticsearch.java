// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.ec.outputs.DeploymentElasticsearchCold;
import com.pulumi.ec.outputs.DeploymentElasticsearchConfig;
import com.pulumi.ec.outputs.DeploymentElasticsearchCoordinating;
import com.pulumi.ec.outputs.DeploymentElasticsearchExtension;
import com.pulumi.ec.outputs.DeploymentElasticsearchFrozen;
import com.pulumi.ec.outputs.DeploymentElasticsearchHot;
import com.pulumi.ec.outputs.DeploymentElasticsearchKeystoreContents;
import com.pulumi.ec.outputs.DeploymentElasticsearchMaster;
import com.pulumi.ec.outputs.DeploymentElasticsearchMl;
import com.pulumi.ec.outputs.DeploymentElasticsearchRemoteCluster;
import com.pulumi.ec.outputs.DeploymentElasticsearchSnapshot;
import com.pulumi.ec.outputs.DeploymentElasticsearchSnapshotSource;
import com.pulumi.ec.outputs.DeploymentElasticsearchTrustAccount;
import com.pulumi.ec.outputs.DeploymentElasticsearchTrustExternal;
import com.pulumi.ec.outputs.DeploymentElasticsearchWarm;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentElasticsearch {
    /**
     * @return Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
     * 
     */
    private @Nullable Boolean autoscale;
    private @Nullable String cloudId;
    /**
     * @return &#39;cold&#39; topology element
     * 
     */
    private @Nullable DeploymentElasticsearchCold cold;
    /**
     * @return Elasticsearch settings which will be applied to all topologies
     * 
     */
    private @Nullable DeploymentElasticsearchConfig config;
    /**
     * @return &#39;coordinating&#39; topology element
     * 
     */
    private @Nullable DeploymentElasticsearchCoordinating coordinating;
    /**
     * @return Optional Elasticsearch extensions such as custom bundles or plugins.
     * 
     */
    private @Nullable List<DeploymentElasticsearchExtension> extensions;
    /**
     * @return &#39;frozen&#39; topology element
     * 
     */
    private @Nullable DeploymentElasticsearchFrozen frozen;
    /**
     * @return &#39;hot&#39; topology element
     * 
     */
    private DeploymentElasticsearchHot hot;
    private @Nullable String httpEndpoint;
    private @Nullable String httpsEndpoint;
    /**
     * @return Keystore contents that are controlled by the deployment resource.
     * 
     */
    private @Nullable Map<String,DeploymentElasticsearchKeystoreContents> keystoreContents;
    /**
     * @return &#39;master&#39; topology element
     * 
     */
    private @Nullable DeploymentElasticsearchMaster master;
    /**
     * @return &#39;ml&#39; topology element
     * 
     */
    private @Nullable DeploymentElasticsearchMl ml;
    /**
     * @return A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     * 
     */
    private @Nullable String refId;
    private @Nullable String region;
    /**
     * @return Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
     * 
     */
    private @Nullable List<DeploymentElasticsearchRemoteCluster> remoteClusters;
    private @Nullable String resourceId;
    /**
     * @return (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
     * 
     */
    private @Nullable DeploymentElasticsearchSnapshot snapshot;
    private @Nullable DeploymentElasticsearchSnapshotSource snapshotSource;
    private @Nullable String strategy;
    private @Nullable List<DeploymentElasticsearchTrustAccount> trustAccounts;
    private @Nullable List<DeploymentElasticsearchTrustExternal> trustExternals;
    private @Nullable DeploymentElasticsearchWarm warm;

    private DeploymentElasticsearch() {}
    /**
     * @return Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
     * 
     */
    public Optional<Boolean> autoscale() {
        return Optional.ofNullable(this.autoscale);
    }
    public Optional<String> cloudId() {
        return Optional.ofNullable(this.cloudId);
    }
    /**
     * @return &#39;cold&#39; topology element
     * 
     */
    public Optional<DeploymentElasticsearchCold> cold() {
        return Optional.ofNullable(this.cold);
    }
    /**
     * @return Elasticsearch settings which will be applied to all topologies
     * 
     */
    public Optional<DeploymentElasticsearchConfig> config() {
        return Optional.ofNullable(this.config);
    }
    /**
     * @return &#39;coordinating&#39; topology element
     * 
     */
    public Optional<DeploymentElasticsearchCoordinating> coordinating() {
        return Optional.ofNullable(this.coordinating);
    }
    /**
     * @return Optional Elasticsearch extensions such as custom bundles or plugins.
     * 
     */
    public List<DeploymentElasticsearchExtension> extensions() {
        return this.extensions == null ? List.of() : this.extensions;
    }
    /**
     * @return &#39;frozen&#39; topology element
     * 
     */
    public Optional<DeploymentElasticsearchFrozen> frozen() {
        return Optional.ofNullable(this.frozen);
    }
    /**
     * @return &#39;hot&#39; topology element
     * 
     */
    public DeploymentElasticsearchHot hot() {
        return this.hot;
    }
    public Optional<String> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }
    public Optional<String> httpsEndpoint() {
        return Optional.ofNullable(this.httpsEndpoint);
    }
    /**
     * @return Keystore contents that are controlled by the deployment resource.
     * 
     */
    public Map<String,DeploymentElasticsearchKeystoreContents> keystoreContents() {
        return this.keystoreContents == null ? Map.of() : this.keystoreContents;
    }
    /**
     * @return &#39;master&#39; topology element
     * 
     */
    public Optional<DeploymentElasticsearchMaster> master() {
        return Optional.ofNullable(this.master);
    }
    /**
     * @return &#39;ml&#39; topology element
     * 
     */
    public Optional<DeploymentElasticsearchMl> ml() {
        return Optional.ofNullable(this.ml);
    }
    /**
     * @return A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     * 
     */
    public Optional<String> refId() {
        return Optional.ofNullable(this.refId);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
     * 
     */
    public List<DeploymentElasticsearchRemoteCluster> remoteClusters() {
        return this.remoteClusters == null ? List.of() : this.remoteClusters;
    }
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
     * 
     */
    public Optional<DeploymentElasticsearchSnapshot> snapshot() {
        return Optional.ofNullable(this.snapshot);
    }
    public Optional<DeploymentElasticsearchSnapshotSource> snapshotSource() {
        return Optional.ofNullable(this.snapshotSource);
    }
    public Optional<String> strategy() {
        return Optional.ofNullable(this.strategy);
    }
    public List<DeploymentElasticsearchTrustAccount> trustAccounts() {
        return this.trustAccounts == null ? List.of() : this.trustAccounts;
    }
    public List<DeploymentElasticsearchTrustExternal> trustExternals() {
        return this.trustExternals == null ? List.of() : this.trustExternals;
    }
    public Optional<DeploymentElasticsearchWarm> warm() {
        return Optional.ofNullable(this.warm);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentElasticsearch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoscale;
        private @Nullable String cloudId;
        private @Nullable DeploymentElasticsearchCold cold;
        private @Nullable DeploymentElasticsearchConfig config;
        private @Nullable DeploymentElasticsearchCoordinating coordinating;
        private @Nullable List<DeploymentElasticsearchExtension> extensions;
        private @Nullable DeploymentElasticsearchFrozen frozen;
        private DeploymentElasticsearchHot hot;
        private @Nullable String httpEndpoint;
        private @Nullable String httpsEndpoint;
        private @Nullable Map<String,DeploymentElasticsearchKeystoreContents> keystoreContents;
        private @Nullable DeploymentElasticsearchMaster master;
        private @Nullable DeploymentElasticsearchMl ml;
        private @Nullable String refId;
        private @Nullable String region;
        private @Nullable List<DeploymentElasticsearchRemoteCluster> remoteClusters;
        private @Nullable String resourceId;
        private @Nullable DeploymentElasticsearchSnapshot snapshot;
        private @Nullable DeploymentElasticsearchSnapshotSource snapshotSource;
        private @Nullable String strategy;
        private @Nullable List<DeploymentElasticsearchTrustAccount> trustAccounts;
        private @Nullable List<DeploymentElasticsearchTrustExternal> trustExternals;
        private @Nullable DeploymentElasticsearchWarm warm;
        public Builder() {}
        public Builder(DeploymentElasticsearch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscale = defaults.autoscale;
    	      this.cloudId = defaults.cloudId;
    	      this.cold = defaults.cold;
    	      this.config = defaults.config;
    	      this.coordinating = defaults.coordinating;
    	      this.extensions = defaults.extensions;
    	      this.frozen = defaults.frozen;
    	      this.hot = defaults.hot;
    	      this.httpEndpoint = defaults.httpEndpoint;
    	      this.httpsEndpoint = defaults.httpsEndpoint;
    	      this.keystoreContents = defaults.keystoreContents;
    	      this.master = defaults.master;
    	      this.ml = defaults.ml;
    	      this.refId = defaults.refId;
    	      this.region = defaults.region;
    	      this.remoteClusters = defaults.remoteClusters;
    	      this.resourceId = defaults.resourceId;
    	      this.snapshot = defaults.snapshot;
    	      this.snapshotSource = defaults.snapshotSource;
    	      this.strategy = defaults.strategy;
    	      this.trustAccounts = defaults.trustAccounts;
    	      this.trustExternals = defaults.trustExternals;
    	      this.warm = defaults.warm;
        }

        @CustomType.Setter
        public Builder autoscale(@Nullable Boolean autoscale) {
            this.autoscale = autoscale;
            return this;
        }
        @CustomType.Setter
        public Builder cloudId(@Nullable String cloudId) {
            this.cloudId = cloudId;
            return this;
        }
        @CustomType.Setter
        public Builder cold(@Nullable DeploymentElasticsearchCold cold) {
            this.cold = cold;
            return this;
        }
        @CustomType.Setter
        public Builder config(@Nullable DeploymentElasticsearchConfig config) {
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder coordinating(@Nullable DeploymentElasticsearchCoordinating coordinating) {
            this.coordinating = coordinating;
            return this;
        }
        @CustomType.Setter
        public Builder extensions(@Nullable List<DeploymentElasticsearchExtension> extensions) {
            this.extensions = extensions;
            return this;
        }
        public Builder extensions(DeploymentElasticsearchExtension... extensions) {
            return extensions(List.of(extensions));
        }
        @CustomType.Setter
        public Builder frozen(@Nullable DeploymentElasticsearchFrozen frozen) {
            this.frozen = frozen;
            return this;
        }
        @CustomType.Setter
        public Builder hot(DeploymentElasticsearchHot hot) {
            this.hot = Objects.requireNonNull(hot);
            return this;
        }
        @CustomType.Setter
        public Builder httpEndpoint(@Nullable String httpEndpoint) {
            this.httpEndpoint = httpEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder httpsEndpoint(@Nullable String httpsEndpoint) {
            this.httpsEndpoint = httpsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder keystoreContents(@Nullable Map<String,DeploymentElasticsearchKeystoreContents> keystoreContents) {
            this.keystoreContents = keystoreContents;
            return this;
        }
        @CustomType.Setter
        public Builder master(@Nullable DeploymentElasticsearchMaster master) {
            this.master = master;
            return this;
        }
        @CustomType.Setter
        public Builder ml(@Nullable DeploymentElasticsearchMl ml) {
            this.ml = ml;
            return this;
        }
        @CustomType.Setter
        public Builder refId(@Nullable String refId) {
            this.refId = refId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder remoteClusters(@Nullable List<DeploymentElasticsearchRemoteCluster> remoteClusters) {
            this.remoteClusters = remoteClusters;
            return this;
        }
        public Builder remoteClusters(DeploymentElasticsearchRemoteCluster... remoteClusters) {
            return remoteClusters(List.of(remoteClusters));
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder snapshot(@Nullable DeploymentElasticsearchSnapshot snapshot) {
            this.snapshot = snapshot;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotSource(@Nullable DeploymentElasticsearchSnapshotSource snapshotSource) {
            this.snapshotSource = snapshotSource;
            return this;
        }
        @CustomType.Setter
        public Builder strategy(@Nullable String strategy) {
            this.strategy = strategy;
            return this;
        }
        @CustomType.Setter
        public Builder trustAccounts(@Nullable List<DeploymentElasticsearchTrustAccount> trustAccounts) {
            this.trustAccounts = trustAccounts;
            return this;
        }
        public Builder trustAccounts(DeploymentElasticsearchTrustAccount... trustAccounts) {
            return trustAccounts(List.of(trustAccounts));
        }
        @CustomType.Setter
        public Builder trustExternals(@Nullable List<DeploymentElasticsearchTrustExternal> trustExternals) {
            this.trustExternals = trustExternals;
            return this;
        }
        public Builder trustExternals(DeploymentElasticsearchTrustExternal... trustExternals) {
            return trustExternals(List.of(trustExternals));
        }
        @CustomType.Setter
        public Builder warm(@Nullable DeploymentElasticsearchWarm warm) {
            this.warm = warm;
            return this;
        }
        public DeploymentElasticsearch build() {
            final var _resultValue = new DeploymentElasticsearch();
            _resultValue.autoscale = autoscale;
            _resultValue.cloudId = cloudId;
            _resultValue.cold = cold;
            _resultValue.config = config;
            _resultValue.coordinating = coordinating;
            _resultValue.extensions = extensions;
            _resultValue.frozen = frozen;
            _resultValue.hot = hot;
            _resultValue.httpEndpoint = httpEndpoint;
            _resultValue.httpsEndpoint = httpsEndpoint;
            _resultValue.keystoreContents = keystoreContents;
            _resultValue.master = master;
            _resultValue.ml = ml;
            _resultValue.refId = refId;
            _resultValue.region = region;
            _resultValue.remoteClusters = remoteClusters;
            _resultValue.resourceId = resourceId;
            _resultValue.snapshot = snapshot;
            _resultValue.snapshotSource = snapshotSource;
            _resultValue.strategy = strategy;
            _resultValue.trustAccounts = trustAccounts;
            _resultValue.trustExternals = trustExternals;
            _resultValue.warm = warm;
            return _resultValue;
        }
    }
}
