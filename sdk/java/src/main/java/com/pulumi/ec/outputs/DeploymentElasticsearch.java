// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.ec.outputs.DeploymentElasticsearchConfig;
import com.pulumi.ec.outputs.DeploymentElasticsearchExtension;
import com.pulumi.ec.outputs.DeploymentElasticsearchRemoteCluster;
import com.pulumi.ec.outputs.DeploymentElasticsearchSnapshotSource;
import com.pulumi.ec.outputs.DeploymentElasticsearchStrategy;
import com.pulumi.ec.outputs.DeploymentElasticsearchTopology;
import com.pulumi.ec.outputs.DeploymentElasticsearchTrustAccount;
import com.pulumi.ec.outputs.DeploymentElasticsearchTrustExternal;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentElasticsearch {
    /**
     * @return Enable or disable autoscaling. Defaults to the setting coming from the deployment template. Accepted values are `&#34;true&#34;` or `&#34;false&#34;`.
     * 
     */
    private @Nullable String autoscale;
    private @Nullable String cloudId;
    /**
     * @return Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
     * 
     */
    private @Nullable DeploymentElasticsearchConfig config;
    /**
     * @return Custom Elasticsearch bundles or plugins. Can be set multiple times.
     * 
     */
    private @Nullable List<DeploymentElasticsearchExtension> extensions;
    private @Nullable String httpEndpoint;
    private @Nullable String httpsEndpoint;
    /**
     * @return Can be set on the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     * 
     */
    private @Nullable String refId;
    /**
     * @return Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
     * 
     */
    private @Nullable String region;
    /**
     * @return Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
     * 
     */
    private @Nullable List<DeploymentElasticsearchRemoteCluster> remoteClusters;
    private @Nullable String resourceId;
    /**
     * @return Restores data from a snapshot of another deployment.
     * 
     */
    private @Nullable DeploymentElasticsearchSnapshotSource snapshotSource;
    /**
     * @return Choose the configuration strategy used to apply the changes.
     * 
     */
    private @Nullable DeploymentElasticsearchStrategy strategy;
    /**
     * @return Can be set multiple times to compose complex topologies.
     * 
     */
    private @Nullable List<DeploymentElasticsearchTopology> topologies;
    /**
     * @return The trust relationships with other ESS accounts.
     * 
     */
    private @Nullable List<DeploymentElasticsearchTrustAccount> trustAccounts;
    /**
     * @return The trust relationship with external entities (remote environments, remote accounts...).
     * 
     */
    private @Nullable List<DeploymentElasticsearchTrustExternal> trustExternals;

    private DeploymentElasticsearch() {}
    /**
     * @return Enable or disable autoscaling. Defaults to the setting coming from the deployment template. Accepted values are `&#34;true&#34;` or `&#34;false&#34;`.
     * 
     */
    public Optional<String> autoscale() {
        return Optional.ofNullable(this.autoscale);
    }
    public Optional<String> cloudId() {
        return Optional.ofNullable(this.cloudId);
    }
    /**
     * @return Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
     * 
     */
    public Optional<DeploymentElasticsearchConfig> config() {
        return Optional.ofNullable(this.config);
    }
    /**
     * @return Custom Elasticsearch bundles or plugins. Can be set multiple times.
     * 
     */
    public List<DeploymentElasticsearchExtension> extensions() {
        return this.extensions == null ? List.of() : this.extensions;
    }
    public Optional<String> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }
    public Optional<String> httpsEndpoint() {
        return Optional.ofNullable(this.httpsEndpoint);
    }
    /**
     * @return Can be set on the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     * 
     */
    public Optional<String> refId() {
        return Optional.ofNullable(this.refId);
    }
    /**
     * @return Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `&#34;ece-region&#34;`.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
     * 
     */
    public List<DeploymentElasticsearchRemoteCluster> remoteClusters() {
        return this.remoteClusters == null ? List.of() : this.remoteClusters;
    }
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return Restores data from a snapshot of another deployment.
     * 
     */
    public Optional<DeploymentElasticsearchSnapshotSource> snapshotSource() {
        return Optional.ofNullable(this.snapshotSource);
    }
    /**
     * @return Choose the configuration strategy used to apply the changes.
     * 
     */
    public Optional<DeploymentElasticsearchStrategy> strategy() {
        return Optional.ofNullable(this.strategy);
    }
    /**
     * @return Can be set multiple times to compose complex topologies.
     * 
     */
    public List<DeploymentElasticsearchTopology> topologies() {
        return this.topologies == null ? List.of() : this.topologies;
    }
    /**
     * @return The trust relationships with other ESS accounts.
     * 
     */
    public List<DeploymentElasticsearchTrustAccount> trustAccounts() {
        return this.trustAccounts == null ? List.of() : this.trustAccounts;
    }
    /**
     * @return The trust relationship with external entities (remote environments, remote accounts...).
     * 
     */
    public List<DeploymentElasticsearchTrustExternal> trustExternals() {
        return this.trustExternals == null ? List.of() : this.trustExternals;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentElasticsearch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String autoscale;
        private @Nullable String cloudId;
        private @Nullable DeploymentElasticsearchConfig config;
        private @Nullable List<DeploymentElasticsearchExtension> extensions;
        private @Nullable String httpEndpoint;
        private @Nullable String httpsEndpoint;
        private @Nullable String refId;
        private @Nullable String region;
        private @Nullable List<DeploymentElasticsearchRemoteCluster> remoteClusters;
        private @Nullable String resourceId;
        private @Nullable DeploymentElasticsearchSnapshotSource snapshotSource;
        private @Nullable DeploymentElasticsearchStrategy strategy;
        private @Nullable List<DeploymentElasticsearchTopology> topologies;
        private @Nullable List<DeploymentElasticsearchTrustAccount> trustAccounts;
        private @Nullable List<DeploymentElasticsearchTrustExternal> trustExternals;
        public Builder() {}
        public Builder(DeploymentElasticsearch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscale = defaults.autoscale;
    	      this.cloudId = defaults.cloudId;
    	      this.config = defaults.config;
    	      this.extensions = defaults.extensions;
    	      this.httpEndpoint = defaults.httpEndpoint;
    	      this.httpsEndpoint = defaults.httpsEndpoint;
    	      this.refId = defaults.refId;
    	      this.region = defaults.region;
    	      this.remoteClusters = defaults.remoteClusters;
    	      this.resourceId = defaults.resourceId;
    	      this.snapshotSource = defaults.snapshotSource;
    	      this.strategy = defaults.strategy;
    	      this.topologies = defaults.topologies;
    	      this.trustAccounts = defaults.trustAccounts;
    	      this.trustExternals = defaults.trustExternals;
        }

        @CustomType.Setter
        public Builder autoscale(@Nullable String autoscale) {
            this.autoscale = autoscale;
            return this;
        }
        @CustomType.Setter
        public Builder cloudId(@Nullable String cloudId) {
            this.cloudId = cloudId;
            return this;
        }
        @CustomType.Setter
        public Builder config(@Nullable DeploymentElasticsearchConfig config) {
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder extensions(@Nullable List<DeploymentElasticsearchExtension> extensions) {
            this.extensions = extensions;
            return this;
        }
        public Builder extensions(DeploymentElasticsearchExtension... extensions) {
            return extensions(List.of(extensions));
        }
        @CustomType.Setter
        public Builder httpEndpoint(@Nullable String httpEndpoint) {
            this.httpEndpoint = httpEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder httpsEndpoint(@Nullable String httpsEndpoint) {
            this.httpsEndpoint = httpsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder refId(@Nullable String refId) {
            this.refId = refId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder remoteClusters(@Nullable List<DeploymentElasticsearchRemoteCluster> remoteClusters) {
            this.remoteClusters = remoteClusters;
            return this;
        }
        public Builder remoteClusters(DeploymentElasticsearchRemoteCluster... remoteClusters) {
            return remoteClusters(List.of(remoteClusters));
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotSource(@Nullable DeploymentElasticsearchSnapshotSource snapshotSource) {
            this.snapshotSource = snapshotSource;
            return this;
        }
        @CustomType.Setter
        public Builder strategy(@Nullable DeploymentElasticsearchStrategy strategy) {
            this.strategy = strategy;
            return this;
        }
        @CustomType.Setter
        public Builder topologies(@Nullable List<DeploymentElasticsearchTopology> topologies) {
            this.topologies = topologies;
            return this;
        }
        public Builder topologies(DeploymentElasticsearchTopology... topologies) {
            return topologies(List.of(topologies));
        }
        @CustomType.Setter
        public Builder trustAccounts(@Nullable List<DeploymentElasticsearchTrustAccount> trustAccounts) {
            this.trustAccounts = trustAccounts;
            return this;
        }
        public Builder trustAccounts(DeploymentElasticsearchTrustAccount... trustAccounts) {
            return trustAccounts(List.of(trustAccounts));
        }
        @CustomType.Setter
        public Builder trustExternals(@Nullable List<DeploymentElasticsearchTrustExternal> trustExternals) {
            this.trustExternals = trustExternals;
            return this;
        }
        public Builder trustExternals(DeploymentElasticsearchTrustExternal... trustExternals) {
            return trustExternals(List.of(trustExternals));
        }
        public DeploymentElasticsearch build() {
            final var o = new DeploymentElasticsearch();
            o.autoscale = autoscale;
            o.cloudId = cloudId;
            o.config = config;
            o.extensions = extensions;
            o.httpEndpoint = httpEndpoint;
            o.httpsEndpoint = httpsEndpoint;
            o.refId = refId;
            o.region = region;
            o.remoteClusters = remoteClusters;
            o.resourceId = resourceId;
            o.snapshotSource = snapshotSource;
            o.strategy = strategy;
            o.topologies = topologies;
            o.trustAccounts = trustAccounts;
            o.trustExternals = trustExternals;
            return o;
        }
    }
}
