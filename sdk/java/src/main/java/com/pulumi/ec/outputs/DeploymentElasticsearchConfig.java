// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentElasticsearchConfig {
    /**
     * @return Overrides the docker image the Elasticsearch nodes will use. Note that this field will only work for internal users only.
     * 
     */
    private @Nullable String dockerImage;
    /**
     * @return List of Elasticsearch supported plugins, which vary from version to version. Check the Stack Pack version to see which plugins are supported for each version. This is currently only available from the UI and [ecctl](https://www.elastic.co/guide/en/ecctl/master/ecctl_stack_list.html)
     * 
     */
    private @Nullable List<String> plugins;
    /**
     * @return JSON-formatted user level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    private @Nullable String userSettingsJson;
    /**
     * @return JSON-formatted admin (ECE) level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    private @Nullable String userSettingsOverrideJson;
    /**
     * @return YAML-formatted admin (ECE) level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    private @Nullable String userSettingsOverrideYaml;
    /**
     * @return YAML-formatted user level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    private @Nullable String userSettingsYaml;

    private DeploymentElasticsearchConfig() {}
    /**
     * @return Overrides the docker image the Elasticsearch nodes will use. Note that this field will only work for internal users only.
     * 
     */
    public Optional<String> dockerImage() {
        return Optional.ofNullable(this.dockerImage);
    }
    /**
     * @return List of Elasticsearch supported plugins, which vary from version to version. Check the Stack Pack version to see which plugins are supported for each version. This is currently only available from the UI and [ecctl](https://www.elastic.co/guide/en/ecctl/master/ecctl_stack_list.html)
     * 
     */
    public List<String> plugins() {
        return this.plugins == null ? List.of() : this.plugins;
    }
    /**
     * @return JSON-formatted user level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    public Optional<String> userSettingsJson() {
        return Optional.ofNullable(this.userSettingsJson);
    }
    /**
     * @return JSON-formatted admin (ECE) level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    public Optional<String> userSettingsOverrideJson() {
        return Optional.ofNullable(this.userSettingsOverrideJson);
    }
    /**
     * @return YAML-formatted admin (ECE) level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    public Optional<String> userSettingsOverrideYaml() {
        return Optional.ofNullable(this.userSettingsOverrideYaml);
    }
    /**
     * @return YAML-formatted user level &#34;elasticsearch.yml&#34; setting overrides
     * 
     */
    public Optional<String> userSettingsYaml() {
        return Optional.ofNullable(this.userSettingsYaml);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentElasticsearchConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dockerImage;
        private @Nullable List<String> plugins;
        private @Nullable String userSettingsJson;
        private @Nullable String userSettingsOverrideJson;
        private @Nullable String userSettingsOverrideYaml;
        private @Nullable String userSettingsYaml;
        public Builder() {}
        public Builder(DeploymentElasticsearchConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dockerImage = defaults.dockerImage;
    	      this.plugins = defaults.plugins;
    	      this.userSettingsJson = defaults.userSettingsJson;
    	      this.userSettingsOverrideJson = defaults.userSettingsOverrideJson;
    	      this.userSettingsOverrideYaml = defaults.userSettingsOverrideYaml;
    	      this.userSettingsYaml = defaults.userSettingsYaml;
        }

        @CustomType.Setter
        public Builder dockerImage(@Nullable String dockerImage) {

            this.dockerImage = dockerImage;
            return this;
        }
        @CustomType.Setter
        public Builder plugins(@Nullable List<String> plugins) {

            this.plugins = plugins;
            return this;
        }
        public Builder plugins(String... plugins) {
            return plugins(List.of(plugins));
        }
        @CustomType.Setter
        public Builder userSettingsJson(@Nullable String userSettingsJson) {

            this.userSettingsJson = userSettingsJson;
            return this;
        }
        @CustomType.Setter
        public Builder userSettingsOverrideJson(@Nullable String userSettingsOverrideJson) {

            this.userSettingsOverrideJson = userSettingsOverrideJson;
            return this;
        }
        @CustomType.Setter
        public Builder userSettingsOverrideYaml(@Nullable String userSettingsOverrideYaml) {

            this.userSettingsOverrideYaml = userSettingsOverrideYaml;
            return this;
        }
        @CustomType.Setter
        public Builder userSettingsYaml(@Nullable String userSettingsYaml) {

            this.userSettingsYaml = userSettingsYaml;
            return this;
        }
        public DeploymentElasticsearchConfig build() {
            final var _resultValue = new DeploymentElasticsearchConfig();
            _resultValue.dockerImage = dockerImage;
            _resultValue.plugins = plugins;
            _resultValue.userSettingsJson = userSettingsJson;
            _resultValue.userSettingsOverrideJson = userSettingsOverrideJson;
            _resultValue.userSettingsOverrideYaml = userSettingsOverrideYaml;
            _resultValue.userSettingsYaml = userSettingsYaml;
            return _resultValue;
        }
    }
}
