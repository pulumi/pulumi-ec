// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentObservabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentObservabilityArgs Empty = new DeploymentObservabilityArgs();

    @Import(name="deploymentId", required=true)
    private Output<String> deploymentId;

    public Output<String> deploymentId() {
        return this.deploymentId;
    }

    @Import(name="logs")
    private @Nullable Output<Boolean> logs;

    public Optional<Output<Boolean>> logs() {
        return Optional.ofNullable(this.logs);
    }

    @Import(name="metrics")
    private @Nullable Output<Boolean> metrics;

    public Optional<Output<Boolean>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    @Import(name="refId")
    private @Nullable Output<String> refId;

    public Optional<Output<String>> refId() {
        return Optional.ofNullable(this.refId);
    }

    private DeploymentObservabilityArgs() {}

    private DeploymentObservabilityArgs(DeploymentObservabilityArgs $) {
        this.deploymentId = $.deploymentId;
        this.logs = $.logs;
        this.metrics = $.metrics;
        this.refId = $.refId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentObservabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentObservabilityArgs $;

        public Builder() {
            $ = new DeploymentObservabilityArgs();
        }

        public Builder(DeploymentObservabilityArgs defaults) {
            $ = new DeploymentObservabilityArgs(Objects.requireNonNull(defaults));
        }

        public Builder deploymentId(Output<String> deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        public Builder deploymentId(String deploymentId) {
            return deploymentId(Output.of(deploymentId));
        }

        public Builder logs(@Nullable Output<Boolean> logs) {
            $.logs = logs;
            return this;
        }

        public Builder logs(Boolean logs) {
            return logs(Output.of(logs));
        }

        public Builder metrics(@Nullable Output<Boolean> metrics) {
            $.metrics = metrics;
            return this;
        }

        public Builder metrics(Boolean metrics) {
            return metrics(Output.of(metrics));
        }

        public Builder refId(@Nullable Output<String> refId) {
            $.refId = refId;
            return this;
        }

        public Builder refId(String refId) {
            return refId(Output.of(refId));
        }

        public DeploymentObservabilityArgs build() {
            if ($.deploymentId == null) {
                throw new MissingRequiredPropertyException("DeploymentObservabilityArgs", "deploymentId");
            }
            return $;
        }
    }

}
