// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentElasticsearchKeystoreContentsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentElasticsearchKeystoreContentsArgs Empty = new DeploymentElasticsearchKeystoreContentsArgs();

    /**
     * If true, the secret is handled as a file. Otherwise, it&#39;s handled as a plain string.
     * 
     */
    @Import(name="asFile")
    private @Nullable Output<Boolean> asFile;

    /**
     * @return If true, the secret is handled as a file. Otherwise, it&#39;s handled as a plain string.
     * 
     */
    public Optional<Output<Boolean>> asFile() {
        return Optional.ofNullable(this.asFile);
    }

    /**
     * Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DeploymentElasticsearchKeystoreContentsArgs() {}

    private DeploymentElasticsearchKeystoreContentsArgs(DeploymentElasticsearchKeystoreContentsArgs $) {
        this.asFile = $.asFile;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentElasticsearchKeystoreContentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentElasticsearchKeystoreContentsArgs $;

        public Builder() {
            $ = new DeploymentElasticsearchKeystoreContentsArgs();
        }

        public Builder(DeploymentElasticsearchKeystoreContentsArgs defaults) {
            $ = new DeploymentElasticsearchKeystoreContentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param asFile If true, the secret is handled as a file. Otherwise, it&#39;s handled as a plain string.
         * 
         * @return builder
         * 
         */
        public Builder asFile(@Nullable Output<Boolean> asFile) {
            $.asFile = asFile;
            return this;
        }

        /**
         * @param asFile If true, the secret is handled as a file. Otherwise, it&#39;s handled as a plain string.
         * 
         * @return builder
         * 
         */
        public Builder asFile(Boolean asFile) {
            return asFile(Output.of(asFile));
        }

        /**
         * @param value Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DeploymentElasticsearchKeystoreContentsArgs build() {
            if ($.value == null) {
                throw new MissingRequiredPropertyException("DeploymentElasticsearchKeystoreContentsArgs", "value");
            }
            return $;
        }
    }

}
