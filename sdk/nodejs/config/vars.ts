// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("ec");

/**
 * API Key to use for API authentication. The only valid authentication mechanism for the Elasticsearch Service.
 */
export declare const apikey: string | undefined;
Object.defineProperty(exports, "apikey", {
    get() {
        return __config.get("apikey");
    },
    enumerable: true,
});

export declare const endpoint: string | undefined;
Object.defineProperty(exports, "endpoint", {
    get() {
        return __config.get("endpoint");
    },
    enumerable: true,
});

/**
 * Allow the provider to skip TLS validation on its outgoing HTTP calls.
 */
export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

/**
 * Password to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
 * Private.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Timeout used for individual HTTP calls. Defaults to "1m".
 */
export declare const timeout: string | undefined;
Object.defineProperty(exports, "timeout", {
    get() {
        return __config.get("timeout");
    },
    enumerable: true,
});

/**
 * Username to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
 * Private.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

/**
 * When set, a "request.log" file will be written with all outgoing HTTP requests. Defaults to "false".
 */
export declare const verbose: boolean | undefined;
Object.defineProperty(exports, "verbose", {
    get() {
        return __config.getObject<boolean>("verbose");
    },
    enumerable: true,
});

/**
 * When set with verbose, the contents of the Authorization header will not be redacted. Defaults to "false".
 */
export declare const verboseCredentials: boolean | undefined;
Object.defineProperty(exports, "verboseCredentials", {
    get() {
        return __config.getObject<boolean>("verboseCredentials");
    },
    enumerable: true,
});

/**
 * Timeout used for individual HTTP calls. Defaults to "1m".
 */
export declare const verboseFile: string | undefined;
Object.defineProperty(exports, "verboseFile", {
    get() {
        return __config.get("verboseFile");
    },
    enumerable: true,
});

