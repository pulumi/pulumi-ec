// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DeploymentApm {
    /**
     * Optionally define the Apm configuration options for the APM Server
     */
    config?: pulumi.Input<inputs.DeploymentApmConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    instanceConfigurationVersion?: pulumi.Input<number>;
    latestInstanceConfigurationId?: pulumi.Input<string>;
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    refId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentApmConfig {
    /**
     * Optionally enable debug mode for APM servers - defaults to false
     */
    debugEnabled?: pulumi.Input<boolean>;
    /**
     * Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
     */
    dockerImage?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsJson?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideJson?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideYaml?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentElasticsearch {
    /**
     * Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * The encoded Elasticsearch credentials to use in Beats or Logstash
     */
    cloudId?: pulumi.Input<string>;
    /**
     * 'cold' topology element
     */
    cold?: pulumi.Input<inputs.DeploymentElasticsearchCold>;
    /**
     * Elasticsearch settings which will be applied to all topologies
     */
    config?: pulumi.Input<inputs.DeploymentElasticsearchConfig>;
    /**
     * 'coordinating' topology element
     */
    coordinating?: pulumi.Input<inputs.DeploymentElasticsearchCoordinating>;
    /**
     * Optional Elasticsearch extensions such as custom bundles or plugins.
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchExtension>[]>;
    /**
     * 'frozen' topology element
     */
    frozen?: pulumi.Input<inputs.DeploymentElasticsearchFrozen>;
    /**
     * 'hot' topology element
     */
    hot: pulumi.Input<inputs.DeploymentElasticsearchHot>;
    /**
     * The Elasticsearch resource HTTP endpoint
     */
    httpEndpoint?: pulumi.Input<string>;
    /**
     * The Elasticsearch resource HTTPs endpoint
     */
    httpsEndpoint?: pulumi.Input<string>;
    /**
     * Keystore contents that are controlled by the deployment resource.
     */
    keystoreContents?: pulumi.Input<{[key: string]: pulumi.Input<inputs.DeploymentElasticsearchKeystoreContents>}>;
    /**
     * 'master' topology element
     */
    master?: pulumi.Input<inputs.DeploymentElasticsearchMaster>;
    /**
     * 'ml' topology element
     */
    ml?: pulumi.Input<inputs.DeploymentElasticsearchMl>;
    /**
     * A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     */
    refId?: pulumi.Input<string>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region?: pulumi.Input<string>;
    /**
     * Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
     */
    remoteClusters?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchRemoteCluster>[]>;
    /**
     * The Elasticsearch resource unique identifier
     */
    resourceId?: pulumi.Input<string>;
    /**
     * (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
     */
    snapshot?: pulumi.Input<inputs.DeploymentElasticsearchSnapshot>;
    snapshotSource?: pulumi.Input<inputs.DeploymentElasticsearchSnapshotSource>;
    /**
     * Configuration strategy type autodetect, grow_and_shrink, rolling_grow_and_shrink, rolling_all
     */
    strategy?: pulumi.Input<string>;
    /**
     * Optional Elasticsearch account trust settings.
     */
    trustAccounts?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchTrustAccount>[]>;
    /**
     * Optional Elasticsearch external trust settings.
     */
    trustExternals?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchTrustExternal>[]>;
    /**
     * 'warm' topology element
     */
    warm?: pulumi.Input<inputs.DeploymentElasticsearchWarm>;
}

export interface DeploymentElasticsearchCold {
    /**
     * Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
     */
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchColdAutoscaling>;
    /**
     * Instance Configuration ID of the topology element
     */
    instanceConfigurationId?: pulumi.Input<string>;
    /**
     * Instance Configuration version of the topology element
     */
    instanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * Latest Instance Configuration ID available on the deployment template for the topology element
     */
    latestInstanceConfigurationId?: pulumi.Input<string>;
    /**
     * Latest version available for the Instance Configuration with the latest*instance*configuration_id
     */
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * The computed list of node roles for the current topology element
     */
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node type for the Elasticsearch Topology element (data node)
     */
    nodeTypeData?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (ingest node)
     */
    nodeTypeIngest?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (master node)
     */
    nodeTypeMaster?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (machine learning node)
     */
    nodeTypeMl?: pulumi.Input<string>;
    /**
     * Amount of "sizeResource" per node in the "\n\ng" notation
     */
    size?: pulumi.Input<string>;
    /**
     * Size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    /**
     * Number of zones that the Elasticsearch cluster will span. This is used to set HA
     */
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchColdAutoscaling {
    /**
     * Whether this specific tier should be auto-scaled, overrides deployment-wide setting. Allowed for `ml` tier only.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * Maximum size value for the maximum autoscaling setting.
     */
    maxSize?: pulumi.Input<string>;
    /**
     * Maximum resource type for the maximum autoscaling setting.
     */
    maxSizeResource?: pulumi.Input<string>;
    /**
     * Minimum size value for the minimum autoscaling setting.
     */
    minSize?: pulumi.Input<string>;
    /**
     * Minimum resource type for the minimum autoscaling setting.
     */
    minSizeResource?: pulumi.Input<string>;
    /**
     * Computed policy overrides set directly via the API or other clients.
     */
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchConfig {
    /**
     * Overrides the docker image the Elasticsearch nodes will use. Note that this field will only work for internal users only.
     */
    dockerImage?: pulumi.Input<string>;
    /**
     * List of Elasticsearch supported plugins, which vary from version to version. Check the Stack Pack version to see which plugins are supported for each version. This is currently only available from the UI and [ecctl](https://www.elastic.co/guide/en/ecctl/master/ecctl_stack_list.html)
     */
    plugins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * JSON-formatted user level "elasticsearch.yml" setting overrides
     */
    userSettingsJson?: pulumi.Input<string>;
    /**
     * JSON-formatted admin (ECE) level "elasticsearch.yml" setting overrides
     */
    userSettingsOverrideJson?: pulumi.Input<string>;
    /**
     * YAML-formatted admin (ECE) level "elasticsearch.yml" setting overrides
     */
    userSettingsOverrideYaml?: pulumi.Input<string>;
    /**
     * YAML-formatted user level "elasticsearch.yml" setting overrides
     */
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchCoordinating {
    /**
     * Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
     */
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchCoordinatingAutoscaling>;
    /**
     * Instance Configuration ID of the topology element
     */
    instanceConfigurationId?: pulumi.Input<string>;
    /**
     * Instance Configuration version of the topology element
     */
    instanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * Latest Instance Configuration ID available on the deployment template for the topology element
     */
    latestInstanceConfigurationId?: pulumi.Input<string>;
    /**
     * Latest version available for the Instance Configuration with the latest*instance*configuration_id
     */
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * The computed list of node roles for the current topology element
     */
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node type for the Elasticsearch Topology element (data node)
     */
    nodeTypeData?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (ingest node)
     */
    nodeTypeIngest?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (master node)
     */
    nodeTypeMaster?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (machine learning node)
     */
    nodeTypeMl?: pulumi.Input<string>;
    /**
     * Amount of "sizeResource" per node in the "\n\ng" notation
     */
    size?: pulumi.Input<string>;
    /**
     * Size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    /**
     * Number of zones that the Elasticsearch cluster will span. This is used to set HA
     */
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchCoordinatingAutoscaling {
    /**
     * Whether this specific tier should be auto-scaled, overrides deployment-wide setting. Allowed for `ml` tier only.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * Maximum size value for the maximum autoscaling setting.
     */
    maxSize?: pulumi.Input<string>;
    /**
     * Maximum resource type for the maximum autoscaling setting.
     */
    maxSizeResource?: pulumi.Input<string>;
    /**
     * Minimum size value for the minimum autoscaling setting.
     */
    minSize?: pulumi.Input<string>;
    /**
     * Minimum resource type for the minimum autoscaling setting.
     */
    minSizeResource?: pulumi.Input<string>;
    /**
     * Computed policy overrides set directly via the API or other clients.
     */
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchExtension {
    /**
     * Extension name.
     */
    name: pulumi.Input<string>;
    /**
     * Extension type, only `bundle` or `plugin` are supported.
     */
    type: pulumi.Input<string>;
    /**
     * Bundle or plugin URL, the extension URL can be obtained from the `ec_deployment_extension.<name>.url` attribute or the API and cannot be a random HTTP address that is hosted elsewhere.
     */
    url: pulumi.Input<string>;
    /**
     * Elasticsearch compatibility version. Bundles should specify major or minor versions with wildcards, such as `7.*` or `*` but **plugins must use full version notation down to the patch level**, such as `7.10.1` and wildcards are not allowed.
     */
    version: pulumi.Input<string>;
}

export interface DeploymentElasticsearchFrozen {
    /**
     * Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
     */
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchFrozenAutoscaling>;
    /**
     * Instance Configuration ID of the topology element
     */
    instanceConfigurationId?: pulumi.Input<string>;
    /**
     * Instance Configuration version of the topology element
     */
    instanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * Latest Instance Configuration ID available on the deployment template for the topology element
     */
    latestInstanceConfigurationId?: pulumi.Input<string>;
    /**
     * Latest version available for the Instance Configuration with the latest*instance*configuration_id
     */
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * The computed list of node roles for the current topology element
     */
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node type for the Elasticsearch Topology element (data node)
     */
    nodeTypeData?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (ingest node)
     */
    nodeTypeIngest?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (master node)
     */
    nodeTypeMaster?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (machine learning node)
     */
    nodeTypeMl?: pulumi.Input<string>;
    /**
     * Amount of "sizeResource" per node in the "\n\ng" notation
     */
    size?: pulumi.Input<string>;
    /**
     * Size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    /**
     * Number of zones that the Elasticsearch cluster will span. This is used to set HA
     */
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchFrozenAutoscaling {
    /**
     * Whether this specific tier should be auto-scaled, overrides deployment-wide setting. Allowed for `ml` tier only.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * Maximum size value for the maximum autoscaling setting.
     */
    maxSize?: pulumi.Input<string>;
    /**
     * Maximum resource type for the maximum autoscaling setting.
     */
    maxSizeResource?: pulumi.Input<string>;
    /**
     * Minimum size value for the minimum autoscaling setting.
     */
    minSize?: pulumi.Input<string>;
    /**
     * Minimum resource type for the minimum autoscaling setting.
     */
    minSizeResource?: pulumi.Input<string>;
    /**
     * Computed policy overrides set directly via the API or other clients.
     */
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchHot {
    /**
     * Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
     */
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchHotAutoscaling>;
    /**
     * Instance Configuration ID of the topology element
     */
    instanceConfigurationId?: pulumi.Input<string>;
    /**
     * Instance Configuration version of the topology element
     */
    instanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * Latest Instance Configuration ID available on the deployment template for the topology element
     */
    latestInstanceConfigurationId?: pulumi.Input<string>;
    /**
     * Latest version available for the Instance Configuration with the latest*instance*configuration_id
     */
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * The computed list of node roles for the current topology element
     */
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node type for the Elasticsearch Topology element (data node)
     */
    nodeTypeData?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (ingest node)
     */
    nodeTypeIngest?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (master node)
     */
    nodeTypeMaster?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (machine learning node)
     */
    nodeTypeMl?: pulumi.Input<string>;
    /**
     * Amount of "sizeResource" per node in the "\n\ng" notation
     */
    size?: pulumi.Input<string>;
    /**
     * Size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    /**
     * Number of zones that the Elasticsearch cluster will span. This is used to set HA
     */
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchHotAutoscaling {
    /**
     * Whether this specific tier should be auto-scaled, overrides deployment-wide setting. Allowed for `ml` tier only.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * Maximum size value for the maximum autoscaling setting.
     */
    maxSize?: pulumi.Input<string>;
    /**
     * Maximum resource type for the maximum autoscaling setting.
     */
    maxSizeResource?: pulumi.Input<string>;
    /**
     * Minimum size value for the minimum autoscaling setting.
     */
    minSize?: pulumi.Input<string>;
    /**
     * Minimum resource type for the minimum autoscaling setting.
     */
    minSizeResource?: pulumi.Input<string>;
    /**
     * Computed policy overrides set directly via the API or other clients.
     */
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchKeystoreContents {
    /**
     * If true, the secret is handled as a file. Otherwise, it's handled as a plain string.
     */
    asFile?: pulumi.Input<boolean>;
    /**
     * Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
     */
    value: pulumi.Input<string>;
}

export interface DeploymentElasticsearchMaster {
    /**
     * Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
     */
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchMasterAutoscaling>;
    /**
     * Instance Configuration ID of the topology element
     */
    instanceConfigurationId?: pulumi.Input<string>;
    /**
     * Instance Configuration version of the topology element
     */
    instanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * Latest Instance Configuration ID available on the deployment template for the topology element
     */
    latestInstanceConfigurationId?: pulumi.Input<string>;
    /**
     * Latest version available for the Instance Configuration with the latest*instance*configuration_id
     */
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * The computed list of node roles for the current topology element
     */
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node type for the Elasticsearch Topology element (data node)
     */
    nodeTypeData?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (ingest node)
     */
    nodeTypeIngest?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (master node)
     */
    nodeTypeMaster?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (machine learning node)
     */
    nodeTypeMl?: pulumi.Input<string>;
    /**
     * Amount of "sizeResource" per node in the "\n\ng" notation
     */
    size?: pulumi.Input<string>;
    /**
     * Size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    /**
     * Number of zones that the Elasticsearch cluster will span. This is used to set HA
     */
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchMasterAutoscaling {
    /**
     * Whether this specific tier should be auto-scaled, overrides deployment-wide setting. Allowed for `ml` tier only.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * Maximum size value for the maximum autoscaling setting.
     */
    maxSize?: pulumi.Input<string>;
    /**
     * Maximum resource type for the maximum autoscaling setting.
     */
    maxSizeResource?: pulumi.Input<string>;
    /**
     * Minimum size value for the minimum autoscaling setting.
     */
    minSize?: pulumi.Input<string>;
    /**
     * Minimum resource type for the minimum autoscaling setting.
     */
    minSizeResource?: pulumi.Input<string>;
    /**
     * Computed policy overrides set directly via the API or other clients.
     */
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchMl {
    /**
     * Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
     */
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchMlAutoscaling>;
    /**
     * Instance Configuration ID of the topology element
     */
    instanceConfigurationId?: pulumi.Input<string>;
    /**
     * Instance Configuration version of the topology element
     */
    instanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * Latest Instance Configuration ID available on the deployment template for the topology element
     */
    latestInstanceConfigurationId?: pulumi.Input<string>;
    /**
     * Latest version available for the Instance Configuration with the latest*instance*configuration_id
     */
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * The computed list of node roles for the current topology element
     */
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node type for the Elasticsearch Topology element (data node)
     */
    nodeTypeData?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (ingest node)
     */
    nodeTypeIngest?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (master node)
     */
    nodeTypeMaster?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (machine learning node)
     */
    nodeTypeMl?: pulumi.Input<string>;
    /**
     * Amount of "sizeResource" per node in the "\n\ng" notation
     */
    size?: pulumi.Input<string>;
    /**
     * Size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    /**
     * Number of zones that the Elasticsearch cluster will span. This is used to set HA
     */
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchMlAutoscaling {
    /**
     * Whether this specific tier should be auto-scaled, overrides deployment-wide setting. Allowed for `ml` tier only.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * Maximum size value for the maximum autoscaling setting.
     */
    maxSize?: pulumi.Input<string>;
    /**
     * Maximum resource type for the maximum autoscaling setting.
     */
    maxSizeResource?: pulumi.Input<string>;
    /**
     * Minimum size value for the minimum autoscaling setting.
     */
    minSize?: pulumi.Input<string>;
    /**
     * Minimum resource type for the minimum autoscaling setting.
     */
    minSizeResource?: pulumi.Input<string>;
    /**
     * Computed policy overrides set directly via the API or other clients.
     */
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchRemoteCluster {
    /**
     * Alias for this Cross Cluster Search binding
     */
    alias: pulumi.Input<string>;
    /**
     * Remote deployment ID
     */
    deploymentId: pulumi.Input<string>;
    /**
     * Remote elasticsearch "refId", it is best left to the default value
     */
    refId?: pulumi.Input<string>;
    /**
     * If true, skip the cluster during search when disconnected
     */
    skipUnavailable?: pulumi.Input<boolean>;
}

export interface DeploymentElasticsearchSnapshot {
    /**
     * Indicates if Snapshotting is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Snapshot repository configuration
     */
    repository?: pulumi.Input<inputs.DeploymentElasticsearchSnapshotRepository>;
}

export interface DeploymentElasticsearchSnapshotRepository {
    /**
     * Cluster snapshot reference repository settings, containing the repository name in ECE fashion
     */
    reference?: pulumi.Input<inputs.DeploymentElasticsearchSnapshotRepositoryReference>;
}

export interface DeploymentElasticsearchSnapshotRepositoryReference {
    /**
     * ECE snapshot repository name, from the '/platform/configuration/snapshots/repositories' endpoint
     */
    repositoryName: pulumi.Input<string>;
}

export interface DeploymentElasticsearchSnapshotSource {
    /**
     * Name of the snapshot to restore. Use '**latest_success**' to get the most recent successful snapshot.
     */
    snapshotName?: pulumi.Input<string>;
    /**
     * ID of the Elasticsearch cluster that will be used as the source of the snapshot
     */
    sourceElasticsearchClusterId: pulumi.Input<string>;
}

export interface DeploymentElasticsearchTrustAccount {
    /**
     * The ID of the Account.
     */
    accountId: pulumi.Input<string>;
    /**
     * If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
     */
    trustAll: pulumi.Input<boolean>;
    /**
     * The list of clusters to trust. Only used when `trustAll` is false.
     */
    trustAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeploymentElasticsearchTrustExternal {
    /**
     * The ID of the external trust relationship.
     */
    relationshipId: pulumi.Input<string>;
    /**
     * If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
     */
    trustAll: pulumi.Input<boolean>;
    /**
     * The list of clusters to trust. Only used when `trustAll` is false.
     */
    trustAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeploymentElasticsearchWarm {
    /**
     * Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
     */
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchWarmAutoscaling>;
    /**
     * Instance Configuration ID of the topology element
     */
    instanceConfigurationId?: pulumi.Input<string>;
    /**
     * Instance Configuration version of the topology element
     */
    instanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * Latest Instance Configuration ID available on the deployment template for the topology element
     */
    latestInstanceConfigurationId?: pulumi.Input<string>;
    /**
     * Latest version available for the Instance Configuration with the latest*instance*configuration_id
     */
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    /**
     * The computed list of node roles for the current topology element
     */
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The node type for the Elasticsearch Topology element (data node)
     */
    nodeTypeData?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (ingest node)
     */
    nodeTypeIngest?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (master node)
     */
    nodeTypeMaster?: pulumi.Input<string>;
    /**
     * The node type for the Elasticsearch Topology element (machine learning node)
     */
    nodeTypeMl?: pulumi.Input<string>;
    /**
     * Amount of "sizeResource" per node in the "\n\ng" notation
     */
    size?: pulumi.Input<string>;
    /**
     * Size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    /**
     * Number of zones that the Elasticsearch cluster will span. This is used to set HA
     */
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchWarmAutoscaling {
    /**
     * Whether this specific tier should be auto-scaled, overrides deployment-wide setting. Allowed for `ml` tier only.
     */
    autoscale?: pulumi.Input<boolean>;
    /**
     * Maximum size value for the maximum autoscaling setting.
     */
    maxSize?: pulumi.Input<string>;
    /**
     * Maximum resource type for the maximum autoscaling setting.
     */
    maxSizeResource?: pulumi.Input<string>;
    /**
     * Minimum size value for the minimum autoscaling setting.
     */
    minSize?: pulumi.Input<string>;
    /**
     * Minimum resource type for the minimum autoscaling setting.
     */
    minSizeResource?: pulumi.Input<string>;
    /**
     * Computed policy overrides set directly via the API or other clients.
     */
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentEnterpriseSearch {
    /**
     * Optionally define the Enterprise Search configuration options for the Enterprise Search Server
     */
    config?: pulumi.Input<inputs.DeploymentEnterpriseSearchConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    instanceConfigurationVersion?: pulumi.Input<number>;
    latestInstanceConfigurationId?: pulumi.Input<string>;
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    nodeTypeAppserver?: pulumi.Input<boolean>;
    nodeTypeConnector?: pulumi.Input<boolean>;
    nodeTypeWorker?: pulumi.Input<boolean>;
    refId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentEnterpriseSearchConfig {
    /**
     * Optionally override the docker image the Enterprise Search nodes will use. Note that this field will only work for internal users only.
     */
    dockerImage?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsJson?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideJson?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideYaml?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentIntegrationsServer {
    /**
     * Optionally define the Integrations Server configuration options for the IntegrationsServer Server
     */
    config?: pulumi.Input<inputs.DeploymentIntegrationsServerConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    /**
     * URLs for the accessing the Fleet and APM API's within this Integrations Server resource.
     */
    endpoints?: pulumi.Input<inputs.DeploymentIntegrationsServerEndpoints>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    instanceConfigurationVersion?: pulumi.Input<number>;
    latestInstanceConfigurationId?: pulumi.Input<string>;
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    refId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentIntegrationsServerConfig {
    /**
     * Optionally enable debug mode for Integrations Server instances - defaults to false
     */
    debugEnabled?: pulumi.Input<boolean>;
    /**
     * Optionally override the docker image the Integrations Server nodes will use. Note that this field will only work for internal users only.
     */
    dockerImage?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsJson?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideJson?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideYaml?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentIntegrationsServerEndpoints {
    apm: pulumi.Input<string>;
    fleet: pulumi.Input<string>;
    profiling: pulumi.Input<string>;
    symbols: pulumi.Input<string>;
}

export interface DeploymentKibana {
    /**
     * Optionally define the Kibana configuration options for the Kibana Server
     */
    config?: pulumi.Input<inputs.DeploymentKibanaConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    instanceConfigurationVersion?: pulumi.Input<number>;
    latestInstanceConfigurationId?: pulumi.Input<string>;
    latestInstanceConfigurationVersion?: pulumi.Input<number>;
    refId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentKibanaConfig {
    /**
     * Optionally override the docker image the Kibana nodes will use. Note that this field will only work for internal users only.
     */
    dockerImage?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsJson?: pulumi.Input<string>;
    /**
     * An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideJson?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
     */
    userSettingsOverrideYaml?: pulumi.Input<string>;
    /**
     * An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
     */
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentObservability {
    deploymentId: pulumi.Input<string>;
    logs?: pulumi.Input<boolean>;
    metrics?: pulumi.Input<boolean>;
    refId?: pulumi.Input<string>;
}

export interface DeploymentTrafficFilterRule {
    /**
     * Azure endpoint GUID. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
     */
    azureEndpointGuid?: pulumi.Input<string>;
    /**
     * Azure endpoint name. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
     */
    azureEndpointName?: pulumi.Input<string>;
    /**
     * Description of this individual rule
     */
    description?: pulumi.Input<string>;
    /**
     * Computed rule ID
     */
    id?: pulumi.Input<string>;
    /**
     * Traffic filter source: IP address, CIDR mask, or VPC endpoint ID, **only required** when the type is not `azurePrivateEndpoint`
     */
    source?: pulumi.Input<string>;
}

export interface GetDeploymentsApm {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsApmArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsElasticsearch {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsElasticsearchArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsEnterpriseSearch {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsEnterpriseSearchArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsIntegrationsServer {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsIntegrationsServerArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsKibana {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsKibanaArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface SnapshotRepositoryGeneric {
    /**
     * An arbitrary JSON object containing the repository settings.
     */
    settings: pulumi.Input<string>;
    /**
     * Repository type
     */
    type: pulumi.Input<string>;
}

export interface SnapshotRepositoryS3 {
    /**
     * An S3 access key. If set, the secretKey setting must also be specified. If unset, the client will use the instance or container role instead.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Name of the S3 bucket to use for snapshots.
     */
    bucket: pulumi.Input<string>;
    /**
     * The S3 service endpoint to connect to. This defaults to s3.amazonaws.com but the AWS documentation lists alternative S3 endpoints. If you are using an S3-compatible service then you should set this to the service’s endpoint.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Whether to force the use of the path style access pattern. If true, the path style access pattern will be used. If false, the access pattern will be automatically determined by the AWS Java SDK (See AWS documentation for details). Defaults to false.
     */
    pathStyleAccess?: pulumi.Input<boolean>;
    /**
     * Allows specifying the signing region to use. Specifying this setting manually should not be necessary for most use cases. Generally, the SDK will correctly guess the signing region to use. It should be considered an expert level setting to support S3-compatible APIs that require v4 signatures and use a region other than the default us-east-1. Defaults to empty string which means that the SDK will try to automatically determine the correct signing region.
     */
    region?: pulumi.Input<string>;
    /**
     * An S3 secret key. If set, the accessKey setting must also be specified.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * When set to true files are encrypted on server side using AES256 algorithm. Defaults to false.
     */
    serverSideEncryption?: pulumi.Input<boolean>;
}
