// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DeploymentApm {
    /**
     * Optionally define the Apm configuration options for the APM Server
     */
    config?: pulumi.Input<inputs.DeploymentApmConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentApmConfig {
    debugEnabled?: pulumi.Input<boolean>;
    dockerImage?: pulumi.Input<string>;
    userSettingsJson?: pulumi.Input<string>;
    userSettingsOverrideJson?: pulumi.Input<string>;
    userSettingsOverrideYaml?: pulumi.Input<string>;
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentElasticsearch {
    /**
     * Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
     */
    autoscale?: pulumi.Input<boolean>;
    cloudId?: pulumi.Input<string>;
    /**
     * 'cold' topology element
     */
    cold?: pulumi.Input<inputs.DeploymentElasticsearchCold>;
    /**
     * Elasticsearch settings which will be applied to all topologies
     */
    config?: pulumi.Input<inputs.DeploymentElasticsearchConfig>;
    /**
     * 'coordinating' topology element
     */
    coordinating?: pulumi.Input<inputs.DeploymentElasticsearchCoordinating>;
    /**
     * Optional Elasticsearch extensions such as custom bundles or plugins.
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchExtension>[]>;
    /**
     * 'frozen' topology element
     */
    frozen?: pulumi.Input<inputs.DeploymentElasticsearchFrozen>;
    /**
     * 'hot' topology element
     */
    hot: pulumi.Input<inputs.DeploymentElasticsearchHot>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    /**
     * 'master' topology element
     */
    master?: pulumi.Input<inputs.DeploymentElasticsearchMaster>;
    /**
     * 'ml' topology element
     */
    ml?: pulumi.Input<inputs.DeploymentElasticsearchMl>;
    /**
     * A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
     */
    refId?: pulumi.Input<string>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region?: pulumi.Input<string>;
    /**
     * Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
     */
    remoteClusters?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchRemoteCluster>[]>;
    resourceId?: pulumi.Input<string>;
    /**
     * (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
     */
    snapshot?: pulumi.Input<inputs.DeploymentElasticsearchSnapshot>;
    snapshotSource?: pulumi.Input<inputs.DeploymentElasticsearchSnapshotSource>;
    strategy?: pulumi.Input<string>;
    trustAccounts?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchTrustAccount>[]>;
    trustExternals?: pulumi.Input<pulumi.Input<inputs.DeploymentElasticsearchTrustExternal>[]>;
    warm?: pulumi.Input<inputs.DeploymentElasticsearchWarm>;
}

export interface DeploymentElasticsearchCold {
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchColdAutoscaling>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    nodeTypeData?: pulumi.Input<string>;
    nodeTypeIngest?: pulumi.Input<string>;
    nodeTypeMaster?: pulumi.Input<string>;
    nodeTypeMl?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchColdAutoscaling {
    maxSize?: pulumi.Input<string>;
    maxSizeResource?: pulumi.Input<string>;
    minSize?: pulumi.Input<string>;
    minSizeResource?: pulumi.Input<string>;
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchConfig {
    dockerImage?: pulumi.Input<string>;
    plugins?: pulumi.Input<pulumi.Input<string>[]>;
    userSettingsJson?: pulumi.Input<string>;
    userSettingsOverrideJson?: pulumi.Input<string>;
    userSettingsOverrideYaml?: pulumi.Input<string>;
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchCoordinating {
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchCoordinatingAutoscaling>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    nodeTypeData?: pulumi.Input<string>;
    nodeTypeIngest?: pulumi.Input<string>;
    nodeTypeMaster?: pulumi.Input<string>;
    nodeTypeMl?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchCoordinatingAutoscaling {
    maxSize?: pulumi.Input<string>;
    maxSizeResource?: pulumi.Input<string>;
    minSize?: pulumi.Input<string>;
    minSizeResource?: pulumi.Input<string>;
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchExtension {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    url: pulumi.Input<string>;
    /**
     * Elastic Stack version to use for all of the deployment resources.
     */
    version: pulumi.Input<string>;
}

export interface DeploymentElasticsearchFrozen {
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchFrozenAutoscaling>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    nodeTypeData?: pulumi.Input<string>;
    nodeTypeIngest?: pulumi.Input<string>;
    nodeTypeMaster?: pulumi.Input<string>;
    nodeTypeMl?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchFrozenAutoscaling {
    maxSize?: pulumi.Input<string>;
    maxSizeResource?: pulumi.Input<string>;
    minSize?: pulumi.Input<string>;
    minSizeResource?: pulumi.Input<string>;
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchHot {
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchHotAutoscaling>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    nodeTypeData?: pulumi.Input<string>;
    nodeTypeIngest?: pulumi.Input<string>;
    nodeTypeMaster?: pulumi.Input<string>;
    nodeTypeMl?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchHotAutoscaling {
    maxSize?: pulumi.Input<string>;
    maxSizeResource?: pulumi.Input<string>;
    minSize?: pulumi.Input<string>;
    minSizeResource?: pulumi.Input<string>;
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchMaster {
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchMasterAutoscaling>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    nodeTypeData?: pulumi.Input<string>;
    nodeTypeIngest?: pulumi.Input<string>;
    nodeTypeMaster?: pulumi.Input<string>;
    nodeTypeMl?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchMasterAutoscaling {
    maxSize?: pulumi.Input<string>;
    maxSizeResource?: pulumi.Input<string>;
    minSize?: pulumi.Input<string>;
    minSizeResource?: pulumi.Input<string>;
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchMl {
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchMlAutoscaling>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    nodeTypeData?: pulumi.Input<string>;
    nodeTypeIngest?: pulumi.Input<string>;
    nodeTypeMaster?: pulumi.Input<string>;
    nodeTypeMl?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchMlAutoscaling {
    maxSize?: pulumi.Input<string>;
    maxSizeResource?: pulumi.Input<string>;
    minSize?: pulumi.Input<string>;
    minSizeResource?: pulumi.Input<string>;
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentElasticsearchRemoteCluster {
    alias: pulumi.Input<string>;
    deploymentId: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    skipUnavailable?: pulumi.Input<boolean>;
}

export interface DeploymentElasticsearchSnapshot {
    enabled: pulumi.Input<boolean>;
    repository?: pulumi.Input<inputs.DeploymentElasticsearchSnapshotRepository>;
}

export interface DeploymentElasticsearchSnapshotRepository {
    reference?: pulumi.Input<inputs.DeploymentElasticsearchSnapshotRepositoryReference>;
}

export interface DeploymentElasticsearchSnapshotRepositoryReference {
    repositoryName: pulumi.Input<string>;
}

export interface DeploymentElasticsearchSnapshotSource {
    snapshotName?: pulumi.Input<string>;
    sourceElasticsearchClusterId: pulumi.Input<string>;
}

export interface DeploymentElasticsearchTrustAccount {
    accountId: pulumi.Input<string>;
    trustAll: pulumi.Input<boolean>;
    trustAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeploymentElasticsearchTrustExternal {
    relationshipId: pulumi.Input<string>;
    trustAll: pulumi.Input<boolean>;
    trustAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DeploymentElasticsearchWarm {
    autoscaling: pulumi.Input<inputs.DeploymentElasticsearchWarmAutoscaling>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeRoles?: pulumi.Input<pulumi.Input<string>[]>;
    nodeTypeData?: pulumi.Input<string>;
    nodeTypeIngest?: pulumi.Input<string>;
    nodeTypeMaster?: pulumi.Input<string>;
    nodeTypeMl?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentElasticsearchWarmAutoscaling {
    maxSize?: pulumi.Input<string>;
    maxSizeResource?: pulumi.Input<string>;
    minSize?: pulumi.Input<string>;
    minSizeResource?: pulumi.Input<string>;
    policyOverrideJson?: pulumi.Input<string>;
}

export interface DeploymentEnterpriseSearch {
    /**
     * Optionally define the Enterprise Search configuration options for the Enterprise Search Server
     */
    config?: pulumi.Input<inputs.DeploymentEnterpriseSearchConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    nodeTypeAppserver?: pulumi.Input<boolean>;
    nodeTypeConnector?: pulumi.Input<boolean>;
    nodeTypeWorker?: pulumi.Input<boolean>;
    refId?: pulumi.Input<string>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentEnterpriseSearchConfig {
    dockerImage?: pulumi.Input<string>;
    userSettingsJson?: pulumi.Input<string>;
    userSettingsOverrideJson?: pulumi.Input<string>;
    userSettingsOverrideYaml?: pulumi.Input<string>;
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentIntegrationsServer {
    /**
     * Optionally define the Integrations Server configuration options for the IntegrationsServer Server
     */
    config?: pulumi.Input<inputs.DeploymentIntegrationsServerConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    /**
     * URLs for the accessing the Fleet and APM API's within this Integrations Server resource.
     */
    endpoints?: pulumi.Input<inputs.DeploymentIntegrationsServerEndpoints>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentIntegrationsServerConfig {
    debugEnabled?: pulumi.Input<boolean>;
    dockerImage?: pulumi.Input<string>;
    userSettingsJson?: pulumi.Input<string>;
    userSettingsOverrideJson?: pulumi.Input<string>;
    userSettingsOverrideYaml?: pulumi.Input<string>;
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentIntegrationsServerEndpoints {
    apm: pulumi.Input<string>;
    fleet: pulumi.Input<string>;
}

export interface DeploymentKibana {
    /**
     * Optionally define the Kibana configuration options for the Kibana Server
     */
    config?: pulumi.Input<inputs.DeploymentKibanaConfig>;
    elasticsearchClusterRefId?: pulumi.Input<string>;
    httpEndpoint?: pulumi.Input<string>;
    httpsEndpoint?: pulumi.Input<string>;
    instanceConfigurationId?: pulumi.Input<string>;
    refId?: pulumi.Input<string>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region?: pulumi.Input<string>;
    resourceId?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    /**
     * Optional size type, defaults to "memory".
     */
    sizeResource?: pulumi.Input<string>;
    zoneCount?: pulumi.Input<number>;
}

export interface DeploymentKibanaConfig {
    dockerImage?: pulumi.Input<string>;
    userSettingsJson?: pulumi.Input<string>;
    userSettingsOverrideJson?: pulumi.Input<string>;
    userSettingsOverrideYaml?: pulumi.Input<string>;
    userSettingsYaml?: pulumi.Input<string>;
}

export interface DeploymentObservability {
    deploymentId: pulumi.Input<string>;
    logs?: pulumi.Input<boolean>;
    metrics?: pulumi.Input<boolean>;
    refId?: pulumi.Input<string>;
}

export interface DeploymentTrafficFilterRule {
    /**
     * Azure endpoint GUID. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
     */
    azureEndpointGuid?: pulumi.Input<string>;
    /**
     * Azure endpoint name. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
     */
    azureEndpointName?: pulumi.Input<string>;
    /**
     * Description of this individual rule
     */
    description?: pulumi.Input<string>;
    /**
     * Computed rule ID
     */
    id?: pulumi.Input<string>;
    /**
     * Traffic filter source: IP address, CIDR mask, or VPC endpoint ID, **only required** when the type is not `azurePrivateEndpoint`
     */
    source?: pulumi.Input<string>;
}

export interface GetDeploymentsApm {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsApmArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsElasticsearch {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsElasticsearchArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsEnterpriseSearch {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsEnterpriseSearchArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsIntegrationsServer {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsIntegrationsServerArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface GetDeploymentsKibana {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: string;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: string;
    /**
     * Elastic stack version.
     */
    version?: string;
}

export interface GetDeploymentsKibanaArgs {
    /**
     * Overall health status of the resource instances.
     */
    healthy?: pulumi.Input<string>;
    /**
     * Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
     */
    status?: pulumi.Input<string>;
    /**
     * Elastic stack version.
     */
    version?: pulumi.Input<string>;
}

export interface SnapshotRepositoryGeneric {
    /**
     * An arbitrary JSON object containing the repository settings.
     */
    settings: pulumi.Input<string>;
    /**
     * Repository type
     */
    type: pulumi.Input<string>;
}

export interface SnapshotRepositoryS3 {
    /**
     * An S3 access key. If set, the secretKey setting must also be specified. If unset, the client will use the instance or container role instead.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Name of the S3 bucket to use for snapshots.
     */
    bucket: pulumi.Input<string>;
    /**
     * The S3 service endpoint to connect to. This defaults to s3.amazonaws.com but the AWS documentation lists alternative S3 endpoints. If you are using an S3-compatible service then you should set this to the service’s endpoint.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Whether to force the use of the path style access pattern. If true, the path style access pattern will be used. If false, the access pattern will be automatically determined by the AWS Java SDK (See AWS documentation for details). Defaults to false.
     */
    pathStyleAccess?: pulumi.Input<boolean>;
    /**
     * Allows specifying the signing region to use. Specifying this setting manually should not be necessary for most use cases. Generally, the SDK will correctly guess the signing region to use. It should be considered an expert level setting to support S3-compatible APIs that require v4 signatures and use a region other than the default us-east-1. Defaults to empty string which means that the SDK will try to automatically determine the correct signing region.
     */
    region?: pulumi.Input<string>;
    /**
     * An S3 secret key. If set, the accessKey setting must also be specified.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * When set to true files are encrypted on server side using AES256 algorithm. Defaults to false.
     */
    serverSideEncryption?: pulumi.Input<boolean>;
}
