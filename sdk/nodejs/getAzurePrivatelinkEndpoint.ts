// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about the Azure Private Link configuration for a given region. Further documentation on how to establish a PrivateLink connection can be found in the ESS [documentation](https://www.elastic.co/guide/en/cloud/current/ec-traffic-filtering-vnet.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ec from "@pulumi/ec";
 *
 * const eastus = ec.getAzurePrivatelinkEndpoint({
 *     region: "eastus",
 * });
 * ```
 */
export function getAzurePrivatelinkEndpoint(args: GetAzurePrivatelinkEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetAzurePrivatelinkEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ec:index/getAzurePrivatelinkEndpoint:getAzurePrivatelinkEndpoint", {
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getAzurePrivatelinkEndpoint.
 */
export interface GetAzurePrivatelinkEndpointArgs {
    /**
     * Region to retrieve the Private Link configuration for.
     */
    region: string;
}

/**
 * A collection of values returned by getAzurePrivatelinkEndpoint.
 */
export interface GetAzurePrivatelinkEndpointResult {
    /**
     * The domain name to used in when configuring a private hosted zone in the VNet connection.
     */
    readonly domainName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Region to retrieve the Private Link configuration for.
     */
    readonly region: string;
    /**
     * The service alias to establish a connection to.
     */
    readonly serviceAlias: string;
}
/**
 * Use this data source to retrieve information about the Azure Private Link configuration for a given region. Further documentation on how to establish a PrivateLink connection can be found in the ESS [documentation](https://www.elastic.co/guide/en/cloud/current/ec-traffic-filtering-vnet.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ec from "@pulumi/ec";
 *
 * const eastus = ec.getAzurePrivatelinkEndpoint({
 *     region: "eastus",
 * });
 * ```
 */
export function getAzurePrivatelinkEndpointOutput(args: GetAzurePrivatelinkEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzurePrivatelinkEndpointResult> {
    return pulumi.output(args).apply((a: any) => getAzurePrivatelinkEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getAzurePrivatelinkEndpoint.
 */
export interface GetAzurePrivatelinkEndpointOutputArgs {
    /**
     * Region to retrieve the Private Link configuration for.
     */
    region: pulumi.Input<string>;
}
