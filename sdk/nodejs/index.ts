// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./deployment";
export * from "./deploymentElasticsearchKeystore";
export * from "./deploymentExtension";
export * from "./deploymentTrafficFilter";
export * from "./deploymentTrafficFilterAssociation";
export * from "./getDeployment";
export * from "./getDeployments";
export * from "./getStack";
export * from "./provider";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { Deployment } from "./deployment";
import { DeploymentElasticsearchKeystore } from "./deploymentElasticsearchKeystore";
import { DeploymentExtension } from "./deploymentExtension";
import { DeploymentTrafficFilter } from "./deploymentTrafficFilter";
import { DeploymentTrafficFilterAssociation } from "./deploymentTrafficFilterAssociation";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ec:index/deployment:Deployment":
                return new Deployment(name, <any>undefined, { urn })
            case "ec:index/deploymentElasticsearchKeystore:DeploymentElasticsearchKeystore":
                return new DeploymentElasticsearchKeystore(name, <any>undefined, { urn })
            case "ec:index/deploymentExtension:DeploymentExtension":
                return new DeploymentExtension(name, <any>undefined, { urn })
            case "ec:index/deploymentTrafficFilter:DeploymentTrafficFilter":
                return new DeploymentTrafficFilter(name, <any>undefined, { urn })
            case "ec:index/deploymentTrafficFilterAssociation:DeploymentTrafficFilterAssociation":
                return new DeploymentTrafficFilterAssociation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ec", "index/deployment", _module)
pulumi.runtime.registerResourceModule("ec", "index/deploymentElasticsearchKeystore", _module)
pulumi.runtime.registerResourceModule("ec", "index/deploymentExtension", _module)
pulumi.runtime.registerResourceModule("ec", "index/deploymentTrafficFilter", _module)
pulumi.runtime.registerResourceModule("ec", "index/deploymentTrafficFilterAssociation", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("ec", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:ec") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
