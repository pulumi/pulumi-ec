// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ### Basic
 *
 * ### With config
 *
 * `es.yaml`
 *
 * `deployment.tf`:
 *
 * ### With autoscaling
 *
 * ### With observability
 *
 * It is possible to enable observability without using a second deployment, by storing the observability data in the current deployment. To enable this, set `deploymentId` to `self`.
 *
 * ### With Cross Cluster Search settings
 *
 * ### With Keystore
 *
 * ## Import
 *
 * ~> **Note on deployment credentials** The `elastic` user credentials are only available whilst creating a deployment. Importing a deployment will not import the `elasticsearch_username` or `elasticsearch_password` attributes.
 *
 * ~> **Note on legacy (pre-slider) deployments** Importing deployments created prior to the addition of sliders in ECE or ESS, without being migrated to use sliders, is not supported.
 *
 * ~> **Note on pre 6.6.0 deployments** Importing deployments with a version lower than `6.6.0` is not supported.
 *
 * ~> **Note on deployments with topology user settings** Only deployments with global user settings (config) are supported. Make sure to migrate to global settings before importing.
 *
 * Deployments can be imported using the `id`, for example:
 *
 * ```sh
 * $ pulumi import ec:index/deployment:Deployment search 320b7b540dfc967a7a649c18e2fce4ed
 * ```
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentState, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ec:index/deployment:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * Deployment alias, affects the format of the resource URLs. Set to an empty value ("") to disable the alias.
     */
    declare public readonly alias: pulumi.Output<string>;
    /**
     * **DEPRECATED** APM cluster definition. This should only be used for deployments running a version lower than 8.0
     */
    declare public readonly apm: pulumi.Output<outputs.DeploymentApm | undefined>;
    declare public /*out*/ readonly apmSecretToken: pulumi.Output<string>;
    /**
     * Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
     */
    declare public readonly deploymentTemplateId: pulumi.Output<string>;
    /**
     * Elasticsearch cluster definition
     */
    declare public readonly elasticsearch: pulumi.Output<outputs.DeploymentElasticsearch>;
    declare public /*out*/ readonly elasticsearchPassword: pulumi.Output<string>;
    /**
     * Username for authenticating to the Elasticsearch resource.
     */
    declare public /*out*/ readonly elasticsearchUsername: pulumi.Output<string>;
    /**
     * Enterprise Search cluster definition.
     */
    declare public readonly enterpriseSearch: pulumi.Output<outputs.DeploymentEnterpriseSearch | undefined>;
    /**
     * Integrations Server cluster definition. Integrations Server replaces `apm` in Stack versions > 8.0
     */
    declare public readonly integrationsServer: pulumi.Output<outputs.DeploymentIntegrationsServer | undefined>;
    /**
     * Kibana cluster definition.
     *
     * > **Note on disabling Kibana** While optional it is recommended deployments specify a Kibana block, since not doing so might cause issues when modifying or upgrading the deployment.
     */
    declare public readonly kibana: pulumi.Output<outputs.DeploymentKibana | undefined>;
    /**
     * When set to true, the deployment will be updated according to the latest deployment template values.
     *
     * > **Note** If the <code>instance_configuration_id</code> or <code>instance_configuration_version</code> fields are set for a specific topology element, that element will not be updated.
     * > **Note** Hardware migrations are not supported for deployments with node types. To use this field, the deployment needs to be migrated to node roles first.
     */
    declare public readonly migrateToLatestHardware: pulumi.Output<boolean | undefined>;
    /**
     * Name for the deployment
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the current deployment itself by setting observability.deployment_id to `self`.
     */
    declare public readonly observability: pulumi.Output<outputs.DeploymentObservability | undefined>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * Request ID to set when you create the deployment. Use it only when previous attempts return an error and `requestId` is returned as part of the error.
     */
    declare public readonly requestId: pulumi.Output<string>;
    /**
     * Explicitly resets the elasticsearchPassword when true
     */
    declare public readonly resetElasticsearchPassword: pulumi.Output<boolean | undefined>;
    /**
     * Optional map of deployment tags
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of traffic filters rule identifiers that will be applied to the deployment.
     */
    declare public readonly trafficFilters: pulumi.Output<string[]>;
    /**
     * Elastic Stack version to use for all of the deployment resources.
     */
    declare public readonly version: pulumi.Output<string>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentArgs | DeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeploymentState | undefined;
            resourceInputs["alias"] = state?.alias;
            resourceInputs["apm"] = state?.apm;
            resourceInputs["apmSecretToken"] = state?.apmSecretToken;
            resourceInputs["deploymentTemplateId"] = state?.deploymentTemplateId;
            resourceInputs["elasticsearch"] = state?.elasticsearch;
            resourceInputs["elasticsearchPassword"] = state?.elasticsearchPassword;
            resourceInputs["elasticsearchUsername"] = state?.elasticsearchUsername;
            resourceInputs["enterpriseSearch"] = state?.enterpriseSearch;
            resourceInputs["integrationsServer"] = state?.integrationsServer;
            resourceInputs["kibana"] = state?.kibana;
            resourceInputs["migrateToLatestHardware"] = state?.migrateToLatestHardware;
            resourceInputs["name"] = state?.name;
            resourceInputs["observability"] = state?.observability;
            resourceInputs["region"] = state?.region;
            resourceInputs["requestId"] = state?.requestId;
            resourceInputs["resetElasticsearchPassword"] = state?.resetElasticsearchPassword;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["trafficFilters"] = state?.trafficFilters;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as DeploymentArgs | undefined;
            if (args?.deploymentTemplateId === undefined && !opts.urn) {
                throw new Error("Missing required property 'deploymentTemplateId'");
            }
            if (args?.elasticsearch === undefined && !opts.urn) {
                throw new Error("Missing required property 'elasticsearch'");
            }
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if (args?.version === undefined && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["alias"] = args?.alias;
            resourceInputs["apm"] = args?.apm;
            resourceInputs["deploymentTemplateId"] = args?.deploymentTemplateId;
            resourceInputs["elasticsearch"] = args?.elasticsearch;
            resourceInputs["enterpriseSearch"] = args?.enterpriseSearch;
            resourceInputs["integrationsServer"] = args?.integrationsServer;
            resourceInputs["kibana"] = args?.kibana;
            resourceInputs["migrateToLatestHardware"] = args?.migrateToLatestHardware;
            resourceInputs["name"] = args?.name;
            resourceInputs["observability"] = args?.observability;
            resourceInputs["region"] = args?.region;
            resourceInputs["requestId"] = args?.requestId;
            resourceInputs["resetElasticsearchPassword"] = args?.resetElasticsearchPassword;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["trafficFilters"] = args?.trafficFilters;
            resourceInputs["version"] = args?.version;
            resourceInputs["apmSecretToken"] = undefined /*out*/;
            resourceInputs["elasticsearchPassword"] = undefined /*out*/;
            resourceInputs["elasticsearchUsername"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apmSecretToken", "elasticsearchPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Deployment resources.
 */
export interface DeploymentState {
    /**
     * Deployment alias, affects the format of the resource URLs. Set to an empty value ("") to disable the alias.
     */
    alias?: pulumi.Input<string>;
    /**
     * **DEPRECATED** APM cluster definition. This should only be used for deployments running a version lower than 8.0
     */
    apm?: pulumi.Input<inputs.DeploymentApm>;
    apmSecretToken?: pulumi.Input<string>;
    /**
     * Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
     */
    deploymentTemplateId?: pulumi.Input<string>;
    /**
     * Elasticsearch cluster definition
     */
    elasticsearch?: pulumi.Input<inputs.DeploymentElasticsearch>;
    elasticsearchPassword?: pulumi.Input<string>;
    /**
     * Username for authenticating to the Elasticsearch resource.
     */
    elasticsearchUsername?: pulumi.Input<string>;
    /**
     * Enterprise Search cluster definition.
     */
    enterpriseSearch?: pulumi.Input<inputs.DeploymentEnterpriseSearch>;
    /**
     * Integrations Server cluster definition. Integrations Server replaces `apm` in Stack versions > 8.0
     */
    integrationsServer?: pulumi.Input<inputs.DeploymentIntegrationsServer>;
    /**
     * Kibana cluster definition.
     *
     * > **Note on disabling Kibana** While optional it is recommended deployments specify a Kibana block, since not doing so might cause issues when modifying or upgrading the deployment.
     */
    kibana?: pulumi.Input<inputs.DeploymentKibana>;
    /**
     * When set to true, the deployment will be updated according to the latest deployment template values.
     *
     * > **Note** If the <code>instance_configuration_id</code> or <code>instance_configuration_version</code> fields are set for a specific topology element, that element will not be updated.
     * > **Note** Hardware migrations are not supported for deployments with node types. To use this field, the deployment needs to be migrated to node roles first.
     */
    migrateToLatestHardware?: pulumi.Input<boolean>;
    /**
     * Name for the deployment
     */
    name?: pulumi.Input<string>;
    /**
     * Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the current deployment itself by setting observability.deployment_id to `self`.
     */
    observability?: pulumi.Input<inputs.DeploymentObservability>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region?: pulumi.Input<string>;
    /**
     * Request ID to set when you create the deployment. Use it only when previous attempts return an error and `requestId` is returned as part of the error.
     */
    requestId?: pulumi.Input<string>;
    /**
     * Explicitly resets the elasticsearchPassword when true
     */
    resetElasticsearchPassword?: pulumi.Input<boolean>;
    /**
     * Optional map of deployment tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of traffic filters rule identifiers that will be applied to the deployment.
     */
    trafficFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Elastic Stack version to use for all of the deployment resources.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * Deployment alias, affects the format of the resource URLs. Set to an empty value ("") to disable the alias.
     */
    alias?: pulumi.Input<string>;
    /**
     * **DEPRECATED** APM cluster definition. This should only be used for deployments running a version lower than 8.0
     */
    apm?: pulumi.Input<inputs.DeploymentApm>;
    /**
     * Deployment template identifier to create the deployment from. See the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
     */
    deploymentTemplateId: pulumi.Input<string>;
    /**
     * Elasticsearch cluster definition
     */
    elasticsearch: pulumi.Input<inputs.DeploymentElasticsearch>;
    /**
     * Enterprise Search cluster definition.
     */
    enterpriseSearch?: pulumi.Input<inputs.DeploymentEnterpriseSearch>;
    /**
     * Integrations Server cluster definition. Integrations Server replaces `apm` in Stack versions > 8.0
     */
    integrationsServer?: pulumi.Input<inputs.DeploymentIntegrationsServer>;
    /**
     * Kibana cluster definition.
     *
     * > **Note on disabling Kibana** While optional it is recommended deployments specify a Kibana block, since not doing so might cause issues when modifying or upgrading the deployment.
     */
    kibana?: pulumi.Input<inputs.DeploymentKibana>;
    /**
     * When set to true, the deployment will be updated according to the latest deployment template values.
     *
     * > **Note** If the <code>instance_configuration_id</code> or <code>instance_configuration_version</code> fields are set for a specific topology element, that element will not be updated.
     * > **Note** Hardware migrations are not supported for deployments with node types. To use this field, the deployment needs to be migrated to node roles first.
     */
    migrateToLatestHardware?: pulumi.Input<boolean>;
    /**
     * Name for the deployment
     */
    name?: pulumi.Input<string>;
    /**
     * Observability settings that you can set to ship logs and metrics to a deployment. The target deployment can also be the current deployment itself by setting observability.deployment_id to `self`.
     */
    observability?: pulumi.Input<inputs.DeploymentObservability>;
    /**
     * Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
     */
    region: pulumi.Input<string>;
    /**
     * Request ID to set when you create the deployment. Use it only when previous attempts return an error and `requestId` is returned as part of the error.
     */
    requestId?: pulumi.Input<string>;
    /**
     * Explicitly resets the elasticsearchPassword when true
     */
    resetElasticsearchPassword?: pulumi.Input<boolean>;
    /**
     * Optional map of deployment tags
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of traffic filters rule identifiers that will be applied to the deployment.
     */
    trafficFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Elastic Stack version to use for all of the deployment resources.
     */
    version: pulumi.Input<string>;
}
