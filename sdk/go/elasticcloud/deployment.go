// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Deployment struct {
	pulumi.CustomResourceState

	// Optional deployment alias that affects the format of the resource URLs
	Alias pulumi.StringOutput `pulumi:"alias"`
	// Optional APM resource definition
	Apm            DeploymentApmPtrOutput `pulumi:"apm"`
	ApmSecretToken pulumi.StringOutput    `pulumi:"apmSecretToken"`
	// Required Deployment Template identifier to create the deployment from
	DeploymentTemplateId pulumi.StringOutput `pulumi:"deploymentTemplateId"`
	// Required Elasticsearch resource definition
	Elasticsearch DeploymentElasticsearchOutput `pulumi:"elasticsearch"`
	// Computed password obtained upon creating the Elasticsearch resource
	ElasticsearchPassword pulumi.StringOutput `pulumi:"elasticsearchPassword"`
	// Computed username obtained upon creating the Elasticsearch resource
	ElasticsearchUsername pulumi.StringOutput `pulumi:"elasticsearchUsername"`
	// Optional Enterprise Search resource definition
	EnterpriseSearch DeploymentEnterpriseSearchPtrOutput `pulumi:"enterpriseSearch"`
	// Optional Kibana resource definition
	Kibana DeploymentKibanaPtrOutput `pulumi:"kibana"`
	// Optional name for the deployment
	Name pulumi.StringOutput `pulumi:"name"`
	// Optional observability settings. Ship logs and metrics to a dedicated deployment.
	Observability DeploymentObservabilityPtrOutput `pulumi:"observability"`
	// Required ESS region where to create the deployment, for ECE environments "ece-region" must be set
	Region pulumi.StringOutput `pulumi:"region"`
	// Optional request_id to set on the create operation, only use when previous create attempts return with an error and a
	// request_id is returned as part of the error
	RequestId pulumi.StringPtrOutput `pulumi:"requestId"`
	// Optional map of deployment tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Optional list of traffic filters to apply to this deployment.
	TrafficFilters pulumi.StringArrayOutput `pulumi:"trafficFilters"`
	// Required Elastic Stack version to use for all of the deployment resources
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOption) (*Deployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeploymentTemplateId == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentTemplateId'")
	}
	if args.Elasticsearch == nil {
		return nil, errors.New("invalid value for required argument 'Elasticsearch'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource Deployment
	err := ctx.RegisterResource("elasticcloud:index/deployment:Deployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentState, opts ...pulumi.ResourceOption) (*Deployment, error) {
	var resource Deployment
	err := ctx.ReadResource("elasticcloud:index/deployment:Deployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Deployment resources.
type deploymentState struct {
	// Optional deployment alias that affects the format of the resource URLs
	Alias *string `pulumi:"alias"`
	// Optional APM resource definition
	Apm            *DeploymentApm `pulumi:"apm"`
	ApmSecretToken *string        `pulumi:"apmSecretToken"`
	// Required Deployment Template identifier to create the deployment from
	DeploymentTemplateId *string `pulumi:"deploymentTemplateId"`
	// Required Elasticsearch resource definition
	Elasticsearch *DeploymentElasticsearch `pulumi:"elasticsearch"`
	// Computed password obtained upon creating the Elasticsearch resource
	ElasticsearchPassword *string `pulumi:"elasticsearchPassword"`
	// Computed username obtained upon creating the Elasticsearch resource
	ElasticsearchUsername *string `pulumi:"elasticsearchUsername"`
	// Optional Enterprise Search resource definition
	EnterpriseSearch *DeploymentEnterpriseSearch `pulumi:"enterpriseSearch"`
	// Optional Kibana resource definition
	Kibana *DeploymentKibana `pulumi:"kibana"`
	// Optional name for the deployment
	Name *string `pulumi:"name"`
	// Optional observability settings. Ship logs and metrics to a dedicated deployment.
	Observability *DeploymentObservability `pulumi:"observability"`
	// Required ESS region where to create the deployment, for ECE environments "ece-region" must be set
	Region *string `pulumi:"region"`
	// Optional request_id to set on the create operation, only use when previous create attempts return with an error and a
	// request_id is returned as part of the error
	RequestId *string `pulumi:"requestId"`
	// Optional map of deployment tags
	Tags map[string]string `pulumi:"tags"`
	// Optional list of traffic filters to apply to this deployment.
	TrafficFilters []string `pulumi:"trafficFilters"`
	// Required Elastic Stack version to use for all of the deployment resources
	Version *string `pulumi:"version"`
}

type DeploymentState struct {
	// Optional deployment alias that affects the format of the resource URLs
	Alias pulumi.StringPtrInput
	// Optional APM resource definition
	Apm            DeploymentApmPtrInput
	ApmSecretToken pulumi.StringPtrInput
	// Required Deployment Template identifier to create the deployment from
	DeploymentTemplateId pulumi.StringPtrInput
	// Required Elasticsearch resource definition
	Elasticsearch DeploymentElasticsearchPtrInput
	// Computed password obtained upon creating the Elasticsearch resource
	ElasticsearchPassword pulumi.StringPtrInput
	// Computed username obtained upon creating the Elasticsearch resource
	ElasticsearchUsername pulumi.StringPtrInput
	// Optional Enterprise Search resource definition
	EnterpriseSearch DeploymentEnterpriseSearchPtrInput
	// Optional Kibana resource definition
	Kibana DeploymentKibanaPtrInput
	// Optional name for the deployment
	Name pulumi.StringPtrInput
	// Optional observability settings. Ship logs and metrics to a dedicated deployment.
	Observability DeploymentObservabilityPtrInput
	// Required ESS region where to create the deployment, for ECE environments "ece-region" must be set
	Region pulumi.StringPtrInput
	// Optional request_id to set on the create operation, only use when previous create attempts return with an error and a
	// request_id is returned as part of the error
	RequestId pulumi.StringPtrInput
	// Optional map of deployment tags
	Tags pulumi.StringMapInput
	// Optional list of traffic filters to apply to this deployment.
	TrafficFilters pulumi.StringArrayInput
	// Required Elastic Stack version to use for all of the deployment resources
	Version pulumi.StringPtrInput
}

func (DeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentState)(nil)).Elem()
}

type deploymentArgs struct {
	// Optional deployment alias that affects the format of the resource URLs
	Alias *string `pulumi:"alias"`
	// Optional APM resource definition
	Apm *DeploymentApm `pulumi:"apm"`
	// Required Deployment Template identifier to create the deployment from
	DeploymentTemplateId string `pulumi:"deploymentTemplateId"`
	// Required Elasticsearch resource definition
	Elasticsearch DeploymentElasticsearch `pulumi:"elasticsearch"`
	// Optional Enterprise Search resource definition
	EnterpriseSearch *DeploymentEnterpriseSearch `pulumi:"enterpriseSearch"`
	// Optional Kibana resource definition
	Kibana *DeploymentKibana `pulumi:"kibana"`
	// Optional name for the deployment
	Name *string `pulumi:"name"`
	// Optional observability settings. Ship logs and metrics to a dedicated deployment.
	Observability *DeploymentObservability `pulumi:"observability"`
	// Required ESS region where to create the deployment, for ECE environments "ece-region" must be set
	Region string `pulumi:"region"`
	// Optional request_id to set on the create operation, only use when previous create attempts return with an error and a
	// request_id is returned as part of the error
	RequestId *string `pulumi:"requestId"`
	// Optional map of deployment tags
	Tags map[string]string `pulumi:"tags"`
	// Optional list of traffic filters to apply to this deployment.
	TrafficFilters []string `pulumi:"trafficFilters"`
	// Required Elastic Stack version to use for all of the deployment resources
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// Optional deployment alias that affects the format of the resource URLs
	Alias pulumi.StringPtrInput
	// Optional APM resource definition
	Apm DeploymentApmPtrInput
	// Required Deployment Template identifier to create the deployment from
	DeploymentTemplateId pulumi.StringInput
	// Required Elasticsearch resource definition
	Elasticsearch DeploymentElasticsearchInput
	// Optional Enterprise Search resource definition
	EnterpriseSearch DeploymentEnterpriseSearchPtrInput
	// Optional Kibana resource definition
	Kibana DeploymentKibanaPtrInput
	// Optional name for the deployment
	Name pulumi.StringPtrInput
	// Optional observability settings. Ship logs and metrics to a dedicated deployment.
	Observability DeploymentObservabilityPtrInput
	// Required ESS region where to create the deployment, for ECE environments "ece-region" must be set
	Region pulumi.StringInput
	// Optional request_id to set on the create operation, only use when previous create attempts return with an error and a
	// request_id is returned as part of the error
	RequestId pulumi.StringPtrInput
	// Optional map of deployment tags
	Tags pulumi.StringMapInput
	// Optional list of traffic filters to apply to this deployment.
	TrafficFilters pulumi.StringArrayInput
	// Required Elastic Stack version to use for all of the deployment resources
	Version pulumi.StringInput
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentArgs)(nil)).Elem()
}

type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput
}

func (*Deployment) ElementType() reflect.Type {
	return reflect.TypeOf((*Deployment)(nil))
}

func (i *Deployment) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i *Deployment) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

func (i *Deployment) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return i.ToDeploymentPtrOutputWithContext(context.Background())
}

func (i *Deployment) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPtrOutput)
}

type DeploymentPtrInput interface {
	pulumi.Input

	ToDeploymentPtrOutput() DeploymentPtrOutput
	ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput
}

type deploymentPtrType DeploymentArgs

func (*deploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil))
}

func (i *deploymentPtrType) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return i.ToDeploymentPtrOutputWithContext(context.Background())
}

func (i *deploymentPtrType) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentPtrOutput)
}

// DeploymentArrayInput is an input type that accepts DeploymentArray and DeploymentArrayOutput values.
// You can construct a concrete instance of `DeploymentArrayInput` via:
//
//          DeploymentArray{ DeploymentArgs{...} }
type DeploymentArrayInput interface {
	pulumi.Input

	ToDeploymentArrayOutput() DeploymentArrayOutput
	ToDeploymentArrayOutputWithContext(context.Context) DeploymentArrayOutput
}

type DeploymentArray []DeploymentInput

func (DeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (i DeploymentArray) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return i.ToDeploymentArrayOutputWithContext(context.Background())
}

func (i DeploymentArray) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentArrayOutput)
}

// DeploymentMapInput is an input type that accepts DeploymentMap and DeploymentMapOutput values.
// You can construct a concrete instance of `DeploymentMapInput` via:
//
//          DeploymentMap{ "key": DeploymentArgs{...} }
type DeploymentMapInput interface {
	pulumi.Input

	ToDeploymentMapOutput() DeploymentMapOutput
	ToDeploymentMapOutputWithContext(context.Context) DeploymentMapOutput
}

type DeploymentMap map[string]DeploymentInput

func (DeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (i DeploymentMap) ToDeploymentMapOutput() DeploymentMapOutput {
	return i.ToDeploymentMapOutputWithContext(context.Background())
}

func (i DeploymentMap) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentMapOutput)
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Deployment)(nil))
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return o.ToDeploymentPtrOutputWithContext(context.Background())
}

func (o DeploymentOutput) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Deployment) *Deployment {
		return &v
	}).(DeploymentPtrOutput)
}

type DeploymentPtrOutput struct{ *pulumi.OutputState }

func (DeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil))
}

func (o DeploymentPtrOutput) ToDeploymentPtrOutput() DeploymentPtrOutput {
	return o
}

func (o DeploymentPtrOutput) ToDeploymentPtrOutputWithContext(ctx context.Context) DeploymentPtrOutput {
	return o
}

func (o DeploymentPtrOutput) Elem() DeploymentOutput {
	return o.ApplyT(func(v *Deployment) Deployment {
		if v != nil {
			return *v
		}
		var ret Deployment
		return ret
	}).(DeploymentOutput)
}

type DeploymentArrayOutput struct{ *pulumi.OutputState }

func (DeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Deployment)(nil))
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) Index(i pulumi.IntInput) DeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Deployment {
		return vs[0].([]Deployment)[vs[1].(int)]
	}).(DeploymentOutput)
}

type DeploymentMapOutput struct{ *pulumi.OutputState }

func (DeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Deployment)(nil))
}

func (o DeploymentMapOutput) ToDeploymentMapOutput() DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) MapIndex(k pulumi.StringInput) DeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Deployment {
		return vs[0].(map[string]Deployment)[vs[1].(string)]
	}).(DeploymentOutput)
}

func init() {
	pulumi.RegisterOutputType(DeploymentOutput{})
	pulumi.RegisterOutputType(DeploymentPtrOutput{})
	pulumi.RegisterOutputType(DeploymentArrayOutput{})
	pulumi.RegisterOutputType(DeploymentMapOutput{})
}
