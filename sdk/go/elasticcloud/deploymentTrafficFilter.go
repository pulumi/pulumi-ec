// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeploymentTrafficFilter struct {
	pulumi.CustomResourceState

	// Optional ruleset description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Should the ruleset be automatically included in the new deployments (Defaults to false)
	IncludeByDefault pulumi.BoolPtrOutput `pulumi:"includeByDefault"`
	// Required name of the ruleset
	Name pulumi.StringOutput `pulumi:"name"`
	// Required filter region, the ruleset can only be attached to deployments in the specific region
	Region pulumi.StringOutput `pulumi:"region"`
	// Required list of rules, which the ruleset is made of.
	Rules DeploymentTrafficFilterRuleArrayOutput `pulumi:"rules"`
	// Required type of the ruleset ("ip", "vpce" or "azure_private_endpoint")
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDeploymentTrafficFilter registers a new resource with the given unique name, arguments, and options.
func NewDeploymentTrafficFilter(ctx *pulumi.Context,
	name string, args *DeploymentTrafficFilterArgs, opts ...pulumi.ResourceOption) (*DeploymentTrafficFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource DeploymentTrafficFilter
	err := ctx.RegisterResource("elasticcloud:index/deploymentTrafficFilter:DeploymentTrafficFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentTrafficFilter gets an existing DeploymentTrafficFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentTrafficFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentTrafficFilterState, opts ...pulumi.ResourceOption) (*DeploymentTrafficFilter, error) {
	var resource DeploymentTrafficFilter
	err := ctx.ReadResource("elasticcloud:index/deploymentTrafficFilter:DeploymentTrafficFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentTrafficFilter resources.
type deploymentTrafficFilterState struct {
	// Optional ruleset description
	Description *string `pulumi:"description"`
	// Should the ruleset be automatically included in the new deployments (Defaults to false)
	IncludeByDefault *bool `pulumi:"includeByDefault"`
	// Required name of the ruleset
	Name *string `pulumi:"name"`
	// Required filter region, the ruleset can only be attached to deployments in the specific region
	Region *string `pulumi:"region"`
	// Required list of rules, which the ruleset is made of.
	Rules []DeploymentTrafficFilterRule `pulumi:"rules"`
	// Required type of the ruleset ("ip", "vpce" or "azure_private_endpoint")
	Type *string `pulumi:"type"`
}

type DeploymentTrafficFilterState struct {
	// Optional ruleset description
	Description pulumi.StringPtrInput
	// Should the ruleset be automatically included in the new deployments (Defaults to false)
	IncludeByDefault pulumi.BoolPtrInput
	// Required name of the ruleset
	Name pulumi.StringPtrInput
	// Required filter region, the ruleset can only be attached to deployments in the specific region
	Region pulumi.StringPtrInput
	// Required list of rules, which the ruleset is made of.
	Rules DeploymentTrafficFilterRuleArrayInput
	// Required type of the ruleset ("ip", "vpce" or "azure_private_endpoint")
	Type pulumi.StringPtrInput
}

func (DeploymentTrafficFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentTrafficFilterState)(nil)).Elem()
}

type deploymentTrafficFilterArgs struct {
	// Optional ruleset description
	Description *string `pulumi:"description"`
	// Should the ruleset be automatically included in the new deployments (Defaults to false)
	IncludeByDefault *bool `pulumi:"includeByDefault"`
	// Required name of the ruleset
	Name *string `pulumi:"name"`
	// Required filter region, the ruleset can only be attached to deployments in the specific region
	Region string `pulumi:"region"`
	// Required list of rules, which the ruleset is made of.
	Rules []DeploymentTrafficFilterRule `pulumi:"rules"`
	// Required type of the ruleset ("ip", "vpce" or "azure_private_endpoint")
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a DeploymentTrafficFilter resource.
type DeploymentTrafficFilterArgs struct {
	// Optional ruleset description
	Description pulumi.StringPtrInput
	// Should the ruleset be automatically included in the new deployments (Defaults to false)
	IncludeByDefault pulumi.BoolPtrInput
	// Required name of the ruleset
	Name pulumi.StringPtrInput
	// Required filter region, the ruleset can only be attached to deployments in the specific region
	Region pulumi.StringInput
	// Required list of rules, which the ruleset is made of.
	Rules DeploymentTrafficFilterRuleArrayInput
	// Required type of the ruleset ("ip", "vpce" or "azure_private_endpoint")
	Type pulumi.StringInput
}

func (DeploymentTrafficFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentTrafficFilterArgs)(nil)).Elem()
}

type DeploymentTrafficFilterInput interface {
	pulumi.Input

	ToDeploymentTrafficFilterOutput() DeploymentTrafficFilterOutput
	ToDeploymentTrafficFilterOutputWithContext(ctx context.Context) DeploymentTrafficFilterOutput
}

func (*DeploymentTrafficFilter) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTrafficFilter)(nil))
}

func (i *DeploymentTrafficFilter) ToDeploymentTrafficFilterOutput() DeploymentTrafficFilterOutput {
	return i.ToDeploymentTrafficFilterOutputWithContext(context.Background())
}

func (i *DeploymentTrafficFilter) ToDeploymentTrafficFilterOutputWithContext(ctx context.Context) DeploymentTrafficFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTrafficFilterOutput)
}

func (i *DeploymentTrafficFilter) ToDeploymentTrafficFilterPtrOutput() DeploymentTrafficFilterPtrOutput {
	return i.ToDeploymentTrafficFilterPtrOutputWithContext(context.Background())
}

func (i *DeploymentTrafficFilter) ToDeploymentTrafficFilterPtrOutputWithContext(ctx context.Context) DeploymentTrafficFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTrafficFilterPtrOutput)
}

type DeploymentTrafficFilterPtrInput interface {
	pulumi.Input

	ToDeploymentTrafficFilterPtrOutput() DeploymentTrafficFilterPtrOutput
	ToDeploymentTrafficFilterPtrOutputWithContext(ctx context.Context) DeploymentTrafficFilterPtrOutput
}

type deploymentTrafficFilterPtrType DeploymentTrafficFilterArgs

func (*deploymentTrafficFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentTrafficFilter)(nil))
}

func (i *deploymentTrafficFilterPtrType) ToDeploymentTrafficFilterPtrOutput() DeploymentTrafficFilterPtrOutput {
	return i.ToDeploymentTrafficFilterPtrOutputWithContext(context.Background())
}

func (i *deploymentTrafficFilterPtrType) ToDeploymentTrafficFilterPtrOutputWithContext(ctx context.Context) DeploymentTrafficFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTrafficFilterPtrOutput)
}

// DeploymentTrafficFilterArrayInput is an input type that accepts DeploymentTrafficFilterArray and DeploymentTrafficFilterArrayOutput values.
// You can construct a concrete instance of `DeploymentTrafficFilterArrayInput` via:
//
//          DeploymentTrafficFilterArray{ DeploymentTrafficFilterArgs{...} }
type DeploymentTrafficFilterArrayInput interface {
	pulumi.Input

	ToDeploymentTrafficFilterArrayOutput() DeploymentTrafficFilterArrayOutput
	ToDeploymentTrafficFilterArrayOutputWithContext(context.Context) DeploymentTrafficFilterArrayOutput
}

type DeploymentTrafficFilterArray []DeploymentTrafficFilterInput

func (DeploymentTrafficFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentTrafficFilter)(nil)).Elem()
}

func (i DeploymentTrafficFilterArray) ToDeploymentTrafficFilterArrayOutput() DeploymentTrafficFilterArrayOutput {
	return i.ToDeploymentTrafficFilterArrayOutputWithContext(context.Background())
}

func (i DeploymentTrafficFilterArray) ToDeploymentTrafficFilterArrayOutputWithContext(ctx context.Context) DeploymentTrafficFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTrafficFilterArrayOutput)
}

// DeploymentTrafficFilterMapInput is an input type that accepts DeploymentTrafficFilterMap and DeploymentTrafficFilterMapOutput values.
// You can construct a concrete instance of `DeploymentTrafficFilterMapInput` via:
//
//          DeploymentTrafficFilterMap{ "key": DeploymentTrafficFilterArgs{...} }
type DeploymentTrafficFilterMapInput interface {
	pulumi.Input

	ToDeploymentTrafficFilterMapOutput() DeploymentTrafficFilterMapOutput
	ToDeploymentTrafficFilterMapOutputWithContext(context.Context) DeploymentTrafficFilterMapOutput
}

type DeploymentTrafficFilterMap map[string]DeploymentTrafficFilterInput

func (DeploymentTrafficFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentTrafficFilter)(nil)).Elem()
}

func (i DeploymentTrafficFilterMap) ToDeploymentTrafficFilterMapOutput() DeploymentTrafficFilterMapOutput {
	return i.ToDeploymentTrafficFilterMapOutputWithContext(context.Background())
}

func (i DeploymentTrafficFilterMap) ToDeploymentTrafficFilterMapOutputWithContext(ctx context.Context) DeploymentTrafficFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTrafficFilterMapOutput)
}

type DeploymentTrafficFilterOutput struct{ *pulumi.OutputState }

func (DeploymentTrafficFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTrafficFilter)(nil))
}

func (o DeploymentTrafficFilterOutput) ToDeploymentTrafficFilterOutput() DeploymentTrafficFilterOutput {
	return o
}

func (o DeploymentTrafficFilterOutput) ToDeploymentTrafficFilterOutputWithContext(ctx context.Context) DeploymentTrafficFilterOutput {
	return o
}

func (o DeploymentTrafficFilterOutput) ToDeploymentTrafficFilterPtrOutput() DeploymentTrafficFilterPtrOutput {
	return o.ToDeploymentTrafficFilterPtrOutputWithContext(context.Background())
}

func (o DeploymentTrafficFilterOutput) ToDeploymentTrafficFilterPtrOutputWithContext(ctx context.Context) DeploymentTrafficFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentTrafficFilter) *DeploymentTrafficFilter {
		return &v
	}).(DeploymentTrafficFilterPtrOutput)
}

type DeploymentTrafficFilterPtrOutput struct{ *pulumi.OutputState }

func (DeploymentTrafficFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentTrafficFilter)(nil))
}

func (o DeploymentTrafficFilterPtrOutput) ToDeploymentTrafficFilterPtrOutput() DeploymentTrafficFilterPtrOutput {
	return o
}

func (o DeploymentTrafficFilterPtrOutput) ToDeploymentTrafficFilterPtrOutputWithContext(ctx context.Context) DeploymentTrafficFilterPtrOutput {
	return o
}

func (o DeploymentTrafficFilterPtrOutput) Elem() DeploymentTrafficFilterOutput {
	return o.ApplyT(func(v *DeploymentTrafficFilter) DeploymentTrafficFilter {
		if v != nil {
			return *v
		}
		var ret DeploymentTrafficFilter
		return ret
	}).(DeploymentTrafficFilterOutput)
}

type DeploymentTrafficFilterArrayOutput struct{ *pulumi.OutputState }

func (DeploymentTrafficFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentTrafficFilter)(nil))
}

func (o DeploymentTrafficFilterArrayOutput) ToDeploymentTrafficFilterArrayOutput() DeploymentTrafficFilterArrayOutput {
	return o
}

func (o DeploymentTrafficFilterArrayOutput) ToDeploymentTrafficFilterArrayOutputWithContext(ctx context.Context) DeploymentTrafficFilterArrayOutput {
	return o
}

func (o DeploymentTrafficFilterArrayOutput) Index(i pulumi.IntInput) DeploymentTrafficFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentTrafficFilter {
		return vs[0].([]DeploymentTrafficFilter)[vs[1].(int)]
	}).(DeploymentTrafficFilterOutput)
}

type DeploymentTrafficFilterMapOutput struct{ *pulumi.OutputState }

func (DeploymentTrafficFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DeploymentTrafficFilter)(nil))
}

func (o DeploymentTrafficFilterMapOutput) ToDeploymentTrafficFilterMapOutput() DeploymentTrafficFilterMapOutput {
	return o
}

func (o DeploymentTrafficFilterMapOutput) ToDeploymentTrafficFilterMapOutputWithContext(ctx context.Context) DeploymentTrafficFilterMapOutput {
	return o
}

func (o DeploymentTrafficFilterMapOutput) MapIndex(k pulumi.StringInput) DeploymentTrafficFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DeploymentTrafficFilter {
		return vs[0].(map[string]DeploymentTrafficFilter)[vs[1].(string)]
	}).(DeploymentTrafficFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(DeploymentTrafficFilterOutput{})
	pulumi.RegisterOutputType(DeploymentTrafficFilterPtrOutput{})
	pulumi.RegisterOutputType(DeploymentTrafficFilterArrayOutput{})
	pulumi.RegisterOutputType(DeploymentTrafficFilterMapOutput{})
}
