// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeploymentExtension struct {
	pulumi.CustomResourceState

	// Description for extension
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// download url
	DownloadUrl pulumi.StringPtrOutput `pulumi:"downloadUrl"`
	// Extension type. bundle or plugin
	ExtensionType pulumi.StringOutput `pulumi:"extensionType"`
	// file hash
	FileHash pulumi.StringPtrOutput `pulumi:"fileHash"`
	// file path
	FilePath     pulumi.StringPtrOutput `pulumi:"filePath"`
	LastModified pulumi.StringOutput    `pulumi:"lastModified"`
	// Required name of the ruleset
	Name pulumi.StringOutput `pulumi:"name"`
	Size pulumi.IntOutput    `pulumi:"size"`
	Url  pulumi.StringOutput `pulumi:"url"`
	// Eleasticsearch version
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewDeploymentExtension registers a new resource with the given unique name, arguments, and options.
func NewDeploymentExtension(ctx *pulumi.Context,
	name string, args *DeploymentExtensionArgs, opts ...pulumi.ResourceOption) (*DeploymentExtension, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExtensionType == nil {
		return nil, errors.New("invalid value for required argument 'ExtensionType'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource DeploymentExtension
	err := ctx.RegisterResource("elasticcloud:index/deploymentExtension:DeploymentExtension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentExtension gets an existing DeploymentExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentExtensionState, opts ...pulumi.ResourceOption) (*DeploymentExtension, error) {
	var resource DeploymentExtension
	err := ctx.ReadResource("elasticcloud:index/deploymentExtension:DeploymentExtension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentExtension resources.
type deploymentExtensionState struct {
	// Description for extension
	Description *string `pulumi:"description"`
	// download url
	DownloadUrl *string `pulumi:"downloadUrl"`
	// Extension type. bundle or plugin
	ExtensionType *string `pulumi:"extensionType"`
	// file hash
	FileHash *string `pulumi:"fileHash"`
	// file path
	FilePath     *string `pulumi:"filePath"`
	LastModified *string `pulumi:"lastModified"`
	// Required name of the ruleset
	Name *string `pulumi:"name"`
	Size *int    `pulumi:"size"`
	Url  *string `pulumi:"url"`
	// Eleasticsearch version
	Version *string `pulumi:"version"`
}

type DeploymentExtensionState struct {
	// Description for extension
	Description pulumi.StringPtrInput
	// download url
	DownloadUrl pulumi.StringPtrInput
	// Extension type. bundle or plugin
	ExtensionType pulumi.StringPtrInput
	// file hash
	FileHash pulumi.StringPtrInput
	// file path
	FilePath     pulumi.StringPtrInput
	LastModified pulumi.StringPtrInput
	// Required name of the ruleset
	Name pulumi.StringPtrInput
	Size pulumi.IntPtrInput
	Url  pulumi.StringPtrInput
	// Eleasticsearch version
	Version pulumi.StringPtrInput
}

func (DeploymentExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentExtensionState)(nil)).Elem()
}

type deploymentExtensionArgs struct {
	// Description for extension
	Description *string `pulumi:"description"`
	// download url
	DownloadUrl *string `pulumi:"downloadUrl"`
	// Extension type. bundle or plugin
	ExtensionType string `pulumi:"extensionType"`
	// file hash
	FileHash *string `pulumi:"fileHash"`
	// file path
	FilePath *string `pulumi:"filePath"`
	// Required name of the ruleset
	Name *string `pulumi:"name"`
	// Eleasticsearch version
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a DeploymentExtension resource.
type DeploymentExtensionArgs struct {
	// Description for extension
	Description pulumi.StringPtrInput
	// download url
	DownloadUrl pulumi.StringPtrInput
	// Extension type. bundle or plugin
	ExtensionType pulumi.StringInput
	// file hash
	FileHash pulumi.StringPtrInput
	// file path
	FilePath pulumi.StringPtrInput
	// Required name of the ruleset
	Name pulumi.StringPtrInput
	// Eleasticsearch version
	Version pulumi.StringInput
}

func (DeploymentExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentExtensionArgs)(nil)).Elem()
}

type DeploymentExtensionInput interface {
	pulumi.Input

	ToDeploymentExtensionOutput() DeploymentExtensionOutput
	ToDeploymentExtensionOutputWithContext(ctx context.Context) DeploymentExtensionOutput
}

func (*DeploymentExtension) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentExtension)(nil))
}

func (i *DeploymentExtension) ToDeploymentExtensionOutput() DeploymentExtensionOutput {
	return i.ToDeploymentExtensionOutputWithContext(context.Background())
}

func (i *DeploymentExtension) ToDeploymentExtensionOutputWithContext(ctx context.Context) DeploymentExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentExtensionOutput)
}

func (i *DeploymentExtension) ToDeploymentExtensionPtrOutput() DeploymentExtensionPtrOutput {
	return i.ToDeploymentExtensionPtrOutputWithContext(context.Background())
}

func (i *DeploymentExtension) ToDeploymentExtensionPtrOutputWithContext(ctx context.Context) DeploymentExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentExtensionPtrOutput)
}

type DeploymentExtensionPtrInput interface {
	pulumi.Input

	ToDeploymentExtensionPtrOutput() DeploymentExtensionPtrOutput
	ToDeploymentExtensionPtrOutputWithContext(ctx context.Context) DeploymentExtensionPtrOutput
}

type deploymentExtensionPtrType DeploymentExtensionArgs

func (*deploymentExtensionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentExtension)(nil))
}

func (i *deploymentExtensionPtrType) ToDeploymentExtensionPtrOutput() DeploymentExtensionPtrOutput {
	return i.ToDeploymentExtensionPtrOutputWithContext(context.Background())
}

func (i *deploymentExtensionPtrType) ToDeploymentExtensionPtrOutputWithContext(ctx context.Context) DeploymentExtensionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentExtensionPtrOutput)
}

// DeploymentExtensionArrayInput is an input type that accepts DeploymentExtensionArray and DeploymentExtensionArrayOutput values.
// You can construct a concrete instance of `DeploymentExtensionArrayInput` via:
//
//          DeploymentExtensionArray{ DeploymentExtensionArgs{...} }
type DeploymentExtensionArrayInput interface {
	pulumi.Input

	ToDeploymentExtensionArrayOutput() DeploymentExtensionArrayOutput
	ToDeploymentExtensionArrayOutputWithContext(context.Context) DeploymentExtensionArrayOutput
}

type DeploymentExtensionArray []DeploymentExtensionInput

func (DeploymentExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentExtension)(nil)).Elem()
}

func (i DeploymentExtensionArray) ToDeploymentExtensionArrayOutput() DeploymentExtensionArrayOutput {
	return i.ToDeploymentExtensionArrayOutputWithContext(context.Background())
}

func (i DeploymentExtensionArray) ToDeploymentExtensionArrayOutputWithContext(ctx context.Context) DeploymentExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentExtensionArrayOutput)
}

// DeploymentExtensionMapInput is an input type that accepts DeploymentExtensionMap and DeploymentExtensionMapOutput values.
// You can construct a concrete instance of `DeploymentExtensionMapInput` via:
//
//          DeploymentExtensionMap{ "key": DeploymentExtensionArgs{...} }
type DeploymentExtensionMapInput interface {
	pulumi.Input

	ToDeploymentExtensionMapOutput() DeploymentExtensionMapOutput
	ToDeploymentExtensionMapOutputWithContext(context.Context) DeploymentExtensionMapOutput
}

type DeploymentExtensionMap map[string]DeploymentExtensionInput

func (DeploymentExtensionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentExtension)(nil)).Elem()
}

func (i DeploymentExtensionMap) ToDeploymentExtensionMapOutput() DeploymentExtensionMapOutput {
	return i.ToDeploymentExtensionMapOutputWithContext(context.Background())
}

func (i DeploymentExtensionMap) ToDeploymentExtensionMapOutputWithContext(ctx context.Context) DeploymentExtensionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentExtensionMapOutput)
}

type DeploymentExtensionOutput struct{ *pulumi.OutputState }

func (DeploymentExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentExtension)(nil))
}

func (o DeploymentExtensionOutput) ToDeploymentExtensionOutput() DeploymentExtensionOutput {
	return o
}

func (o DeploymentExtensionOutput) ToDeploymentExtensionOutputWithContext(ctx context.Context) DeploymentExtensionOutput {
	return o
}

func (o DeploymentExtensionOutput) ToDeploymentExtensionPtrOutput() DeploymentExtensionPtrOutput {
	return o.ToDeploymentExtensionPtrOutputWithContext(context.Background())
}

func (o DeploymentExtensionOutput) ToDeploymentExtensionPtrOutputWithContext(ctx context.Context) DeploymentExtensionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentExtension) *DeploymentExtension {
		return &v
	}).(DeploymentExtensionPtrOutput)
}

type DeploymentExtensionPtrOutput struct{ *pulumi.OutputState }

func (DeploymentExtensionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentExtension)(nil))
}

func (o DeploymentExtensionPtrOutput) ToDeploymentExtensionPtrOutput() DeploymentExtensionPtrOutput {
	return o
}

func (o DeploymentExtensionPtrOutput) ToDeploymentExtensionPtrOutputWithContext(ctx context.Context) DeploymentExtensionPtrOutput {
	return o
}

func (o DeploymentExtensionPtrOutput) Elem() DeploymentExtensionOutput {
	return o.ApplyT(func(v *DeploymentExtension) DeploymentExtension {
		if v != nil {
			return *v
		}
		var ret DeploymentExtension
		return ret
	}).(DeploymentExtensionOutput)
}

type DeploymentExtensionArrayOutput struct{ *pulumi.OutputState }

func (DeploymentExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentExtension)(nil))
}

func (o DeploymentExtensionArrayOutput) ToDeploymentExtensionArrayOutput() DeploymentExtensionArrayOutput {
	return o
}

func (o DeploymentExtensionArrayOutput) ToDeploymentExtensionArrayOutputWithContext(ctx context.Context) DeploymentExtensionArrayOutput {
	return o
}

func (o DeploymentExtensionArrayOutput) Index(i pulumi.IntInput) DeploymentExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentExtension {
		return vs[0].([]DeploymentExtension)[vs[1].(int)]
	}).(DeploymentExtensionOutput)
}

type DeploymentExtensionMapOutput struct{ *pulumi.OutputState }

func (DeploymentExtensionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DeploymentExtension)(nil))
}

func (o DeploymentExtensionMapOutput) ToDeploymentExtensionMapOutput() DeploymentExtensionMapOutput {
	return o
}

func (o DeploymentExtensionMapOutput) ToDeploymentExtensionMapOutputWithContext(ctx context.Context) DeploymentExtensionMapOutput {
	return o
}

func (o DeploymentExtensionMapOutput) MapIndex(k pulumi.StringInput) DeploymentExtensionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DeploymentExtension {
		return vs[0].(map[string]DeploymentExtension)[vs[1].(string)]
	}).(DeploymentExtensionOutput)
}

func init() {
	pulumi.RegisterOutputType(DeploymentExtensionOutput{})
	pulumi.RegisterOutputType(DeploymentExtensionPtrOutput{})
	pulumi.RegisterOutputType(DeploymentExtensionArrayOutput{})
	pulumi.RegisterOutputType(DeploymentExtensionMapOutput{})
}
