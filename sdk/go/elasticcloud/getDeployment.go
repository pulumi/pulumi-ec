// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDeployment(ctx *pulumi.Context, args *LookupDeploymentArgs, opts ...pulumi.InvokeOption) (*LookupDeploymentResult, error) {
	var rv LookupDeploymentResult
	err := ctx.Invoke("elasticcloud:index/getDeployment:getDeployment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployment.
type LookupDeploymentArgs struct {
	Id string `pulumi:"id"`
}

// A collection of values returned by getDeployment.
type LookupDeploymentResult struct {
	Alias                string                          `pulumi:"alias"`
	Apms                 []GetDeploymentApm              `pulumi:"apms"`
	DeploymentTemplateId string                          `pulumi:"deploymentTemplateId"`
	Elasticsearches      []GetDeploymentElasticsearch    `pulumi:"elasticsearches"`
	EnterpriseSearches   []GetDeploymentEnterpriseSearch `pulumi:"enterpriseSearches"`
	Healthy              bool                            `pulumi:"healthy"`
	Id                   string                          `pulumi:"id"`
	Kibanas              []GetDeploymentKibana           `pulumi:"kibanas"`
	Name                 string                          `pulumi:"name"`
	Observabilities      []GetDeploymentObservability    `pulumi:"observabilities"`
	Region               string                          `pulumi:"region"`
	Tags                 map[string]string               `pulumi:"tags"`
	TrafficFilters       []string                        `pulumi:"trafficFilters"`
}

func LookupDeploymentOutput(ctx *pulumi.Context, args LookupDeploymentOutputArgs, opts ...pulumi.InvokeOption) LookupDeploymentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeploymentResult, error) {
			args := v.(LookupDeploymentArgs)
			r, err := LookupDeployment(ctx, &args, opts...)
			return *r, err
		}).(LookupDeploymentResultOutput)
}

// A collection of arguments for invoking getDeployment.
type LookupDeploymentOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDeploymentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentArgs)(nil)).Elem()
}

// A collection of values returned by getDeployment.
type LookupDeploymentResultOutput struct{ *pulumi.OutputState }

func (LookupDeploymentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentResult)(nil)).Elem()
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutput() LookupDeploymentResultOutput {
	return o
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutputWithContext(ctx context.Context) LookupDeploymentResultOutput {
	return o
}

func (o LookupDeploymentResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Alias }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Apms() GetDeploymentApmArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentApm { return v.Apms }).(GetDeploymentApmArrayOutput)
}

func (o LookupDeploymentResultOutput) DeploymentTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.DeploymentTemplateId }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Elasticsearches() GetDeploymentElasticsearchArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentElasticsearch { return v.Elasticsearches }).(GetDeploymentElasticsearchArrayOutput)
}

func (o LookupDeploymentResultOutput) EnterpriseSearches() GetDeploymentEnterpriseSearchArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentEnterpriseSearch { return v.EnterpriseSearches }).(GetDeploymentEnterpriseSearchArrayOutput)
}

func (o LookupDeploymentResultOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeploymentResult) bool { return v.Healthy }).(pulumi.BoolOutput)
}

func (o LookupDeploymentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Kibanas() GetDeploymentKibanaArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentKibana { return v.Kibanas }).(GetDeploymentKibanaArrayOutput)
}

func (o LookupDeploymentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Observabilities() GetDeploymentObservabilityArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []GetDeploymentObservability { return v.Observabilities }).(GetDeploymentObservabilityArrayOutput)
}

func (o LookupDeploymentResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDeploymentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupDeploymentResultOutput) TrafficFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []string { return v.TrafficFilters }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeploymentResultOutput{})
}
