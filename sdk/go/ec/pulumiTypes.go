// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ec/sdk/go/ec/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DeploymentApm struct {
	// Optionally define the Apm configuration options for the APM Server
	Config                    *DeploymentApmConfig `pulumi:"config"`
	ElasticsearchClusterRefId *string              `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              *string              `pulumi:"httpEndpoint"`
	HttpsEndpoint             *string              `pulumi:"httpsEndpoint"`
	InstanceConfigurationId   *string              `pulumi:"instanceConfigurationId"`
	RefId                     *string              `pulumi:"refId"`
	Region                    *string              `pulumi:"region"`
	ResourceId                *string              `pulumi:"resourceId"`
	Size                      *string              `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentApmInput is an input type that accepts DeploymentApmArgs and DeploymentApmOutput values.
// You can construct a concrete instance of `DeploymentApmInput` via:
//
//	DeploymentApmArgs{...}
type DeploymentApmInput interface {
	pulumi.Input

	ToDeploymentApmOutput() DeploymentApmOutput
	ToDeploymentApmOutputWithContext(context.Context) DeploymentApmOutput
}

type DeploymentApmArgs struct {
	// Optionally define the Apm configuration options for the APM Server
	Config                    DeploymentApmConfigPtrInput `pulumi:"config"`
	ElasticsearchClusterRefId pulumi.StringPtrInput       `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              pulumi.StringPtrInput       `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringPtrInput       `pulumi:"httpsEndpoint"`
	InstanceConfigurationId   pulumi.StringPtrInput       `pulumi:"instanceConfigurationId"`
	RefId                     pulumi.StringPtrInput       `pulumi:"refId"`
	Region                    pulumi.StringPtrInput       `pulumi:"region"`
	ResourceId                pulumi.StringPtrInput       `pulumi:"resourceId"`
	Size                      pulumi.StringPtrInput       `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentApm)(nil)).Elem()
}

func (i DeploymentApmArgs) ToDeploymentApmOutput() DeploymentApmOutput {
	return i.ToDeploymentApmOutputWithContext(context.Background())
}

func (i DeploymentApmArgs) ToDeploymentApmOutputWithContext(ctx context.Context) DeploymentApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentApmOutput)
}

func (i DeploymentApmArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentApm] {
	return pulumix.Output[DeploymentApm]{
		OutputState: i.ToDeploymentApmOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentApmArgs) ToDeploymentApmPtrOutput() DeploymentApmPtrOutput {
	return i.ToDeploymentApmPtrOutputWithContext(context.Background())
}

func (i DeploymentApmArgs) ToDeploymentApmPtrOutputWithContext(ctx context.Context) DeploymentApmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentApmOutput).ToDeploymentApmPtrOutputWithContext(ctx)
}

// DeploymentApmPtrInput is an input type that accepts DeploymentApmArgs, DeploymentApmPtr and DeploymentApmPtrOutput values.
// You can construct a concrete instance of `DeploymentApmPtrInput` via:
//
//	        DeploymentApmArgs{...}
//
//	or:
//
//	        nil
type DeploymentApmPtrInput interface {
	pulumi.Input

	ToDeploymentApmPtrOutput() DeploymentApmPtrOutput
	ToDeploymentApmPtrOutputWithContext(context.Context) DeploymentApmPtrOutput
}

type deploymentApmPtrType DeploymentApmArgs

func DeploymentApmPtr(v *DeploymentApmArgs) DeploymentApmPtrInput {
	return (*deploymentApmPtrType)(v)
}

func (*deploymentApmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentApm)(nil)).Elem()
}

func (i *deploymentApmPtrType) ToDeploymentApmPtrOutput() DeploymentApmPtrOutput {
	return i.ToDeploymentApmPtrOutputWithContext(context.Background())
}

func (i *deploymentApmPtrType) ToDeploymentApmPtrOutputWithContext(ctx context.Context) DeploymentApmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentApmPtrOutput)
}

func (i *deploymentApmPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentApm] {
	return pulumix.Output[*DeploymentApm]{
		OutputState: i.ToDeploymentApmPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentApmOutput struct{ *pulumi.OutputState }

func (DeploymentApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentApm)(nil)).Elem()
}

func (o DeploymentApmOutput) ToDeploymentApmOutput() DeploymentApmOutput {
	return o
}

func (o DeploymentApmOutput) ToDeploymentApmOutputWithContext(ctx context.Context) DeploymentApmOutput {
	return o
}

func (o DeploymentApmOutput) ToDeploymentApmPtrOutput() DeploymentApmPtrOutput {
	return o.ToDeploymentApmPtrOutputWithContext(context.Background())
}

func (o DeploymentApmOutput) ToDeploymentApmPtrOutputWithContext(ctx context.Context) DeploymentApmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentApm) *DeploymentApm {
		return &v
	}).(DeploymentApmPtrOutput)
}

func (o DeploymentApmOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentApm] {
	return pulumix.Output[DeploymentApm]{
		OutputState: o.OutputState,
	}
}

// Optionally define the Apm configuration options for the APM Server
func (o DeploymentApmOutput) Config() DeploymentApmConfigPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *DeploymentApmConfig { return v.Config }).(DeploymentApmConfigPtrOutput)
}

func (o DeploymentApmOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.ElasticsearchClusterRefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentApmOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentApmOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentApm) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentApmPtrOutput struct{ *pulumi.OutputState }

func (DeploymentApmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentApm)(nil)).Elem()
}

func (o DeploymentApmPtrOutput) ToDeploymentApmPtrOutput() DeploymentApmPtrOutput {
	return o
}

func (o DeploymentApmPtrOutput) ToDeploymentApmPtrOutputWithContext(ctx context.Context) DeploymentApmPtrOutput {
	return o
}

func (o DeploymentApmPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentApm] {
	return pulumix.Output[*DeploymentApm]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentApmPtrOutput) Elem() DeploymentApmOutput {
	return o.ApplyT(func(v *DeploymentApm) DeploymentApm {
		if v != nil {
			return *v
		}
		var ret DeploymentApm
		return ret
	}).(DeploymentApmOutput)
}

// Optionally define the Apm configuration options for the APM Server
func (o DeploymentApmPtrOutput) Config() DeploymentApmConfigPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *DeploymentApmConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(DeploymentApmConfigPtrOutput)
}

func (o DeploymentApmPtrOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchClusterRefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentApmPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentApmPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentApm) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentApmConfig struct {
	// Optionally enable debug mode for APM servers - defaults to false
	DebugEnabled *bool `pulumi:"debugEnabled"`
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage *string `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson *string `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml *string `pulumi:"userSettingsYaml"`
}

// DeploymentApmConfigInput is an input type that accepts DeploymentApmConfigArgs and DeploymentApmConfigOutput values.
// You can construct a concrete instance of `DeploymentApmConfigInput` via:
//
//	DeploymentApmConfigArgs{...}
type DeploymentApmConfigInput interface {
	pulumi.Input

	ToDeploymentApmConfigOutput() DeploymentApmConfigOutput
	ToDeploymentApmConfigOutputWithContext(context.Context) DeploymentApmConfigOutput
}

type DeploymentApmConfigArgs struct {
	// Optionally enable debug mode for APM servers - defaults to false
	DebugEnabled pulumi.BoolPtrInput `pulumi:"debugEnabled"`
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage pulumi.StringPtrInput `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (DeploymentApmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentApmConfig)(nil)).Elem()
}

func (i DeploymentApmConfigArgs) ToDeploymentApmConfigOutput() DeploymentApmConfigOutput {
	return i.ToDeploymentApmConfigOutputWithContext(context.Background())
}

func (i DeploymentApmConfigArgs) ToDeploymentApmConfigOutputWithContext(ctx context.Context) DeploymentApmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentApmConfigOutput)
}

func (i DeploymentApmConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentApmConfig] {
	return pulumix.Output[DeploymentApmConfig]{
		OutputState: i.ToDeploymentApmConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentApmConfigArgs) ToDeploymentApmConfigPtrOutput() DeploymentApmConfigPtrOutput {
	return i.ToDeploymentApmConfigPtrOutputWithContext(context.Background())
}

func (i DeploymentApmConfigArgs) ToDeploymentApmConfigPtrOutputWithContext(ctx context.Context) DeploymentApmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentApmConfigOutput).ToDeploymentApmConfigPtrOutputWithContext(ctx)
}

// DeploymentApmConfigPtrInput is an input type that accepts DeploymentApmConfigArgs, DeploymentApmConfigPtr and DeploymentApmConfigPtrOutput values.
// You can construct a concrete instance of `DeploymentApmConfigPtrInput` via:
//
//	        DeploymentApmConfigArgs{...}
//
//	or:
//
//	        nil
type DeploymentApmConfigPtrInput interface {
	pulumi.Input

	ToDeploymentApmConfigPtrOutput() DeploymentApmConfigPtrOutput
	ToDeploymentApmConfigPtrOutputWithContext(context.Context) DeploymentApmConfigPtrOutput
}

type deploymentApmConfigPtrType DeploymentApmConfigArgs

func DeploymentApmConfigPtr(v *DeploymentApmConfigArgs) DeploymentApmConfigPtrInput {
	return (*deploymentApmConfigPtrType)(v)
}

func (*deploymentApmConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentApmConfig)(nil)).Elem()
}

func (i *deploymentApmConfigPtrType) ToDeploymentApmConfigPtrOutput() DeploymentApmConfigPtrOutput {
	return i.ToDeploymentApmConfigPtrOutputWithContext(context.Background())
}

func (i *deploymentApmConfigPtrType) ToDeploymentApmConfigPtrOutputWithContext(ctx context.Context) DeploymentApmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentApmConfigPtrOutput)
}

func (i *deploymentApmConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentApmConfig] {
	return pulumix.Output[*DeploymentApmConfig]{
		OutputState: i.ToDeploymentApmConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentApmConfigOutput struct{ *pulumi.OutputState }

func (DeploymentApmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentApmConfig)(nil)).Elem()
}

func (o DeploymentApmConfigOutput) ToDeploymentApmConfigOutput() DeploymentApmConfigOutput {
	return o
}

func (o DeploymentApmConfigOutput) ToDeploymentApmConfigOutputWithContext(ctx context.Context) DeploymentApmConfigOutput {
	return o
}

func (o DeploymentApmConfigOutput) ToDeploymentApmConfigPtrOutput() DeploymentApmConfigPtrOutput {
	return o.ToDeploymentApmConfigPtrOutputWithContext(context.Background())
}

func (o DeploymentApmConfigOutput) ToDeploymentApmConfigPtrOutputWithContext(ctx context.Context) DeploymentApmConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentApmConfig) *DeploymentApmConfig {
		return &v
	}).(DeploymentApmConfigPtrOutput)
}

func (o DeploymentApmConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentApmConfig] {
	return pulumix.Output[DeploymentApmConfig]{
		OutputState: o.OutputState,
	}
}

// Optionally enable debug mode for APM servers - defaults to false
func (o DeploymentApmConfigOutput) DebugEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentApmConfig) *bool { return v.DebugEnabled }).(pulumi.BoolPtrOutput)
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentApmConfigOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApmConfig) *string { return v.DockerImage }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentApmConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApmConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentApmConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApmConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentApmConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApmConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentApmConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentApmConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type DeploymentApmConfigPtrOutput struct{ *pulumi.OutputState }

func (DeploymentApmConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentApmConfig)(nil)).Elem()
}

func (o DeploymentApmConfigPtrOutput) ToDeploymentApmConfigPtrOutput() DeploymentApmConfigPtrOutput {
	return o
}

func (o DeploymentApmConfigPtrOutput) ToDeploymentApmConfigPtrOutputWithContext(ctx context.Context) DeploymentApmConfigPtrOutput {
	return o
}

func (o DeploymentApmConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentApmConfig] {
	return pulumix.Output[*DeploymentApmConfig]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentApmConfigPtrOutput) Elem() DeploymentApmConfigOutput {
	return o.ApplyT(func(v *DeploymentApmConfig) DeploymentApmConfig {
		if v != nil {
			return *v
		}
		var ret DeploymentApmConfig
		return ret
	}).(DeploymentApmConfigOutput)
}

// Optionally enable debug mode for APM servers - defaults to false
func (o DeploymentApmConfigPtrOutput) DebugEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentApmConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DebugEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentApmConfigPtrOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.DockerImage
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentApmConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentApmConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentApmConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentApmConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentApmConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearch struct {
	// Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
	Autoscale *bool   `pulumi:"autoscale"`
	CloudId   *string `pulumi:"cloudId"`
	// 'cold' topology element
	Cold *DeploymentElasticsearchCold `pulumi:"cold"`
	// Elasticsearch settings which will be applied to all topologies
	Config *DeploymentElasticsearchConfig `pulumi:"config"`
	// 'coordinating' topology element
	Coordinating *DeploymentElasticsearchCoordinating `pulumi:"coordinating"`
	// Optional Elasticsearch extensions such as custom bundles or plugins.
	Extensions []DeploymentElasticsearchExtension `pulumi:"extensions"`
	// 'frozen' topology element
	Frozen *DeploymentElasticsearchFrozen `pulumi:"frozen"`
	// 'hot' topology element
	Hot           DeploymentElasticsearchHot `pulumi:"hot"`
	HttpEndpoint  *string                    `pulumi:"httpEndpoint"`
	HttpsEndpoint *string                    `pulumi:"httpsEndpoint"`
	// Keystore contents that are controlled by the deployment resource.
	KeystoreContents map[string]DeploymentElasticsearchKeystoreContents `pulumi:"keystoreContents"`
	// 'master' topology element
	Master *DeploymentElasticsearchMaster `pulumi:"master"`
	// 'ml' topology element
	Ml *DeploymentElasticsearchMl `pulumi:"ml"`
	// A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
	RefId  *string `pulumi:"refId"`
	Region *string `pulumi:"region"`
	// Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
	RemoteClusters []DeploymentElasticsearchRemoteCluster `pulumi:"remoteClusters"`
	ResourceId     *string                                `pulumi:"resourceId"`
	// (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
	Snapshot       *DeploymentElasticsearchSnapshot       `pulumi:"snapshot"`
	SnapshotSource *DeploymentElasticsearchSnapshotSource `pulumi:"snapshotSource"`
	Strategy       *string                                `pulumi:"strategy"`
	TrustAccounts  []DeploymentElasticsearchTrustAccount  `pulumi:"trustAccounts"`
	TrustExternals []DeploymentElasticsearchTrustExternal `pulumi:"trustExternals"`
	Warm           *DeploymentElasticsearchWarm           `pulumi:"warm"`
}

// DeploymentElasticsearchInput is an input type that accepts DeploymentElasticsearchArgs and DeploymentElasticsearchOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchInput` via:
//
//	DeploymentElasticsearchArgs{...}
type DeploymentElasticsearchInput interface {
	pulumi.Input

	ToDeploymentElasticsearchOutput() DeploymentElasticsearchOutput
	ToDeploymentElasticsearchOutputWithContext(context.Context) DeploymentElasticsearchOutput
}

type DeploymentElasticsearchArgs struct {
	// Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
	Autoscale pulumi.BoolPtrInput   `pulumi:"autoscale"`
	CloudId   pulumi.StringPtrInput `pulumi:"cloudId"`
	// 'cold' topology element
	Cold DeploymentElasticsearchColdPtrInput `pulumi:"cold"`
	// Elasticsearch settings which will be applied to all topologies
	Config DeploymentElasticsearchConfigPtrInput `pulumi:"config"`
	// 'coordinating' topology element
	Coordinating DeploymentElasticsearchCoordinatingPtrInput `pulumi:"coordinating"`
	// Optional Elasticsearch extensions such as custom bundles or plugins.
	Extensions DeploymentElasticsearchExtensionArrayInput `pulumi:"extensions"`
	// 'frozen' topology element
	Frozen DeploymentElasticsearchFrozenPtrInput `pulumi:"frozen"`
	// 'hot' topology element
	Hot           DeploymentElasticsearchHotInput `pulumi:"hot"`
	HttpEndpoint  pulumi.StringPtrInput           `pulumi:"httpEndpoint"`
	HttpsEndpoint pulumi.StringPtrInput           `pulumi:"httpsEndpoint"`
	// Keystore contents that are controlled by the deployment resource.
	KeystoreContents DeploymentElasticsearchKeystoreContentsMapInput `pulumi:"keystoreContents"`
	// 'master' topology element
	Master DeploymentElasticsearchMasterPtrInput `pulumi:"master"`
	// 'ml' topology element
	Ml DeploymentElasticsearchMlPtrInput `pulumi:"ml"`
	// A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
	RefId  pulumi.StringPtrInput `pulumi:"refId"`
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
	RemoteClusters DeploymentElasticsearchRemoteClusterArrayInput `pulumi:"remoteClusters"`
	ResourceId     pulumi.StringPtrInput                          `pulumi:"resourceId"`
	// (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
	Snapshot       DeploymentElasticsearchSnapshotPtrInput        `pulumi:"snapshot"`
	SnapshotSource DeploymentElasticsearchSnapshotSourcePtrInput  `pulumi:"snapshotSource"`
	Strategy       pulumi.StringPtrInput                          `pulumi:"strategy"`
	TrustAccounts  DeploymentElasticsearchTrustAccountArrayInput  `pulumi:"trustAccounts"`
	TrustExternals DeploymentElasticsearchTrustExternalArrayInput `pulumi:"trustExternals"`
	Warm           DeploymentElasticsearchWarmPtrInput            `pulumi:"warm"`
}

func (DeploymentElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearch)(nil)).Elem()
}

func (i DeploymentElasticsearchArgs) ToDeploymentElasticsearchOutput() DeploymentElasticsearchOutput {
	return i.ToDeploymentElasticsearchOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchArgs) ToDeploymentElasticsearchOutputWithContext(ctx context.Context) DeploymentElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchOutput)
}

func (i DeploymentElasticsearchArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearch] {
	return pulumix.Output[DeploymentElasticsearch]{
		OutputState: i.ToDeploymentElasticsearchOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchArgs) ToDeploymentElasticsearchPtrOutput() DeploymentElasticsearchPtrOutput {
	return i.ToDeploymentElasticsearchPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchArgs) ToDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchOutput).ToDeploymentElasticsearchPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchPtrInput is an input type that accepts DeploymentElasticsearchArgs, DeploymentElasticsearchPtr and DeploymentElasticsearchPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchPtrInput` via:
//
//	        DeploymentElasticsearchArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchPtrOutput() DeploymentElasticsearchPtrOutput
	ToDeploymentElasticsearchPtrOutputWithContext(context.Context) DeploymentElasticsearchPtrOutput
}

type deploymentElasticsearchPtrType DeploymentElasticsearchArgs

func DeploymentElasticsearchPtr(v *DeploymentElasticsearchArgs) DeploymentElasticsearchPtrInput {
	return (*deploymentElasticsearchPtrType)(v)
}

func (*deploymentElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearch)(nil)).Elem()
}

func (i *deploymentElasticsearchPtrType) ToDeploymentElasticsearchPtrOutput() DeploymentElasticsearchPtrOutput {
	return i.ToDeploymentElasticsearchPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchPtrType) ToDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchPtrOutput)
}

func (i *deploymentElasticsearchPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearch] {
	return pulumix.Output[*DeploymentElasticsearch]{
		OutputState: i.ToDeploymentElasticsearchPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearch)(nil)).Elem()
}

func (o DeploymentElasticsearchOutput) ToDeploymentElasticsearchOutput() DeploymentElasticsearchOutput {
	return o
}

func (o DeploymentElasticsearchOutput) ToDeploymentElasticsearchOutputWithContext(ctx context.Context) DeploymentElasticsearchOutput {
	return o
}

func (o DeploymentElasticsearchOutput) ToDeploymentElasticsearchPtrOutput() DeploymentElasticsearchPtrOutput {
	return o.ToDeploymentElasticsearchPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchOutput) ToDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearch) *DeploymentElasticsearch {
		return &v
	}).(DeploymentElasticsearchPtrOutput)
}

func (o DeploymentElasticsearchOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearch] {
	return pulumix.Output[DeploymentElasticsearch]{
		OutputState: o.OutputState,
	}
}

// Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
func (o DeploymentElasticsearchOutput) Autoscale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *bool { return v.Autoscale }).(pulumi.BoolPtrOutput)
}

func (o DeploymentElasticsearchOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *string { return v.CloudId }).(pulumi.StringPtrOutput)
}

// 'cold' topology element
func (o DeploymentElasticsearchOutput) Cold() DeploymentElasticsearchColdPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchCold { return v.Cold }).(DeploymentElasticsearchColdPtrOutput)
}

// Elasticsearch settings which will be applied to all topologies
func (o DeploymentElasticsearchOutput) Config() DeploymentElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchConfig { return v.Config }).(DeploymentElasticsearchConfigPtrOutput)
}

// 'coordinating' topology element
func (o DeploymentElasticsearchOutput) Coordinating() DeploymentElasticsearchCoordinatingPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchCoordinating { return v.Coordinating }).(DeploymentElasticsearchCoordinatingPtrOutput)
}

// Optional Elasticsearch extensions such as custom bundles or plugins.
func (o DeploymentElasticsearchOutput) Extensions() DeploymentElasticsearchExtensionArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) []DeploymentElasticsearchExtension { return v.Extensions }).(DeploymentElasticsearchExtensionArrayOutput)
}

// 'frozen' topology element
func (o DeploymentElasticsearchOutput) Frozen() DeploymentElasticsearchFrozenPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchFrozen { return v.Frozen }).(DeploymentElasticsearchFrozenPtrOutput)
}

// 'hot' topology element
func (o DeploymentElasticsearchOutput) Hot() DeploymentElasticsearchHotOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) DeploymentElasticsearchHot { return v.Hot }).(DeploymentElasticsearchHotOutput)
}

func (o DeploymentElasticsearchOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

// Keystore contents that are controlled by the deployment resource.
func (o DeploymentElasticsearchOutput) KeystoreContents() DeploymentElasticsearchKeystoreContentsMapOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) map[string]DeploymentElasticsearchKeystoreContents {
		return v.KeystoreContents
	}).(DeploymentElasticsearchKeystoreContentsMapOutput)
}

// 'master' topology element
func (o DeploymentElasticsearchOutput) Master() DeploymentElasticsearchMasterPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchMaster { return v.Master }).(DeploymentElasticsearchMasterPtrOutput)
}

// 'ml' topology element
func (o DeploymentElasticsearchOutput) Ml() DeploymentElasticsearchMlPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchMl { return v.Ml }).(DeploymentElasticsearchMlPtrOutput)
}

// A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
func (o DeploymentElasticsearchOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
func (o DeploymentElasticsearchOutput) RemoteClusters() DeploymentElasticsearchRemoteClusterArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) []DeploymentElasticsearchRemoteCluster { return v.RemoteClusters }).(DeploymentElasticsearchRemoteClusterArrayOutput)
}

func (o DeploymentElasticsearchOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
func (o DeploymentElasticsearchOutput) Snapshot() DeploymentElasticsearchSnapshotPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchSnapshot { return v.Snapshot }).(DeploymentElasticsearchSnapshotPtrOutput)
}

func (o DeploymentElasticsearchOutput) SnapshotSource() DeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchSnapshotSource { return v.SnapshotSource }).(DeploymentElasticsearchSnapshotSourcePtrOutput)
}

func (o DeploymentElasticsearchOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchOutput) TrustAccounts() DeploymentElasticsearchTrustAccountArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) []DeploymentElasticsearchTrustAccount { return v.TrustAccounts }).(DeploymentElasticsearchTrustAccountArrayOutput)
}

func (o DeploymentElasticsearchOutput) TrustExternals() DeploymentElasticsearchTrustExternalArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) []DeploymentElasticsearchTrustExternal { return v.TrustExternals }).(DeploymentElasticsearchTrustExternalArrayOutput)
}

func (o DeploymentElasticsearchOutput) Warm() DeploymentElasticsearchWarmPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearch) *DeploymentElasticsearchWarm { return v.Warm }).(DeploymentElasticsearchWarmPtrOutput)
}

type DeploymentElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearch)(nil)).Elem()
}

func (o DeploymentElasticsearchPtrOutput) ToDeploymentElasticsearchPtrOutput() DeploymentElasticsearchPtrOutput {
	return o
}

func (o DeploymentElasticsearchPtrOutput) ToDeploymentElasticsearchPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchPtrOutput {
	return o
}

func (o DeploymentElasticsearchPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearch] {
	return pulumix.Output[*DeploymentElasticsearch]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchPtrOutput) Elem() DeploymentElasticsearchOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) DeploymentElasticsearch {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearch
		return ret
	}).(DeploymentElasticsearchOutput)
}

// Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
func (o DeploymentElasticsearchPtrOutput) Autoscale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *bool {
		if v == nil {
			return nil
		}
		return v.Autoscale
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentElasticsearchPtrOutput) CloudId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.CloudId
	}).(pulumi.StringPtrOutput)
}

// 'cold' topology element
func (o DeploymentElasticsearchPtrOutput) Cold() DeploymentElasticsearchColdPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchCold {
		if v == nil {
			return nil
		}
		return v.Cold
	}).(DeploymentElasticsearchColdPtrOutput)
}

// Elasticsearch settings which will be applied to all topologies
func (o DeploymentElasticsearchPtrOutput) Config() DeploymentElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(DeploymentElasticsearchConfigPtrOutput)
}

// 'coordinating' topology element
func (o DeploymentElasticsearchPtrOutput) Coordinating() DeploymentElasticsearchCoordinatingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchCoordinating {
		if v == nil {
			return nil
		}
		return v.Coordinating
	}).(DeploymentElasticsearchCoordinatingPtrOutput)
}

// Optional Elasticsearch extensions such as custom bundles or plugins.
func (o DeploymentElasticsearchPtrOutput) Extensions() DeploymentElasticsearchExtensionArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) []DeploymentElasticsearchExtension {
		if v == nil {
			return nil
		}
		return v.Extensions
	}).(DeploymentElasticsearchExtensionArrayOutput)
}

// 'frozen' topology element
func (o DeploymentElasticsearchPtrOutput) Frozen() DeploymentElasticsearchFrozenPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchFrozen {
		if v == nil {
			return nil
		}
		return v.Frozen
	}).(DeploymentElasticsearchFrozenPtrOutput)
}

// 'hot' topology element
func (o DeploymentElasticsearchPtrOutput) Hot() DeploymentElasticsearchHotPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchHot {
		if v == nil {
			return nil
		}
		return &v.Hot
	}).(DeploymentElasticsearchHotPtrOutput)
}

func (o DeploymentElasticsearchPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

// Keystore contents that are controlled by the deployment resource.
func (o DeploymentElasticsearchPtrOutput) KeystoreContents() DeploymentElasticsearchKeystoreContentsMapOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) map[string]DeploymentElasticsearchKeystoreContents {
		if v == nil {
			return nil
		}
		return v.KeystoreContents
	}).(DeploymentElasticsearchKeystoreContentsMapOutput)
}

// 'master' topology element
func (o DeploymentElasticsearchPtrOutput) Master() DeploymentElasticsearchMasterPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchMaster {
		if v == nil {
			return nil
		}
		return v.Master
	}).(DeploymentElasticsearchMasterPtrOutput)
}

// 'ml' topology element
func (o DeploymentElasticsearchPtrOutput) Ml() DeploymentElasticsearchMlPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchMl {
		if v == nil {
			return nil
		}
		return v.Ml
	}).(DeploymentElasticsearchMlPtrOutput)
}

// A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
func (o DeploymentElasticsearchPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
func (o DeploymentElasticsearchPtrOutput) RemoteClusters() DeploymentElasticsearchRemoteClusterArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) []DeploymentElasticsearchRemoteCluster {
		if v == nil {
			return nil
		}
		return v.RemoteClusters
	}).(DeploymentElasticsearchRemoteClusterArrayOutput)
}

func (o DeploymentElasticsearchPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
func (o DeploymentElasticsearchPtrOutput) Snapshot() DeploymentElasticsearchSnapshotPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchSnapshot {
		if v == nil {
			return nil
		}
		return v.Snapshot
	}).(DeploymentElasticsearchSnapshotPtrOutput)
}

func (o DeploymentElasticsearchPtrOutput) SnapshotSource() DeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchSnapshotSource {
		if v == nil {
			return nil
		}
		return v.SnapshotSource
	}).(DeploymentElasticsearchSnapshotSourcePtrOutput)
}

func (o DeploymentElasticsearchPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchPtrOutput) TrustAccounts() DeploymentElasticsearchTrustAccountArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) []DeploymentElasticsearchTrustAccount {
		if v == nil {
			return nil
		}
		return v.TrustAccounts
	}).(DeploymentElasticsearchTrustAccountArrayOutput)
}

func (o DeploymentElasticsearchPtrOutput) TrustExternals() DeploymentElasticsearchTrustExternalArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) []DeploymentElasticsearchTrustExternal {
		if v == nil {
			return nil
		}
		return v.TrustExternals
	}).(DeploymentElasticsearchTrustExternalArrayOutput)
}

func (o DeploymentElasticsearchPtrOutput) Warm() DeploymentElasticsearchWarmPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearch) *DeploymentElasticsearchWarm {
		if v == nil {
			return nil
		}
		return v.Warm
	}).(DeploymentElasticsearchWarmPtrOutput)
}

type DeploymentElasticsearchCold struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchColdAutoscaling `pulumi:"autoscaling"`
	InstanceConfigurationId *string                                `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles []string `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData *string `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest *string `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster *string `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl *string `pulumi:"nodeTypeMl"`
	Size       *string `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentElasticsearchColdInput is an input type that accepts DeploymentElasticsearchColdArgs and DeploymentElasticsearchColdOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchColdInput` via:
//
//	DeploymentElasticsearchColdArgs{...}
type DeploymentElasticsearchColdInput interface {
	pulumi.Input

	ToDeploymentElasticsearchColdOutput() DeploymentElasticsearchColdOutput
	ToDeploymentElasticsearchColdOutputWithContext(context.Context) DeploymentElasticsearchColdOutput
}

type DeploymentElasticsearchColdArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchColdAutoscalingInput `pulumi:"autoscaling"`
	InstanceConfigurationId pulumi.StringPtrInput                       `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData pulumi.StringPtrInput `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest pulumi.StringPtrInput `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster pulumi.StringPtrInput `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl pulumi.StringPtrInput `pulumi:"nodeTypeMl"`
	Size       pulumi.StringPtrInput `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentElasticsearchColdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchCold)(nil)).Elem()
}

func (i DeploymentElasticsearchColdArgs) ToDeploymentElasticsearchColdOutput() DeploymentElasticsearchColdOutput {
	return i.ToDeploymentElasticsearchColdOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchColdArgs) ToDeploymentElasticsearchColdOutputWithContext(ctx context.Context) DeploymentElasticsearchColdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchColdOutput)
}

func (i DeploymentElasticsearchColdArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchCold] {
	return pulumix.Output[DeploymentElasticsearchCold]{
		OutputState: i.ToDeploymentElasticsearchColdOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchColdArgs) ToDeploymentElasticsearchColdPtrOutput() DeploymentElasticsearchColdPtrOutput {
	return i.ToDeploymentElasticsearchColdPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchColdArgs) ToDeploymentElasticsearchColdPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchColdOutput).ToDeploymentElasticsearchColdPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchColdPtrInput is an input type that accepts DeploymentElasticsearchColdArgs, DeploymentElasticsearchColdPtr and DeploymentElasticsearchColdPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchColdPtrInput` via:
//
//	        DeploymentElasticsearchColdArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchColdPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchColdPtrOutput() DeploymentElasticsearchColdPtrOutput
	ToDeploymentElasticsearchColdPtrOutputWithContext(context.Context) DeploymentElasticsearchColdPtrOutput
}

type deploymentElasticsearchColdPtrType DeploymentElasticsearchColdArgs

func DeploymentElasticsearchColdPtr(v *DeploymentElasticsearchColdArgs) DeploymentElasticsearchColdPtrInput {
	return (*deploymentElasticsearchColdPtrType)(v)
}

func (*deploymentElasticsearchColdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchCold)(nil)).Elem()
}

func (i *deploymentElasticsearchColdPtrType) ToDeploymentElasticsearchColdPtrOutput() DeploymentElasticsearchColdPtrOutput {
	return i.ToDeploymentElasticsearchColdPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchColdPtrType) ToDeploymentElasticsearchColdPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchColdPtrOutput)
}

func (i *deploymentElasticsearchColdPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchCold] {
	return pulumix.Output[*DeploymentElasticsearchCold]{
		OutputState: i.ToDeploymentElasticsearchColdPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchColdOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchColdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchCold)(nil)).Elem()
}

func (o DeploymentElasticsearchColdOutput) ToDeploymentElasticsearchColdOutput() DeploymentElasticsearchColdOutput {
	return o
}

func (o DeploymentElasticsearchColdOutput) ToDeploymentElasticsearchColdOutputWithContext(ctx context.Context) DeploymentElasticsearchColdOutput {
	return o
}

func (o DeploymentElasticsearchColdOutput) ToDeploymentElasticsearchColdPtrOutput() DeploymentElasticsearchColdPtrOutput {
	return o.ToDeploymentElasticsearchColdPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchColdOutput) ToDeploymentElasticsearchColdPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchCold) *DeploymentElasticsearchCold {
		return &v
	}).(DeploymentElasticsearchColdPtrOutput)
}

func (o DeploymentElasticsearchColdOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchCold] {
	return pulumix.Output[DeploymentElasticsearchCold]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchColdOutput) Autoscaling() DeploymentElasticsearchColdAutoscalingOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) DeploymentElasticsearchColdAutoscaling { return v.Autoscaling }).(DeploymentElasticsearchColdAutoscalingOutput)
}

func (o DeploymentElasticsearchColdOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchColdOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchColdOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchColdOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchColdOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchColdOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchColdOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchColdOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchColdOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCold) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchColdPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchColdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchCold)(nil)).Elem()
}

func (o DeploymentElasticsearchColdPtrOutput) ToDeploymentElasticsearchColdPtrOutput() DeploymentElasticsearchColdPtrOutput {
	return o
}

func (o DeploymentElasticsearchColdPtrOutput) ToDeploymentElasticsearchColdPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdPtrOutput {
	return o
}

func (o DeploymentElasticsearchColdPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchCold] {
	return pulumix.Output[*DeploymentElasticsearchCold]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchColdPtrOutput) Elem() DeploymentElasticsearchColdOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) DeploymentElasticsearchCold {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchCold
		return ret
	}).(DeploymentElasticsearchColdOutput)
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchColdPtrOutput) Autoscaling() DeploymentElasticsearchColdAutoscalingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *DeploymentElasticsearchColdAutoscaling {
		if v == nil {
			return nil
		}
		return &v.Autoscaling
	}).(DeploymentElasticsearchColdAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchColdPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchColdPtrOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) []string {
		if v == nil {
			return nil
		}
		return v.NodeRoles
	}).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchColdPtrOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeData
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchColdPtrOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeIngest
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchColdPtrOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMaster
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchColdPtrOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMl
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchColdPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchColdPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchColdPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCold) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchColdAutoscaling struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize *string `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource *string `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize *string `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource *string `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson *string `pulumi:"policyOverrideJson"`
}

// DeploymentElasticsearchColdAutoscalingInput is an input type that accepts DeploymentElasticsearchColdAutoscalingArgs and DeploymentElasticsearchColdAutoscalingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchColdAutoscalingInput` via:
//
//	DeploymentElasticsearchColdAutoscalingArgs{...}
type DeploymentElasticsearchColdAutoscalingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchColdAutoscalingOutput() DeploymentElasticsearchColdAutoscalingOutput
	ToDeploymentElasticsearchColdAutoscalingOutputWithContext(context.Context) DeploymentElasticsearchColdAutoscalingOutput
}

type DeploymentElasticsearchColdAutoscalingArgs struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource pulumi.StringPtrInput `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource pulumi.StringPtrInput `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson pulumi.StringPtrInput `pulumi:"policyOverrideJson"`
}

func (DeploymentElasticsearchColdAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchColdAutoscaling)(nil)).Elem()
}

func (i DeploymentElasticsearchColdAutoscalingArgs) ToDeploymentElasticsearchColdAutoscalingOutput() DeploymentElasticsearchColdAutoscalingOutput {
	return i.ToDeploymentElasticsearchColdAutoscalingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchColdAutoscalingArgs) ToDeploymentElasticsearchColdAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchColdAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchColdAutoscalingOutput)
}

func (i DeploymentElasticsearchColdAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchColdAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchColdAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchColdAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchColdAutoscalingArgs) ToDeploymentElasticsearchColdAutoscalingPtrOutput() DeploymentElasticsearchColdAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchColdAutoscalingArgs) ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchColdAutoscalingOutput).ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchColdAutoscalingPtrInput is an input type that accepts DeploymentElasticsearchColdAutoscalingArgs, DeploymentElasticsearchColdAutoscalingPtr and DeploymentElasticsearchColdAutoscalingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchColdAutoscalingPtrInput` via:
//
//	        DeploymentElasticsearchColdAutoscalingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchColdAutoscalingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchColdAutoscalingPtrOutput() DeploymentElasticsearchColdAutoscalingPtrOutput
	ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(context.Context) DeploymentElasticsearchColdAutoscalingPtrOutput
}

type deploymentElasticsearchColdAutoscalingPtrType DeploymentElasticsearchColdAutoscalingArgs

func DeploymentElasticsearchColdAutoscalingPtr(v *DeploymentElasticsearchColdAutoscalingArgs) DeploymentElasticsearchColdAutoscalingPtrInput {
	return (*deploymentElasticsearchColdAutoscalingPtrType)(v)
}

func (*deploymentElasticsearchColdAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchColdAutoscaling)(nil)).Elem()
}

func (i *deploymentElasticsearchColdAutoscalingPtrType) ToDeploymentElasticsearchColdAutoscalingPtrOutput() DeploymentElasticsearchColdAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchColdAutoscalingPtrType) ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchColdAutoscalingPtrOutput)
}

func (i *deploymentElasticsearchColdAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchColdAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchColdAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchColdAutoscalingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchColdAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchColdAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchColdAutoscalingOutput) ToDeploymentElasticsearchColdAutoscalingOutput() DeploymentElasticsearchColdAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchColdAutoscalingOutput) ToDeploymentElasticsearchColdAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchColdAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchColdAutoscalingOutput) ToDeploymentElasticsearchColdAutoscalingPtrOutput() DeploymentElasticsearchColdAutoscalingPtrOutput {
	return o.ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchColdAutoscalingOutput) ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchColdAutoscaling) *DeploymentElasticsearchColdAutoscaling {
		return &v
	}).(DeploymentElasticsearchColdAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchColdAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchColdAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchColdAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchColdAutoscaling) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchColdAutoscaling) *string { return v.MaxSizeResource }).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchColdAutoscaling) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchColdAutoscaling) *string { return v.MinSizeResource }).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchColdAutoscalingOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchColdAutoscaling) *string { return v.PolicyOverrideJson }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchColdAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchColdAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchColdAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchColdAutoscalingPtrOutput) ToDeploymentElasticsearchColdAutoscalingPtrOutput() DeploymentElasticsearchColdAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchColdAutoscalingPtrOutput) ToDeploymentElasticsearchColdAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchColdAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchColdAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchColdAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchColdAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchColdAutoscalingPtrOutput) Elem() DeploymentElasticsearchColdAutoscalingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchColdAutoscaling) DeploymentElasticsearchColdAutoscaling {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchColdAutoscaling
		return ret
	}).(DeploymentElasticsearchColdAutoscalingOutput)
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchColdAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingPtrOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchColdAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeResource
	}).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingPtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchColdAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchColdAutoscalingPtrOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchColdAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSizeResource
	}).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchColdAutoscalingPtrOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchColdAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.PolicyOverrideJson
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchConfig struct {
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage *string `pulumi:"dockerImage"`
	// List of Elasticsearch supported plugins, which vary from version to version. Check the Stack Pack version to see which plugins are supported for each version. This is currently only available from the UI and [ecctl](https://www.elastic.co/guide/en/ecctl/master/ecctl_stack_list.html)
	Plugins []string `pulumi:"plugins"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson *string `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml *string `pulumi:"userSettingsYaml"`
}

// DeploymentElasticsearchConfigInput is an input type that accepts DeploymentElasticsearchConfigArgs and DeploymentElasticsearchConfigOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchConfigInput` via:
//
//	DeploymentElasticsearchConfigArgs{...}
type DeploymentElasticsearchConfigInput interface {
	pulumi.Input

	ToDeploymentElasticsearchConfigOutput() DeploymentElasticsearchConfigOutput
	ToDeploymentElasticsearchConfigOutputWithContext(context.Context) DeploymentElasticsearchConfigOutput
}

type DeploymentElasticsearchConfigArgs struct {
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage pulumi.StringPtrInput `pulumi:"dockerImage"`
	// List of Elasticsearch supported plugins, which vary from version to version. Check the Stack Pack version to see which plugins are supported for each version. This is currently only available from the UI and [ecctl](https://www.elastic.co/guide/en/ecctl/master/ecctl_stack_list.html)
	Plugins pulumi.StringArrayInput `pulumi:"plugins"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (DeploymentElasticsearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchConfig)(nil)).Elem()
}

func (i DeploymentElasticsearchConfigArgs) ToDeploymentElasticsearchConfigOutput() DeploymentElasticsearchConfigOutput {
	return i.ToDeploymentElasticsearchConfigOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchConfigArgs) ToDeploymentElasticsearchConfigOutputWithContext(ctx context.Context) DeploymentElasticsearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchConfigOutput)
}

func (i DeploymentElasticsearchConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchConfig] {
	return pulumix.Output[DeploymentElasticsearchConfig]{
		OutputState: i.ToDeploymentElasticsearchConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchConfigArgs) ToDeploymentElasticsearchConfigPtrOutput() DeploymentElasticsearchConfigPtrOutput {
	return i.ToDeploymentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchConfigArgs) ToDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchConfigOutput).ToDeploymentElasticsearchConfigPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchConfigPtrInput is an input type that accepts DeploymentElasticsearchConfigArgs, DeploymentElasticsearchConfigPtr and DeploymentElasticsearchConfigPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchConfigPtrInput` via:
//
//	        DeploymentElasticsearchConfigArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchConfigPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchConfigPtrOutput() DeploymentElasticsearchConfigPtrOutput
	ToDeploymentElasticsearchConfigPtrOutputWithContext(context.Context) DeploymentElasticsearchConfigPtrOutput
}

type deploymentElasticsearchConfigPtrType DeploymentElasticsearchConfigArgs

func DeploymentElasticsearchConfigPtr(v *DeploymentElasticsearchConfigArgs) DeploymentElasticsearchConfigPtrInput {
	return (*deploymentElasticsearchConfigPtrType)(v)
}

func (*deploymentElasticsearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchConfig)(nil)).Elem()
}

func (i *deploymentElasticsearchConfigPtrType) ToDeploymentElasticsearchConfigPtrOutput() DeploymentElasticsearchConfigPtrOutput {
	return i.ToDeploymentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchConfigPtrType) ToDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchConfigPtrOutput)
}

func (i *deploymentElasticsearchConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchConfig] {
	return pulumix.Output[*DeploymentElasticsearchConfig]{
		OutputState: i.ToDeploymentElasticsearchConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchConfigOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchConfig)(nil)).Elem()
}

func (o DeploymentElasticsearchConfigOutput) ToDeploymentElasticsearchConfigOutput() DeploymentElasticsearchConfigOutput {
	return o
}

func (o DeploymentElasticsearchConfigOutput) ToDeploymentElasticsearchConfigOutputWithContext(ctx context.Context) DeploymentElasticsearchConfigOutput {
	return o
}

func (o DeploymentElasticsearchConfigOutput) ToDeploymentElasticsearchConfigPtrOutput() DeploymentElasticsearchConfigPtrOutput {
	return o.ToDeploymentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchConfigOutput) ToDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchConfig) *DeploymentElasticsearchConfig {
		return &v
	}).(DeploymentElasticsearchConfigPtrOutput)
}

func (o DeploymentElasticsearchConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchConfig] {
	return pulumix.Output[DeploymentElasticsearchConfig]{
		OutputState: o.OutputState,
	}
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentElasticsearchConfigOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchConfig) *string { return v.DockerImage }).(pulumi.StringPtrOutput)
}

// List of Elasticsearch supported plugins, which vary from version to version. Check the Stack Pack version to see which plugins are supported for each version. This is currently only available from the UI and [ecctl](https://www.elastic.co/guide/en/ecctl/master/ecctl_stack_list.html)
func (o DeploymentElasticsearchConfigOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchConfig) []string { return v.Plugins }).(pulumi.StringArrayOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchConfigPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchConfig)(nil)).Elem()
}

func (o DeploymentElasticsearchConfigPtrOutput) ToDeploymentElasticsearchConfigPtrOutput() DeploymentElasticsearchConfigPtrOutput {
	return o
}

func (o DeploymentElasticsearchConfigPtrOutput) ToDeploymentElasticsearchConfigPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchConfigPtrOutput {
	return o
}

func (o DeploymentElasticsearchConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchConfig] {
	return pulumix.Output[*DeploymentElasticsearchConfig]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchConfigPtrOutput) Elem() DeploymentElasticsearchConfigOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchConfig) DeploymentElasticsearchConfig {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchConfig
		return ret
	}).(DeploymentElasticsearchConfigOutput)
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentElasticsearchConfigPtrOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.DockerImage
	}).(pulumi.StringPtrOutput)
}

// List of Elasticsearch supported plugins, which vary from version to version. Check the Stack Pack version to see which plugins are supported for each version. This is currently only available from the UI and [ecctl](https://www.elastic.co/guide/en/ecctl/master/ecctl_stack_list.html)
func (o DeploymentElasticsearchConfigPtrOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchConfig) []string {
		if v == nil {
			return nil
		}
		return v.Plugins
	}).(pulumi.StringArrayOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentElasticsearchConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchCoordinating struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchCoordinatingAutoscaling `pulumi:"autoscaling"`
	InstanceConfigurationId *string                                        `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles []string `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData *string `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest *string `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster *string `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl *string `pulumi:"nodeTypeMl"`
	Size       *string `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentElasticsearchCoordinatingInput is an input type that accepts DeploymentElasticsearchCoordinatingArgs and DeploymentElasticsearchCoordinatingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchCoordinatingInput` via:
//
//	DeploymentElasticsearchCoordinatingArgs{...}
type DeploymentElasticsearchCoordinatingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchCoordinatingOutput() DeploymentElasticsearchCoordinatingOutput
	ToDeploymentElasticsearchCoordinatingOutputWithContext(context.Context) DeploymentElasticsearchCoordinatingOutput
}

type DeploymentElasticsearchCoordinatingArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchCoordinatingAutoscalingInput `pulumi:"autoscaling"`
	InstanceConfigurationId pulumi.StringPtrInput                               `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData pulumi.StringPtrInput `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest pulumi.StringPtrInput `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster pulumi.StringPtrInput `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl pulumi.StringPtrInput `pulumi:"nodeTypeMl"`
	Size       pulumi.StringPtrInput `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentElasticsearchCoordinatingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchCoordinating)(nil)).Elem()
}

func (i DeploymentElasticsearchCoordinatingArgs) ToDeploymentElasticsearchCoordinatingOutput() DeploymentElasticsearchCoordinatingOutput {
	return i.ToDeploymentElasticsearchCoordinatingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchCoordinatingArgs) ToDeploymentElasticsearchCoordinatingOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchCoordinatingOutput)
}

func (i DeploymentElasticsearchCoordinatingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchCoordinating] {
	return pulumix.Output[DeploymentElasticsearchCoordinating]{
		OutputState: i.ToDeploymentElasticsearchCoordinatingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchCoordinatingArgs) ToDeploymentElasticsearchCoordinatingPtrOutput() DeploymentElasticsearchCoordinatingPtrOutput {
	return i.ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchCoordinatingArgs) ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchCoordinatingOutput).ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchCoordinatingPtrInput is an input type that accepts DeploymentElasticsearchCoordinatingArgs, DeploymentElasticsearchCoordinatingPtr and DeploymentElasticsearchCoordinatingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchCoordinatingPtrInput` via:
//
//	        DeploymentElasticsearchCoordinatingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchCoordinatingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchCoordinatingPtrOutput() DeploymentElasticsearchCoordinatingPtrOutput
	ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(context.Context) DeploymentElasticsearchCoordinatingPtrOutput
}

type deploymentElasticsearchCoordinatingPtrType DeploymentElasticsearchCoordinatingArgs

func DeploymentElasticsearchCoordinatingPtr(v *DeploymentElasticsearchCoordinatingArgs) DeploymentElasticsearchCoordinatingPtrInput {
	return (*deploymentElasticsearchCoordinatingPtrType)(v)
}

func (*deploymentElasticsearchCoordinatingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchCoordinating)(nil)).Elem()
}

func (i *deploymentElasticsearchCoordinatingPtrType) ToDeploymentElasticsearchCoordinatingPtrOutput() DeploymentElasticsearchCoordinatingPtrOutput {
	return i.ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchCoordinatingPtrType) ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchCoordinatingPtrOutput)
}

func (i *deploymentElasticsearchCoordinatingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchCoordinating] {
	return pulumix.Output[*DeploymentElasticsearchCoordinating]{
		OutputState: i.ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchCoordinatingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchCoordinatingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchCoordinating)(nil)).Elem()
}

func (o DeploymentElasticsearchCoordinatingOutput) ToDeploymentElasticsearchCoordinatingOutput() DeploymentElasticsearchCoordinatingOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingOutput) ToDeploymentElasticsearchCoordinatingOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingOutput) ToDeploymentElasticsearchCoordinatingPtrOutput() DeploymentElasticsearchCoordinatingPtrOutput {
	return o.ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchCoordinatingOutput) ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchCoordinating) *DeploymentElasticsearchCoordinating {
		return &v
	}).(DeploymentElasticsearchCoordinatingPtrOutput)
}

func (o DeploymentElasticsearchCoordinatingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchCoordinating] {
	return pulumix.Output[DeploymentElasticsearchCoordinating]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchCoordinatingOutput) Autoscaling() DeploymentElasticsearchCoordinatingAutoscalingOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) DeploymentElasticsearchCoordinatingAutoscaling {
		return v.Autoscaling
	}).(DeploymentElasticsearchCoordinatingAutoscalingOutput)
}

func (o DeploymentElasticsearchCoordinatingOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchCoordinatingOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchCoordinatingOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchCoordinatingOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchCoordinatingOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchCoordinatingOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchCoordinatingOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchCoordinatingOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchCoordinatingOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinating) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchCoordinatingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchCoordinatingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchCoordinating)(nil)).Elem()
}

func (o DeploymentElasticsearchCoordinatingPtrOutput) ToDeploymentElasticsearchCoordinatingPtrOutput() DeploymentElasticsearchCoordinatingPtrOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingPtrOutput) ToDeploymentElasticsearchCoordinatingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingPtrOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchCoordinating] {
	return pulumix.Output[*DeploymentElasticsearchCoordinating]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchCoordinatingPtrOutput) Elem() DeploymentElasticsearchCoordinatingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) DeploymentElasticsearchCoordinating {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchCoordinating
		return ret
	}).(DeploymentElasticsearchCoordinatingOutput)
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchCoordinatingPtrOutput) Autoscaling() DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *DeploymentElasticsearchCoordinatingAutoscaling {
		if v == nil {
			return nil
		}
		return &v.Autoscaling
	}).(DeploymentElasticsearchCoordinatingAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchCoordinatingPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchCoordinatingPtrOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) []string {
		if v == nil {
			return nil
		}
		return v.NodeRoles
	}).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchCoordinatingPtrOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeData
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchCoordinatingPtrOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeIngest
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchCoordinatingPtrOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMaster
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchCoordinatingPtrOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMl
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchCoordinatingPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchCoordinatingPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchCoordinatingPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinating) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchCoordinatingAutoscaling struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize *string `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource *string `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize *string `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource *string `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson *string `pulumi:"policyOverrideJson"`
}

// DeploymentElasticsearchCoordinatingAutoscalingInput is an input type that accepts DeploymentElasticsearchCoordinatingAutoscalingArgs and DeploymentElasticsearchCoordinatingAutoscalingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchCoordinatingAutoscalingInput` via:
//
//	DeploymentElasticsearchCoordinatingAutoscalingArgs{...}
type DeploymentElasticsearchCoordinatingAutoscalingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchCoordinatingAutoscalingOutput() DeploymentElasticsearchCoordinatingAutoscalingOutput
	ToDeploymentElasticsearchCoordinatingAutoscalingOutputWithContext(context.Context) DeploymentElasticsearchCoordinatingAutoscalingOutput
}

type DeploymentElasticsearchCoordinatingAutoscalingArgs struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource pulumi.StringPtrInput `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource pulumi.StringPtrInput `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson pulumi.StringPtrInput `pulumi:"policyOverrideJson"`
}

func (DeploymentElasticsearchCoordinatingAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchCoordinatingAutoscaling)(nil)).Elem()
}

func (i DeploymentElasticsearchCoordinatingAutoscalingArgs) ToDeploymentElasticsearchCoordinatingAutoscalingOutput() DeploymentElasticsearchCoordinatingAutoscalingOutput {
	return i.ToDeploymentElasticsearchCoordinatingAutoscalingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchCoordinatingAutoscalingArgs) ToDeploymentElasticsearchCoordinatingAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchCoordinatingAutoscalingOutput)
}

func (i DeploymentElasticsearchCoordinatingAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchCoordinatingAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchCoordinatingAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchCoordinatingAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchCoordinatingAutoscalingArgs) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutput() DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchCoordinatingAutoscalingArgs) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchCoordinatingAutoscalingOutput).ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchCoordinatingAutoscalingPtrInput is an input type that accepts DeploymentElasticsearchCoordinatingAutoscalingArgs, DeploymentElasticsearchCoordinatingAutoscalingPtr and DeploymentElasticsearchCoordinatingAutoscalingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchCoordinatingAutoscalingPtrInput` via:
//
//	        DeploymentElasticsearchCoordinatingAutoscalingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchCoordinatingAutoscalingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutput() DeploymentElasticsearchCoordinatingAutoscalingPtrOutput
	ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(context.Context) DeploymentElasticsearchCoordinatingAutoscalingPtrOutput
}

type deploymentElasticsearchCoordinatingAutoscalingPtrType DeploymentElasticsearchCoordinatingAutoscalingArgs

func DeploymentElasticsearchCoordinatingAutoscalingPtr(v *DeploymentElasticsearchCoordinatingAutoscalingArgs) DeploymentElasticsearchCoordinatingAutoscalingPtrInput {
	return (*deploymentElasticsearchCoordinatingAutoscalingPtrType)(v)
}

func (*deploymentElasticsearchCoordinatingAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchCoordinatingAutoscaling)(nil)).Elem()
}

func (i *deploymentElasticsearchCoordinatingAutoscalingPtrType) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutput() DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchCoordinatingAutoscalingPtrType) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchCoordinatingAutoscalingPtrOutput)
}

func (i *deploymentElasticsearchCoordinatingAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchCoordinatingAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchCoordinatingAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchCoordinatingAutoscalingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchCoordinatingAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchCoordinatingAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) ToDeploymentElasticsearchCoordinatingAutoscalingOutput() DeploymentElasticsearchCoordinatingAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) ToDeploymentElasticsearchCoordinatingAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutput() DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return o.ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchCoordinatingAutoscaling) *DeploymentElasticsearchCoordinatingAutoscaling {
		return &v
	}).(DeploymentElasticsearchCoordinatingAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchCoordinatingAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchCoordinatingAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinatingAutoscaling) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinatingAutoscaling) *string { return v.MaxSizeResource }).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinatingAutoscaling) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinatingAutoscaling) *string { return v.MinSizeResource }).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchCoordinatingAutoscalingOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchCoordinatingAutoscaling) *string { return v.PolicyOverrideJson }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchCoordinatingAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchCoordinatingAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutput() DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) ToDeploymentElasticsearchCoordinatingAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchCoordinatingAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchCoordinatingAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchCoordinatingAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) Elem() DeploymentElasticsearchCoordinatingAutoscalingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinatingAutoscaling) DeploymentElasticsearchCoordinatingAutoscaling {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchCoordinatingAutoscaling
		return ret
	}).(DeploymentElasticsearchCoordinatingAutoscalingOutput)
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinatingAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinatingAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeResource
	}).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinatingAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinatingAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSizeResource
	}).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchCoordinatingAutoscalingPtrOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchCoordinatingAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.PolicyOverrideJson
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchExtension struct {
	// Extension name.
	Name string `pulumi:"name"`
	// Extension type, only `bundle` or `plugin` are supported.
	Type string `pulumi:"type"`
	// Bundle or plugin URL, the extension URL can be obtained from the `ec_deployment_extension.<name>.url` attribute or the API and cannot be a random HTTP address that is hosted elsewhere.
	Url string `pulumi:"url"`
	// Elasticsearch compatibility version. Bundles should specify major or minor versions with wildcards, such as `7.*` or `*` but **plugins must use full version notation down to the patch level**, such as `7.10.1` and wildcards are not allowed.
	Version string `pulumi:"version"`
}

// DeploymentElasticsearchExtensionInput is an input type that accepts DeploymentElasticsearchExtensionArgs and DeploymentElasticsearchExtensionOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchExtensionInput` via:
//
//	DeploymentElasticsearchExtensionArgs{...}
type DeploymentElasticsearchExtensionInput interface {
	pulumi.Input

	ToDeploymentElasticsearchExtensionOutput() DeploymentElasticsearchExtensionOutput
	ToDeploymentElasticsearchExtensionOutputWithContext(context.Context) DeploymentElasticsearchExtensionOutput
}

type DeploymentElasticsearchExtensionArgs struct {
	// Extension name.
	Name pulumi.StringInput `pulumi:"name"`
	// Extension type, only `bundle` or `plugin` are supported.
	Type pulumi.StringInput `pulumi:"type"`
	// Bundle or plugin URL, the extension URL can be obtained from the `ec_deployment_extension.<name>.url` attribute or the API and cannot be a random HTTP address that is hosted elsewhere.
	Url pulumi.StringInput `pulumi:"url"`
	// Elasticsearch compatibility version. Bundles should specify major or minor versions with wildcards, such as `7.*` or `*` but **plugins must use full version notation down to the patch level**, such as `7.10.1` and wildcards are not allowed.
	Version pulumi.StringInput `pulumi:"version"`
}

func (DeploymentElasticsearchExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchExtension)(nil)).Elem()
}

func (i DeploymentElasticsearchExtensionArgs) ToDeploymentElasticsearchExtensionOutput() DeploymentElasticsearchExtensionOutput {
	return i.ToDeploymentElasticsearchExtensionOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchExtensionArgs) ToDeploymentElasticsearchExtensionOutputWithContext(ctx context.Context) DeploymentElasticsearchExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchExtensionOutput)
}

func (i DeploymentElasticsearchExtensionArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchExtension] {
	return pulumix.Output[DeploymentElasticsearchExtension]{
		OutputState: i.ToDeploymentElasticsearchExtensionOutputWithContext(ctx).OutputState,
	}
}

// DeploymentElasticsearchExtensionArrayInput is an input type that accepts DeploymentElasticsearchExtensionArray and DeploymentElasticsearchExtensionArrayOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchExtensionArrayInput` via:
//
//	DeploymentElasticsearchExtensionArray{ DeploymentElasticsearchExtensionArgs{...} }
type DeploymentElasticsearchExtensionArrayInput interface {
	pulumi.Input

	ToDeploymentElasticsearchExtensionArrayOutput() DeploymentElasticsearchExtensionArrayOutput
	ToDeploymentElasticsearchExtensionArrayOutputWithContext(context.Context) DeploymentElasticsearchExtensionArrayOutput
}

type DeploymentElasticsearchExtensionArray []DeploymentElasticsearchExtensionInput

func (DeploymentElasticsearchExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchExtension)(nil)).Elem()
}

func (i DeploymentElasticsearchExtensionArray) ToDeploymentElasticsearchExtensionArrayOutput() DeploymentElasticsearchExtensionArrayOutput {
	return i.ToDeploymentElasticsearchExtensionArrayOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchExtensionArray) ToDeploymentElasticsearchExtensionArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchExtensionArrayOutput)
}

func (i DeploymentElasticsearchExtensionArray) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchExtension] {
	return pulumix.Output[[]DeploymentElasticsearchExtension]{
		OutputState: i.ToDeploymentElasticsearchExtensionArrayOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchExtensionOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchExtension)(nil)).Elem()
}

func (o DeploymentElasticsearchExtensionOutput) ToDeploymentElasticsearchExtensionOutput() DeploymentElasticsearchExtensionOutput {
	return o
}

func (o DeploymentElasticsearchExtensionOutput) ToDeploymentElasticsearchExtensionOutputWithContext(ctx context.Context) DeploymentElasticsearchExtensionOutput {
	return o
}

func (o DeploymentElasticsearchExtensionOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchExtension] {
	return pulumix.Output[DeploymentElasticsearchExtension]{
		OutputState: o.OutputState,
	}
}

// Extension name.
func (o DeploymentElasticsearchExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchExtension) string { return v.Name }).(pulumi.StringOutput)
}

// Extension type, only `bundle` or `plugin` are supported.
func (o DeploymentElasticsearchExtensionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchExtension) string { return v.Type }).(pulumi.StringOutput)
}

// Bundle or plugin URL, the extension URL can be obtained from the `ec_deployment_extension.<name>.url` attribute or the API and cannot be a random HTTP address that is hosted elsewhere.
func (o DeploymentElasticsearchExtensionOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchExtension) string { return v.Url }).(pulumi.StringOutput)
}

// Elasticsearch compatibility version. Bundles should specify major or minor versions with wildcards, such as `7.*` or `*` but **plugins must use full version notation down to the patch level**, such as `7.10.1` and wildcards are not allowed.
func (o DeploymentElasticsearchExtensionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchExtension) string { return v.Version }).(pulumi.StringOutput)
}

type DeploymentElasticsearchExtensionArrayOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchExtension)(nil)).Elem()
}

func (o DeploymentElasticsearchExtensionArrayOutput) ToDeploymentElasticsearchExtensionArrayOutput() DeploymentElasticsearchExtensionArrayOutput {
	return o
}

func (o DeploymentElasticsearchExtensionArrayOutput) ToDeploymentElasticsearchExtensionArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchExtensionArrayOutput {
	return o
}

func (o DeploymentElasticsearchExtensionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchExtension] {
	return pulumix.Output[[]DeploymentElasticsearchExtension]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchExtensionArrayOutput) Index(i pulumi.IntInput) DeploymentElasticsearchExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentElasticsearchExtension {
		return vs[0].([]DeploymentElasticsearchExtension)[vs[1].(int)]
	}).(DeploymentElasticsearchExtensionOutput)
}

type DeploymentElasticsearchFrozen struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchFrozenAutoscaling `pulumi:"autoscaling"`
	InstanceConfigurationId *string                                  `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles []string `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData *string `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest *string `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster *string `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl *string `pulumi:"nodeTypeMl"`
	Size       *string `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentElasticsearchFrozenInput is an input type that accepts DeploymentElasticsearchFrozenArgs and DeploymentElasticsearchFrozenOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchFrozenInput` via:
//
//	DeploymentElasticsearchFrozenArgs{...}
type DeploymentElasticsearchFrozenInput interface {
	pulumi.Input

	ToDeploymentElasticsearchFrozenOutput() DeploymentElasticsearchFrozenOutput
	ToDeploymentElasticsearchFrozenOutputWithContext(context.Context) DeploymentElasticsearchFrozenOutput
}

type DeploymentElasticsearchFrozenArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchFrozenAutoscalingInput `pulumi:"autoscaling"`
	InstanceConfigurationId pulumi.StringPtrInput                         `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData pulumi.StringPtrInput `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest pulumi.StringPtrInput `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster pulumi.StringPtrInput `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl pulumi.StringPtrInput `pulumi:"nodeTypeMl"`
	Size       pulumi.StringPtrInput `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentElasticsearchFrozenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchFrozen)(nil)).Elem()
}

func (i DeploymentElasticsearchFrozenArgs) ToDeploymentElasticsearchFrozenOutput() DeploymentElasticsearchFrozenOutput {
	return i.ToDeploymentElasticsearchFrozenOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchFrozenArgs) ToDeploymentElasticsearchFrozenOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchFrozenOutput)
}

func (i DeploymentElasticsearchFrozenArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchFrozen] {
	return pulumix.Output[DeploymentElasticsearchFrozen]{
		OutputState: i.ToDeploymentElasticsearchFrozenOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchFrozenArgs) ToDeploymentElasticsearchFrozenPtrOutput() DeploymentElasticsearchFrozenPtrOutput {
	return i.ToDeploymentElasticsearchFrozenPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchFrozenArgs) ToDeploymentElasticsearchFrozenPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchFrozenOutput).ToDeploymentElasticsearchFrozenPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchFrozenPtrInput is an input type that accepts DeploymentElasticsearchFrozenArgs, DeploymentElasticsearchFrozenPtr and DeploymentElasticsearchFrozenPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchFrozenPtrInput` via:
//
//	        DeploymentElasticsearchFrozenArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchFrozenPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchFrozenPtrOutput() DeploymentElasticsearchFrozenPtrOutput
	ToDeploymentElasticsearchFrozenPtrOutputWithContext(context.Context) DeploymentElasticsearchFrozenPtrOutput
}

type deploymentElasticsearchFrozenPtrType DeploymentElasticsearchFrozenArgs

func DeploymentElasticsearchFrozenPtr(v *DeploymentElasticsearchFrozenArgs) DeploymentElasticsearchFrozenPtrInput {
	return (*deploymentElasticsearchFrozenPtrType)(v)
}

func (*deploymentElasticsearchFrozenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchFrozen)(nil)).Elem()
}

func (i *deploymentElasticsearchFrozenPtrType) ToDeploymentElasticsearchFrozenPtrOutput() DeploymentElasticsearchFrozenPtrOutput {
	return i.ToDeploymentElasticsearchFrozenPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchFrozenPtrType) ToDeploymentElasticsearchFrozenPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchFrozenPtrOutput)
}

func (i *deploymentElasticsearchFrozenPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchFrozen] {
	return pulumix.Output[*DeploymentElasticsearchFrozen]{
		OutputState: i.ToDeploymentElasticsearchFrozenPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchFrozenOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchFrozenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchFrozen)(nil)).Elem()
}

func (o DeploymentElasticsearchFrozenOutput) ToDeploymentElasticsearchFrozenOutput() DeploymentElasticsearchFrozenOutput {
	return o
}

func (o DeploymentElasticsearchFrozenOutput) ToDeploymentElasticsearchFrozenOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenOutput {
	return o
}

func (o DeploymentElasticsearchFrozenOutput) ToDeploymentElasticsearchFrozenPtrOutput() DeploymentElasticsearchFrozenPtrOutput {
	return o.ToDeploymentElasticsearchFrozenPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchFrozenOutput) ToDeploymentElasticsearchFrozenPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchFrozen) *DeploymentElasticsearchFrozen {
		return &v
	}).(DeploymentElasticsearchFrozenPtrOutput)
}

func (o DeploymentElasticsearchFrozenOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchFrozen] {
	return pulumix.Output[DeploymentElasticsearchFrozen]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchFrozenOutput) Autoscaling() DeploymentElasticsearchFrozenAutoscalingOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) DeploymentElasticsearchFrozenAutoscaling { return v.Autoscaling }).(DeploymentElasticsearchFrozenAutoscalingOutput)
}

func (o DeploymentElasticsearchFrozenOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchFrozenOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchFrozenOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchFrozenOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchFrozenOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchFrozenOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchFrozenOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchFrozenOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchFrozenOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozen) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchFrozenPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchFrozenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchFrozen)(nil)).Elem()
}

func (o DeploymentElasticsearchFrozenPtrOutput) ToDeploymentElasticsearchFrozenPtrOutput() DeploymentElasticsearchFrozenPtrOutput {
	return o
}

func (o DeploymentElasticsearchFrozenPtrOutput) ToDeploymentElasticsearchFrozenPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenPtrOutput {
	return o
}

func (o DeploymentElasticsearchFrozenPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchFrozen] {
	return pulumix.Output[*DeploymentElasticsearchFrozen]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchFrozenPtrOutput) Elem() DeploymentElasticsearchFrozenOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) DeploymentElasticsearchFrozen {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchFrozen
		return ret
	}).(DeploymentElasticsearchFrozenOutput)
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchFrozenPtrOutput) Autoscaling() DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *DeploymentElasticsearchFrozenAutoscaling {
		if v == nil {
			return nil
		}
		return &v.Autoscaling
	}).(DeploymentElasticsearchFrozenAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchFrozenPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchFrozenPtrOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) []string {
		if v == nil {
			return nil
		}
		return v.NodeRoles
	}).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchFrozenPtrOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeData
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchFrozenPtrOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeIngest
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchFrozenPtrOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMaster
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchFrozenPtrOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMl
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchFrozenPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchFrozenPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchFrozenPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozen) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchFrozenAutoscaling struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize *string `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource *string `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize *string `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource *string `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson *string `pulumi:"policyOverrideJson"`
}

// DeploymentElasticsearchFrozenAutoscalingInput is an input type that accepts DeploymentElasticsearchFrozenAutoscalingArgs and DeploymentElasticsearchFrozenAutoscalingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchFrozenAutoscalingInput` via:
//
//	DeploymentElasticsearchFrozenAutoscalingArgs{...}
type DeploymentElasticsearchFrozenAutoscalingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchFrozenAutoscalingOutput() DeploymentElasticsearchFrozenAutoscalingOutput
	ToDeploymentElasticsearchFrozenAutoscalingOutputWithContext(context.Context) DeploymentElasticsearchFrozenAutoscalingOutput
}

type DeploymentElasticsearchFrozenAutoscalingArgs struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource pulumi.StringPtrInput `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource pulumi.StringPtrInput `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson pulumi.StringPtrInput `pulumi:"policyOverrideJson"`
}

func (DeploymentElasticsearchFrozenAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchFrozenAutoscaling)(nil)).Elem()
}

func (i DeploymentElasticsearchFrozenAutoscalingArgs) ToDeploymentElasticsearchFrozenAutoscalingOutput() DeploymentElasticsearchFrozenAutoscalingOutput {
	return i.ToDeploymentElasticsearchFrozenAutoscalingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchFrozenAutoscalingArgs) ToDeploymentElasticsearchFrozenAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchFrozenAutoscalingOutput)
}

func (i DeploymentElasticsearchFrozenAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchFrozenAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchFrozenAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchFrozenAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchFrozenAutoscalingArgs) ToDeploymentElasticsearchFrozenAutoscalingPtrOutput() DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchFrozenAutoscalingArgs) ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchFrozenAutoscalingOutput).ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchFrozenAutoscalingPtrInput is an input type that accepts DeploymentElasticsearchFrozenAutoscalingArgs, DeploymentElasticsearchFrozenAutoscalingPtr and DeploymentElasticsearchFrozenAutoscalingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchFrozenAutoscalingPtrInput` via:
//
//	        DeploymentElasticsearchFrozenAutoscalingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchFrozenAutoscalingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchFrozenAutoscalingPtrOutput() DeploymentElasticsearchFrozenAutoscalingPtrOutput
	ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(context.Context) DeploymentElasticsearchFrozenAutoscalingPtrOutput
}

type deploymentElasticsearchFrozenAutoscalingPtrType DeploymentElasticsearchFrozenAutoscalingArgs

func DeploymentElasticsearchFrozenAutoscalingPtr(v *DeploymentElasticsearchFrozenAutoscalingArgs) DeploymentElasticsearchFrozenAutoscalingPtrInput {
	return (*deploymentElasticsearchFrozenAutoscalingPtrType)(v)
}

func (*deploymentElasticsearchFrozenAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchFrozenAutoscaling)(nil)).Elem()
}

func (i *deploymentElasticsearchFrozenAutoscalingPtrType) ToDeploymentElasticsearchFrozenAutoscalingPtrOutput() DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchFrozenAutoscalingPtrType) ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchFrozenAutoscalingPtrOutput)
}

func (i *deploymentElasticsearchFrozenAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchFrozenAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchFrozenAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchFrozenAutoscalingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchFrozenAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchFrozenAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchFrozenAutoscalingOutput) ToDeploymentElasticsearchFrozenAutoscalingOutput() DeploymentElasticsearchFrozenAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchFrozenAutoscalingOutput) ToDeploymentElasticsearchFrozenAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchFrozenAutoscalingOutput) ToDeploymentElasticsearchFrozenAutoscalingPtrOutput() DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return o.ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchFrozenAutoscalingOutput) ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchFrozenAutoscaling) *DeploymentElasticsearchFrozenAutoscaling {
		return &v
	}).(DeploymentElasticsearchFrozenAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchFrozenAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchFrozenAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchFrozenAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozenAutoscaling) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozenAutoscaling) *string { return v.MaxSizeResource }).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozenAutoscaling) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozenAutoscaling) *string { return v.MinSizeResource }).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchFrozenAutoscalingOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchFrozenAutoscaling) *string { return v.PolicyOverrideJson }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchFrozenAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchFrozenAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchFrozenAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) ToDeploymentElasticsearchFrozenAutoscalingPtrOutput() DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) ToDeploymentElasticsearchFrozenAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchFrozenAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchFrozenAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchFrozenAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) Elem() DeploymentElasticsearchFrozenAutoscalingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozenAutoscaling) DeploymentElasticsearchFrozenAutoscaling {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchFrozenAutoscaling
		return ret
	}).(DeploymentElasticsearchFrozenAutoscalingOutput)
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozenAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozenAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeResource
	}).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozenAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozenAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSizeResource
	}).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchFrozenAutoscalingPtrOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchFrozenAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.PolicyOverrideJson
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchHot struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchHotAutoscaling `pulumi:"autoscaling"`
	InstanceConfigurationId *string                               `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles []string `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData *string `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest *string `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster *string `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl *string `pulumi:"nodeTypeMl"`
	Size       *string `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentElasticsearchHotInput is an input type that accepts DeploymentElasticsearchHotArgs and DeploymentElasticsearchHotOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchHotInput` via:
//
//	DeploymentElasticsearchHotArgs{...}
type DeploymentElasticsearchHotInput interface {
	pulumi.Input

	ToDeploymentElasticsearchHotOutput() DeploymentElasticsearchHotOutput
	ToDeploymentElasticsearchHotOutputWithContext(context.Context) DeploymentElasticsearchHotOutput
}

type DeploymentElasticsearchHotArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchHotAutoscalingInput `pulumi:"autoscaling"`
	InstanceConfigurationId pulumi.StringPtrInput                      `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData pulumi.StringPtrInput `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest pulumi.StringPtrInput `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster pulumi.StringPtrInput `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl pulumi.StringPtrInput `pulumi:"nodeTypeMl"`
	Size       pulumi.StringPtrInput `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentElasticsearchHotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchHot)(nil)).Elem()
}

func (i DeploymentElasticsearchHotArgs) ToDeploymentElasticsearchHotOutput() DeploymentElasticsearchHotOutput {
	return i.ToDeploymentElasticsearchHotOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchHotArgs) ToDeploymentElasticsearchHotOutputWithContext(ctx context.Context) DeploymentElasticsearchHotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchHotOutput)
}

func (i DeploymentElasticsearchHotArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchHot] {
	return pulumix.Output[DeploymentElasticsearchHot]{
		OutputState: i.ToDeploymentElasticsearchHotOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchHotArgs) ToDeploymentElasticsearchHotPtrOutput() DeploymentElasticsearchHotPtrOutput {
	return i.ToDeploymentElasticsearchHotPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchHotArgs) ToDeploymentElasticsearchHotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchHotOutput).ToDeploymentElasticsearchHotPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchHotPtrInput is an input type that accepts DeploymentElasticsearchHotArgs, DeploymentElasticsearchHotPtr and DeploymentElasticsearchHotPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchHotPtrInput` via:
//
//	        DeploymentElasticsearchHotArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchHotPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchHotPtrOutput() DeploymentElasticsearchHotPtrOutput
	ToDeploymentElasticsearchHotPtrOutputWithContext(context.Context) DeploymentElasticsearchHotPtrOutput
}

type deploymentElasticsearchHotPtrType DeploymentElasticsearchHotArgs

func DeploymentElasticsearchHotPtr(v *DeploymentElasticsearchHotArgs) DeploymentElasticsearchHotPtrInput {
	return (*deploymentElasticsearchHotPtrType)(v)
}

func (*deploymentElasticsearchHotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchHot)(nil)).Elem()
}

func (i *deploymentElasticsearchHotPtrType) ToDeploymentElasticsearchHotPtrOutput() DeploymentElasticsearchHotPtrOutput {
	return i.ToDeploymentElasticsearchHotPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchHotPtrType) ToDeploymentElasticsearchHotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchHotPtrOutput)
}

func (i *deploymentElasticsearchHotPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchHot] {
	return pulumix.Output[*DeploymentElasticsearchHot]{
		OutputState: i.ToDeploymentElasticsearchHotPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchHotOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchHotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchHot)(nil)).Elem()
}

func (o DeploymentElasticsearchHotOutput) ToDeploymentElasticsearchHotOutput() DeploymentElasticsearchHotOutput {
	return o
}

func (o DeploymentElasticsearchHotOutput) ToDeploymentElasticsearchHotOutputWithContext(ctx context.Context) DeploymentElasticsearchHotOutput {
	return o
}

func (o DeploymentElasticsearchHotOutput) ToDeploymentElasticsearchHotPtrOutput() DeploymentElasticsearchHotPtrOutput {
	return o.ToDeploymentElasticsearchHotPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchHotOutput) ToDeploymentElasticsearchHotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchHot) *DeploymentElasticsearchHot {
		return &v
	}).(DeploymentElasticsearchHotPtrOutput)
}

func (o DeploymentElasticsearchHotOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchHot] {
	return pulumix.Output[DeploymentElasticsearchHot]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchHotOutput) Autoscaling() DeploymentElasticsearchHotAutoscalingOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) DeploymentElasticsearchHotAutoscaling { return v.Autoscaling }).(DeploymentElasticsearchHotAutoscalingOutput)
}

func (o DeploymentElasticsearchHotOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchHotOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchHotOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchHotOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchHotOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchHotOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchHotOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchHotOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchHotOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHot) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchHotPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchHotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchHot)(nil)).Elem()
}

func (o DeploymentElasticsearchHotPtrOutput) ToDeploymentElasticsearchHotPtrOutput() DeploymentElasticsearchHotPtrOutput {
	return o
}

func (o DeploymentElasticsearchHotPtrOutput) ToDeploymentElasticsearchHotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotPtrOutput {
	return o
}

func (o DeploymentElasticsearchHotPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchHot] {
	return pulumix.Output[*DeploymentElasticsearchHot]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchHotPtrOutput) Elem() DeploymentElasticsearchHotOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) DeploymentElasticsearchHot {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchHot
		return ret
	}).(DeploymentElasticsearchHotOutput)
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchHotPtrOutput) Autoscaling() DeploymentElasticsearchHotAutoscalingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *DeploymentElasticsearchHotAutoscaling {
		if v == nil {
			return nil
		}
		return &v.Autoscaling
	}).(DeploymentElasticsearchHotAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchHotPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchHotPtrOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) []string {
		if v == nil {
			return nil
		}
		return v.NodeRoles
	}).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchHotPtrOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeData
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchHotPtrOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeIngest
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchHotPtrOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMaster
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchHotPtrOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMl
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchHotPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchHotPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchHotPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHot) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchHotAutoscaling struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize *string `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource *string `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize *string `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource *string `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson *string `pulumi:"policyOverrideJson"`
}

// DeploymentElasticsearchHotAutoscalingInput is an input type that accepts DeploymentElasticsearchHotAutoscalingArgs and DeploymentElasticsearchHotAutoscalingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchHotAutoscalingInput` via:
//
//	DeploymentElasticsearchHotAutoscalingArgs{...}
type DeploymentElasticsearchHotAutoscalingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchHotAutoscalingOutput() DeploymentElasticsearchHotAutoscalingOutput
	ToDeploymentElasticsearchHotAutoscalingOutputWithContext(context.Context) DeploymentElasticsearchHotAutoscalingOutput
}

type DeploymentElasticsearchHotAutoscalingArgs struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource pulumi.StringPtrInput `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource pulumi.StringPtrInput `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson pulumi.StringPtrInput `pulumi:"policyOverrideJson"`
}

func (DeploymentElasticsearchHotAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchHotAutoscaling)(nil)).Elem()
}

func (i DeploymentElasticsearchHotAutoscalingArgs) ToDeploymentElasticsearchHotAutoscalingOutput() DeploymentElasticsearchHotAutoscalingOutput {
	return i.ToDeploymentElasticsearchHotAutoscalingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchHotAutoscalingArgs) ToDeploymentElasticsearchHotAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchHotAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchHotAutoscalingOutput)
}

func (i DeploymentElasticsearchHotAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchHotAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchHotAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchHotAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchHotAutoscalingArgs) ToDeploymentElasticsearchHotAutoscalingPtrOutput() DeploymentElasticsearchHotAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchHotAutoscalingArgs) ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchHotAutoscalingOutput).ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchHotAutoscalingPtrInput is an input type that accepts DeploymentElasticsearchHotAutoscalingArgs, DeploymentElasticsearchHotAutoscalingPtr and DeploymentElasticsearchHotAutoscalingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchHotAutoscalingPtrInput` via:
//
//	        DeploymentElasticsearchHotAutoscalingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchHotAutoscalingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchHotAutoscalingPtrOutput() DeploymentElasticsearchHotAutoscalingPtrOutput
	ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(context.Context) DeploymentElasticsearchHotAutoscalingPtrOutput
}

type deploymentElasticsearchHotAutoscalingPtrType DeploymentElasticsearchHotAutoscalingArgs

func DeploymentElasticsearchHotAutoscalingPtr(v *DeploymentElasticsearchHotAutoscalingArgs) DeploymentElasticsearchHotAutoscalingPtrInput {
	return (*deploymentElasticsearchHotAutoscalingPtrType)(v)
}

func (*deploymentElasticsearchHotAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchHotAutoscaling)(nil)).Elem()
}

func (i *deploymentElasticsearchHotAutoscalingPtrType) ToDeploymentElasticsearchHotAutoscalingPtrOutput() DeploymentElasticsearchHotAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchHotAutoscalingPtrType) ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchHotAutoscalingPtrOutput)
}

func (i *deploymentElasticsearchHotAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchHotAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchHotAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchHotAutoscalingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchHotAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchHotAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchHotAutoscalingOutput) ToDeploymentElasticsearchHotAutoscalingOutput() DeploymentElasticsearchHotAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchHotAutoscalingOutput) ToDeploymentElasticsearchHotAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchHotAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchHotAutoscalingOutput) ToDeploymentElasticsearchHotAutoscalingPtrOutput() DeploymentElasticsearchHotAutoscalingPtrOutput {
	return o.ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchHotAutoscalingOutput) ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchHotAutoscaling) *DeploymentElasticsearchHotAutoscaling {
		return &v
	}).(DeploymentElasticsearchHotAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchHotAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchHotAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchHotAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHotAutoscaling) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHotAutoscaling) *string { return v.MaxSizeResource }).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHotAutoscaling) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHotAutoscaling) *string { return v.MinSizeResource }).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchHotAutoscalingOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchHotAutoscaling) *string { return v.PolicyOverrideJson }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchHotAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchHotAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchHotAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchHotAutoscalingPtrOutput) ToDeploymentElasticsearchHotAutoscalingPtrOutput() DeploymentElasticsearchHotAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchHotAutoscalingPtrOutput) ToDeploymentElasticsearchHotAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchHotAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchHotAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchHotAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchHotAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchHotAutoscalingPtrOutput) Elem() DeploymentElasticsearchHotAutoscalingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHotAutoscaling) DeploymentElasticsearchHotAutoscaling {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchHotAutoscaling
		return ret
	}).(DeploymentElasticsearchHotAutoscalingOutput)
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHotAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingPtrOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHotAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeResource
	}).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingPtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHotAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchHotAutoscalingPtrOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHotAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSizeResource
	}).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchHotAutoscalingPtrOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchHotAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.PolicyOverrideJson
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchKeystoreContents struct {
	// If true, the secret is handled as a file. Otherwise, it's handled as a plain string.
	AsFile *bool `pulumi:"asFile"`
	// Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
	Value string `pulumi:"value"`
}

// DeploymentElasticsearchKeystoreContentsInput is an input type that accepts DeploymentElasticsearchKeystoreContentsArgs and DeploymentElasticsearchKeystoreContentsOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchKeystoreContentsInput` via:
//
//	DeploymentElasticsearchKeystoreContentsArgs{...}
type DeploymentElasticsearchKeystoreContentsInput interface {
	pulumi.Input

	ToDeploymentElasticsearchKeystoreContentsOutput() DeploymentElasticsearchKeystoreContentsOutput
	ToDeploymentElasticsearchKeystoreContentsOutputWithContext(context.Context) DeploymentElasticsearchKeystoreContentsOutput
}

type DeploymentElasticsearchKeystoreContentsArgs struct {
	// If true, the secret is handled as a file. Otherwise, it's handled as a plain string.
	AsFile pulumi.BoolPtrInput `pulumi:"asFile"`
	// Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DeploymentElasticsearchKeystoreContentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchKeystoreContents)(nil)).Elem()
}

func (i DeploymentElasticsearchKeystoreContentsArgs) ToDeploymentElasticsearchKeystoreContentsOutput() DeploymentElasticsearchKeystoreContentsOutput {
	return i.ToDeploymentElasticsearchKeystoreContentsOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchKeystoreContentsArgs) ToDeploymentElasticsearchKeystoreContentsOutputWithContext(ctx context.Context) DeploymentElasticsearchKeystoreContentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchKeystoreContentsOutput)
}

func (i DeploymentElasticsearchKeystoreContentsArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchKeystoreContents] {
	return pulumix.Output[DeploymentElasticsearchKeystoreContents]{
		OutputState: i.ToDeploymentElasticsearchKeystoreContentsOutputWithContext(ctx).OutputState,
	}
}

// DeploymentElasticsearchKeystoreContentsMapInput is an input type that accepts DeploymentElasticsearchKeystoreContentsMap and DeploymentElasticsearchKeystoreContentsMapOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchKeystoreContentsMapInput` via:
//
//	DeploymentElasticsearchKeystoreContentsMap{ "key": DeploymentElasticsearchKeystoreContentsArgs{...} }
type DeploymentElasticsearchKeystoreContentsMapInput interface {
	pulumi.Input

	ToDeploymentElasticsearchKeystoreContentsMapOutput() DeploymentElasticsearchKeystoreContentsMapOutput
	ToDeploymentElasticsearchKeystoreContentsMapOutputWithContext(context.Context) DeploymentElasticsearchKeystoreContentsMapOutput
}

type DeploymentElasticsearchKeystoreContentsMap map[string]DeploymentElasticsearchKeystoreContentsInput

func (DeploymentElasticsearchKeystoreContentsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DeploymentElasticsearchKeystoreContents)(nil)).Elem()
}

func (i DeploymentElasticsearchKeystoreContentsMap) ToDeploymentElasticsearchKeystoreContentsMapOutput() DeploymentElasticsearchKeystoreContentsMapOutput {
	return i.ToDeploymentElasticsearchKeystoreContentsMapOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchKeystoreContentsMap) ToDeploymentElasticsearchKeystoreContentsMapOutputWithContext(ctx context.Context) DeploymentElasticsearchKeystoreContentsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchKeystoreContentsMapOutput)
}

func (i DeploymentElasticsearchKeystoreContentsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]DeploymentElasticsearchKeystoreContents] {
	return pulumix.Output[map[string]DeploymentElasticsearchKeystoreContents]{
		OutputState: i.ToDeploymentElasticsearchKeystoreContentsMapOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchKeystoreContentsOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchKeystoreContentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchKeystoreContents)(nil)).Elem()
}

func (o DeploymentElasticsearchKeystoreContentsOutput) ToDeploymentElasticsearchKeystoreContentsOutput() DeploymentElasticsearchKeystoreContentsOutput {
	return o
}

func (o DeploymentElasticsearchKeystoreContentsOutput) ToDeploymentElasticsearchKeystoreContentsOutputWithContext(ctx context.Context) DeploymentElasticsearchKeystoreContentsOutput {
	return o
}

func (o DeploymentElasticsearchKeystoreContentsOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchKeystoreContents] {
	return pulumix.Output[DeploymentElasticsearchKeystoreContents]{
		OutputState: o.OutputState,
	}
}

// If true, the secret is handled as a file. Otherwise, it's handled as a plain string.
func (o DeploymentElasticsearchKeystoreContentsOutput) AsFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchKeystoreContents) *bool { return v.AsFile }).(pulumi.BoolPtrOutput)
}

// Secret value. This can either be a string or a JSON object that is stored as a JSON string in the keystore.
func (o DeploymentElasticsearchKeystoreContentsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchKeystoreContents) string { return v.Value }).(pulumi.StringOutput)
}

type DeploymentElasticsearchKeystoreContentsMapOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchKeystoreContentsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DeploymentElasticsearchKeystoreContents)(nil)).Elem()
}

func (o DeploymentElasticsearchKeystoreContentsMapOutput) ToDeploymentElasticsearchKeystoreContentsMapOutput() DeploymentElasticsearchKeystoreContentsMapOutput {
	return o
}

func (o DeploymentElasticsearchKeystoreContentsMapOutput) ToDeploymentElasticsearchKeystoreContentsMapOutputWithContext(ctx context.Context) DeploymentElasticsearchKeystoreContentsMapOutput {
	return o
}

func (o DeploymentElasticsearchKeystoreContentsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]DeploymentElasticsearchKeystoreContents] {
	return pulumix.Output[map[string]DeploymentElasticsearchKeystoreContents]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchKeystoreContentsMapOutput) MapIndex(k pulumi.StringInput) DeploymentElasticsearchKeystoreContentsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DeploymentElasticsearchKeystoreContents {
		return vs[0].(map[string]DeploymentElasticsearchKeystoreContents)[vs[1].(string)]
	}).(DeploymentElasticsearchKeystoreContentsOutput)
}

type DeploymentElasticsearchMaster struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchMasterAutoscaling `pulumi:"autoscaling"`
	InstanceConfigurationId *string                                  `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles []string `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData *string `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest *string `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster *string `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl *string `pulumi:"nodeTypeMl"`
	Size       *string `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentElasticsearchMasterInput is an input type that accepts DeploymentElasticsearchMasterArgs and DeploymentElasticsearchMasterOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMasterInput` via:
//
//	DeploymentElasticsearchMasterArgs{...}
type DeploymentElasticsearchMasterInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMasterOutput() DeploymentElasticsearchMasterOutput
	ToDeploymentElasticsearchMasterOutputWithContext(context.Context) DeploymentElasticsearchMasterOutput
}

type DeploymentElasticsearchMasterArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchMasterAutoscalingInput `pulumi:"autoscaling"`
	InstanceConfigurationId pulumi.StringPtrInput                         `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData pulumi.StringPtrInput `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest pulumi.StringPtrInput `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster pulumi.StringPtrInput `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl pulumi.StringPtrInput `pulumi:"nodeTypeMl"`
	Size       pulumi.StringPtrInput `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentElasticsearchMasterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMaster)(nil)).Elem()
}

func (i DeploymentElasticsearchMasterArgs) ToDeploymentElasticsearchMasterOutput() DeploymentElasticsearchMasterOutput {
	return i.ToDeploymentElasticsearchMasterOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMasterArgs) ToDeploymentElasticsearchMasterOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMasterOutput)
}

func (i DeploymentElasticsearchMasterArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMaster] {
	return pulumix.Output[DeploymentElasticsearchMaster]{
		OutputState: i.ToDeploymentElasticsearchMasterOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchMasterArgs) ToDeploymentElasticsearchMasterPtrOutput() DeploymentElasticsearchMasterPtrOutput {
	return i.ToDeploymentElasticsearchMasterPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMasterArgs) ToDeploymentElasticsearchMasterPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMasterOutput).ToDeploymentElasticsearchMasterPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchMasterPtrInput is an input type that accepts DeploymentElasticsearchMasterArgs, DeploymentElasticsearchMasterPtr and DeploymentElasticsearchMasterPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMasterPtrInput` via:
//
//	        DeploymentElasticsearchMasterArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchMasterPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMasterPtrOutput() DeploymentElasticsearchMasterPtrOutput
	ToDeploymentElasticsearchMasterPtrOutputWithContext(context.Context) DeploymentElasticsearchMasterPtrOutput
}

type deploymentElasticsearchMasterPtrType DeploymentElasticsearchMasterArgs

func DeploymentElasticsearchMasterPtr(v *DeploymentElasticsearchMasterArgs) DeploymentElasticsearchMasterPtrInput {
	return (*deploymentElasticsearchMasterPtrType)(v)
}

func (*deploymentElasticsearchMasterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMaster)(nil)).Elem()
}

func (i *deploymentElasticsearchMasterPtrType) ToDeploymentElasticsearchMasterPtrOutput() DeploymentElasticsearchMasterPtrOutput {
	return i.ToDeploymentElasticsearchMasterPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchMasterPtrType) ToDeploymentElasticsearchMasterPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMasterPtrOutput)
}

func (i *deploymentElasticsearchMasterPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMaster] {
	return pulumix.Output[*DeploymentElasticsearchMaster]{
		OutputState: i.ToDeploymentElasticsearchMasterPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchMasterOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMasterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMaster)(nil)).Elem()
}

func (o DeploymentElasticsearchMasterOutput) ToDeploymentElasticsearchMasterOutput() DeploymentElasticsearchMasterOutput {
	return o
}

func (o DeploymentElasticsearchMasterOutput) ToDeploymentElasticsearchMasterOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterOutput {
	return o
}

func (o DeploymentElasticsearchMasterOutput) ToDeploymentElasticsearchMasterPtrOutput() DeploymentElasticsearchMasterPtrOutput {
	return o.ToDeploymentElasticsearchMasterPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchMasterOutput) ToDeploymentElasticsearchMasterPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchMaster) *DeploymentElasticsearchMaster {
		return &v
	}).(DeploymentElasticsearchMasterPtrOutput)
}

func (o DeploymentElasticsearchMasterOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMaster] {
	return pulumix.Output[DeploymentElasticsearchMaster]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchMasterOutput) Autoscaling() DeploymentElasticsearchMasterAutoscalingOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) DeploymentElasticsearchMasterAutoscaling { return v.Autoscaling }).(DeploymentElasticsearchMasterAutoscalingOutput)
}

func (o DeploymentElasticsearchMasterOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchMasterOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchMasterOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchMasterOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchMasterOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchMasterOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMasterOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchMasterOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMasterOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMaster) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchMasterPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMasterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMaster)(nil)).Elem()
}

func (o DeploymentElasticsearchMasterPtrOutput) ToDeploymentElasticsearchMasterPtrOutput() DeploymentElasticsearchMasterPtrOutput {
	return o
}

func (o DeploymentElasticsearchMasterPtrOutput) ToDeploymentElasticsearchMasterPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterPtrOutput {
	return o
}

func (o DeploymentElasticsearchMasterPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMaster] {
	return pulumix.Output[*DeploymentElasticsearchMaster]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchMasterPtrOutput) Elem() DeploymentElasticsearchMasterOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) DeploymentElasticsearchMaster {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchMaster
		return ret
	}).(DeploymentElasticsearchMasterOutput)
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchMasterPtrOutput) Autoscaling() DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *DeploymentElasticsearchMasterAutoscaling {
		if v == nil {
			return nil
		}
		return &v.Autoscaling
	}).(DeploymentElasticsearchMasterAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchMasterPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchMasterPtrOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) []string {
		if v == nil {
			return nil
		}
		return v.NodeRoles
	}).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchMasterPtrOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeData
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchMasterPtrOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeIngest
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchMasterPtrOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMaster
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchMasterPtrOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMl
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMasterPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchMasterPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMasterPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMaster) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchMasterAutoscaling struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize *string `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource *string `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize *string `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource *string `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson *string `pulumi:"policyOverrideJson"`
}

// DeploymentElasticsearchMasterAutoscalingInput is an input type that accepts DeploymentElasticsearchMasterAutoscalingArgs and DeploymentElasticsearchMasterAutoscalingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMasterAutoscalingInput` via:
//
//	DeploymentElasticsearchMasterAutoscalingArgs{...}
type DeploymentElasticsearchMasterAutoscalingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMasterAutoscalingOutput() DeploymentElasticsearchMasterAutoscalingOutput
	ToDeploymentElasticsearchMasterAutoscalingOutputWithContext(context.Context) DeploymentElasticsearchMasterAutoscalingOutput
}

type DeploymentElasticsearchMasterAutoscalingArgs struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource pulumi.StringPtrInput `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource pulumi.StringPtrInput `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson pulumi.StringPtrInput `pulumi:"policyOverrideJson"`
}

func (DeploymentElasticsearchMasterAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMasterAutoscaling)(nil)).Elem()
}

func (i DeploymentElasticsearchMasterAutoscalingArgs) ToDeploymentElasticsearchMasterAutoscalingOutput() DeploymentElasticsearchMasterAutoscalingOutput {
	return i.ToDeploymentElasticsearchMasterAutoscalingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMasterAutoscalingArgs) ToDeploymentElasticsearchMasterAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMasterAutoscalingOutput)
}

func (i DeploymentElasticsearchMasterAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMasterAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchMasterAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchMasterAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchMasterAutoscalingArgs) ToDeploymentElasticsearchMasterAutoscalingPtrOutput() DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMasterAutoscalingArgs) ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMasterAutoscalingOutput).ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchMasterAutoscalingPtrInput is an input type that accepts DeploymentElasticsearchMasterAutoscalingArgs, DeploymentElasticsearchMasterAutoscalingPtr and DeploymentElasticsearchMasterAutoscalingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMasterAutoscalingPtrInput` via:
//
//	        DeploymentElasticsearchMasterAutoscalingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchMasterAutoscalingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMasterAutoscalingPtrOutput() DeploymentElasticsearchMasterAutoscalingPtrOutput
	ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(context.Context) DeploymentElasticsearchMasterAutoscalingPtrOutput
}

type deploymentElasticsearchMasterAutoscalingPtrType DeploymentElasticsearchMasterAutoscalingArgs

func DeploymentElasticsearchMasterAutoscalingPtr(v *DeploymentElasticsearchMasterAutoscalingArgs) DeploymentElasticsearchMasterAutoscalingPtrInput {
	return (*deploymentElasticsearchMasterAutoscalingPtrType)(v)
}

func (*deploymentElasticsearchMasterAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMasterAutoscaling)(nil)).Elem()
}

func (i *deploymentElasticsearchMasterAutoscalingPtrType) ToDeploymentElasticsearchMasterAutoscalingPtrOutput() DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchMasterAutoscalingPtrType) ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMasterAutoscalingPtrOutput)
}

func (i *deploymentElasticsearchMasterAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMasterAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchMasterAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchMasterAutoscalingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMasterAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMasterAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchMasterAutoscalingOutput) ToDeploymentElasticsearchMasterAutoscalingOutput() DeploymentElasticsearchMasterAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchMasterAutoscalingOutput) ToDeploymentElasticsearchMasterAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchMasterAutoscalingOutput) ToDeploymentElasticsearchMasterAutoscalingPtrOutput() DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return o.ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchMasterAutoscalingOutput) ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchMasterAutoscaling) *DeploymentElasticsearchMasterAutoscaling {
		return &v
	}).(DeploymentElasticsearchMasterAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchMasterAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMasterAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchMasterAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMasterAutoscaling) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMasterAutoscaling) *string { return v.MaxSizeResource }).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMasterAutoscaling) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMasterAutoscaling) *string { return v.MinSizeResource }).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchMasterAutoscalingOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMasterAutoscaling) *string { return v.PolicyOverrideJson }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchMasterAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMasterAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMasterAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) ToDeploymentElasticsearchMasterAutoscalingPtrOutput() DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) ToDeploymentElasticsearchMasterAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMasterAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMasterAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchMasterAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) Elem() DeploymentElasticsearchMasterAutoscalingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMasterAutoscaling) DeploymentElasticsearchMasterAutoscaling {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchMasterAutoscaling
		return ret
	}).(DeploymentElasticsearchMasterAutoscalingOutput)
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMasterAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMasterAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeResource
	}).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMasterAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMasterAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSizeResource
	}).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchMasterAutoscalingPtrOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMasterAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.PolicyOverrideJson
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchMl struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchMlAutoscaling `pulumi:"autoscaling"`
	InstanceConfigurationId *string                              `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles []string `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData *string `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest *string `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster *string `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl *string `pulumi:"nodeTypeMl"`
	Size       *string `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentElasticsearchMlInput is an input type that accepts DeploymentElasticsearchMlArgs and DeploymentElasticsearchMlOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMlInput` via:
//
//	DeploymentElasticsearchMlArgs{...}
type DeploymentElasticsearchMlInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMlOutput() DeploymentElasticsearchMlOutput
	ToDeploymentElasticsearchMlOutputWithContext(context.Context) DeploymentElasticsearchMlOutput
}

type DeploymentElasticsearchMlArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchMlAutoscalingInput `pulumi:"autoscaling"`
	InstanceConfigurationId pulumi.StringPtrInput                     `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData pulumi.StringPtrInput `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest pulumi.StringPtrInput `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster pulumi.StringPtrInput `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl pulumi.StringPtrInput `pulumi:"nodeTypeMl"`
	Size       pulumi.StringPtrInput `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentElasticsearchMlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMl)(nil)).Elem()
}

func (i DeploymentElasticsearchMlArgs) ToDeploymentElasticsearchMlOutput() DeploymentElasticsearchMlOutput {
	return i.ToDeploymentElasticsearchMlOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMlArgs) ToDeploymentElasticsearchMlOutputWithContext(ctx context.Context) DeploymentElasticsearchMlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMlOutput)
}

func (i DeploymentElasticsearchMlArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMl] {
	return pulumix.Output[DeploymentElasticsearchMl]{
		OutputState: i.ToDeploymentElasticsearchMlOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchMlArgs) ToDeploymentElasticsearchMlPtrOutput() DeploymentElasticsearchMlPtrOutput {
	return i.ToDeploymentElasticsearchMlPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMlArgs) ToDeploymentElasticsearchMlPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMlOutput).ToDeploymentElasticsearchMlPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchMlPtrInput is an input type that accepts DeploymentElasticsearchMlArgs, DeploymentElasticsearchMlPtr and DeploymentElasticsearchMlPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMlPtrInput` via:
//
//	        DeploymentElasticsearchMlArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchMlPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMlPtrOutput() DeploymentElasticsearchMlPtrOutput
	ToDeploymentElasticsearchMlPtrOutputWithContext(context.Context) DeploymentElasticsearchMlPtrOutput
}

type deploymentElasticsearchMlPtrType DeploymentElasticsearchMlArgs

func DeploymentElasticsearchMlPtr(v *DeploymentElasticsearchMlArgs) DeploymentElasticsearchMlPtrInput {
	return (*deploymentElasticsearchMlPtrType)(v)
}

func (*deploymentElasticsearchMlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMl)(nil)).Elem()
}

func (i *deploymentElasticsearchMlPtrType) ToDeploymentElasticsearchMlPtrOutput() DeploymentElasticsearchMlPtrOutput {
	return i.ToDeploymentElasticsearchMlPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchMlPtrType) ToDeploymentElasticsearchMlPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMlPtrOutput)
}

func (i *deploymentElasticsearchMlPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMl] {
	return pulumix.Output[*DeploymentElasticsearchMl]{
		OutputState: i.ToDeploymentElasticsearchMlPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchMlOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMl)(nil)).Elem()
}

func (o DeploymentElasticsearchMlOutput) ToDeploymentElasticsearchMlOutput() DeploymentElasticsearchMlOutput {
	return o
}

func (o DeploymentElasticsearchMlOutput) ToDeploymentElasticsearchMlOutputWithContext(ctx context.Context) DeploymentElasticsearchMlOutput {
	return o
}

func (o DeploymentElasticsearchMlOutput) ToDeploymentElasticsearchMlPtrOutput() DeploymentElasticsearchMlPtrOutput {
	return o.ToDeploymentElasticsearchMlPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchMlOutput) ToDeploymentElasticsearchMlPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchMl) *DeploymentElasticsearchMl {
		return &v
	}).(DeploymentElasticsearchMlPtrOutput)
}

func (o DeploymentElasticsearchMlOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMl] {
	return pulumix.Output[DeploymentElasticsearchMl]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchMlOutput) Autoscaling() DeploymentElasticsearchMlAutoscalingOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) DeploymentElasticsearchMlAutoscaling { return v.Autoscaling }).(DeploymentElasticsearchMlAutoscalingOutput)
}

func (o DeploymentElasticsearchMlOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchMlOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchMlOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchMlOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchMlOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchMlOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMlOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchMlOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMlOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMl) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchMlPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMl)(nil)).Elem()
}

func (o DeploymentElasticsearchMlPtrOutput) ToDeploymentElasticsearchMlPtrOutput() DeploymentElasticsearchMlPtrOutput {
	return o
}

func (o DeploymentElasticsearchMlPtrOutput) ToDeploymentElasticsearchMlPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlPtrOutput {
	return o
}

func (o DeploymentElasticsearchMlPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMl] {
	return pulumix.Output[*DeploymentElasticsearchMl]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchMlPtrOutput) Elem() DeploymentElasticsearchMlOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) DeploymentElasticsearchMl {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchMl
		return ret
	}).(DeploymentElasticsearchMlOutput)
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchMlPtrOutput) Autoscaling() DeploymentElasticsearchMlAutoscalingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *DeploymentElasticsearchMlAutoscaling {
		if v == nil {
			return nil
		}
		return &v.Autoscaling
	}).(DeploymentElasticsearchMlAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchMlPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchMlPtrOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) []string {
		if v == nil {
			return nil
		}
		return v.NodeRoles
	}).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchMlPtrOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeData
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchMlPtrOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeIngest
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchMlPtrOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMaster
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchMlPtrOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMl
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMlPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchMlPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchMlPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMl) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchMlAutoscaling struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize *string `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource *string `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize *string `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource *string `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson *string `pulumi:"policyOverrideJson"`
}

// DeploymentElasticsearchMlAutoscalingInput is an input type that accepts DeploymentElasticsearchMlAutoscalingArgs and DeploymentElasticsearchMlAutoscalingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMlAutoscalingInput` via:
//
//	DeploymentElasticsearchMlAutoscalingArgs{...}
type DeploymentElasticsearchMlAutoscalingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMlAutoscalingOutput() DeploymentElasticsearchMlAutoscalingOutput
	ToDeploymentElasticsearchMlAutoscalingOutputWithContext(context.Context) DeploymentElasticsearchMlAutoscalingOutput
}

type DeploymentElasticsearchMlAutoscalingArgs struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource pulumi.StringPtrInput `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource pulumi.StringPtrInput `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson pulumi.StringPtrInput `pulumi:"policyOverrideJson"`
}

func (DeploymentElasticsearchMlAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMlAutoscaling)(nil)).Elem()
}

func (i DeploymentElasticsearchMlAutoscalingArgs) ToDeploymentElasticsearchMlAutoscalingOutput() DeploymentElasticsearchMlAutoscalingOutput {
	return i.ToDeploymentElasticsearchMlAutoscalingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMlAutoscalingArgs) ToDeploymentElasticsearchMlAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchMlAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMlAutoscalingOutput)
}

func (i DeploymentElasticsearchMlAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMlAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchMlAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchMlAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchMlAutoscalingArgs) ToDeploymentElasticsearchMlAutoscalingPtrOutput() DeploymentElasticsearchMlAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchMlAutoscalingArgs) ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMlAutoscalingOutput).ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchMlAutoscalingPtrInput is an input type that accepts DeploymentElasticsearchMlAutoscalingArgs, DeploymentElasticsearchMlAutoscalingPtr and DeploymentElasticsearchMlAutoscalingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchMlAutoscalingPtrInput` via:
//
//	        DeploymentElasticsearchMlAutoscalingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchMlAutoscalingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchMlAutoscalingPtrOutput() DeploymentElasticsearchMlAutoscalingPtrOutput
	ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(context.Context) DeploymentElasticsearchMlAutoscalingPtrOutput
}

type deploymentElasticsearchMlAutoscalingPtrType DeploymentElasticsearchMlAutoscalingArgs

func DeploymentElasticsearchMlAutoscalingPtr(v *DeploymentElasticsearchMlAutoscalingArgs) DeploymentElasticsearchMlAutoscalingPtrInput {
	return (*deploymentElasticsearchMlAutoscalingPtrType)(v)
}

func (*deploymentElasticsearchMlAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMlAutoscaling)(nil)).Elem()
}

func (i *deploymentElasticsearchMlAutoscalingPtrType) ToDeploymentElasticsearchMlAutoscalingPtrOutput() DeploymentElasticsearchMlAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchMlAutoscalingPtrType) ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchMlAutoscalingPtrOutput)
}

func (i *deploymentElasticsearchMlAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMlAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchMlAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchMlAutoscalingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMlAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchMlAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchMlAutoscalingOutput) ToDeploymentElasticsearchMlAutoscalingOutput() DeploymentElasticsearchMlAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchMlAutoscalingOutput) ToDeploymentElasticsearchMlAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchMlAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchMlAutoscalingOutput) ToDeploymentElasticsearchMlAutoscalingPtrOutput() DeploymentElasticsearchMlAutoscalingPtrOutput {
	return o.ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchMlAutoscalingOutput) ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchMlAutoscaling) *DeploymentElasticsearchMlAutoscaling {
		return &v
	}).(DeploymentElasticsearchMlAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchMlAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchMlAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchMlAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMlAutoscaling) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMlAutoscaling) *string { return v.MaxSizeResource }).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMlAutoscaling) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMlAutoscaling) *string { return v.MinSizeResource }).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchMlAutoscalingOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchMlAutoscaling) *string { return v.PolicyOverrideJson }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchMlAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchMlAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchMlAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchMlAutoscalingPtrOutput) ToDeploymentElasticsearchMlAutoscalingPtrOutput() DeploymentElasticsearchMlAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchMlAutoscalingPtrOutput) ToDeploymentElasticsearchMlAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchMlAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchMlAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchMlAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchMlAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchMlAutoscalingPtrOutput) Elem() DeploymentElasticsearchMlAutoscalingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMlAutoscaling) DeploymentElasticsearchMlAutoscaling {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchMlAutoscaling
		return ret
	}).(DeploymentElasticsearchMlAutoscalingOutput)
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMlAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingPtrOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMlAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeResource
	}).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingPtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMlAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchMlAutoscalingPtrOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMlAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSizeResource
	}).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchMlAutoscalingPtrOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchMlAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.PolicyOverrideJson
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchRemoteCluster struct {
	// Alias for this Cross Cluster Search binding
	Alias string `pulumi:"alias"`
	// Remote deployment ID
	DeploymentId string  `pulumi:"deploymentId"`
	RefId        *string `pulumi:"refId"`
	// If true, skip the cluster during search when disconnected
	SkipUnavailable *bool `pulumi:"skipUnavailable"`
}

// DeploymentElasticsearchRemoteClusterInput is an input type that accepts DeploymentElasticsearchRemoteClusterArgs and DeploymentElasticsearchRemoteClusterOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchRemoteClusterInput` via:
//
//	DeploymentElasticsearchRemoteClusterArgs{...}
type DeploymentElasticsearchRemoteClusterInput interface {
	pulumi.Input

	ToDeploymentElasticsearchRemoteClusterOutput() DeploymentElasticsearchRemoteClusterOutput
	ToDeploymentElasticsearchRemoteClusterOutputWithContext(context.Context) DeploymentElasticsearchRemoteClusterOutput
}

type DeploymentElasticsearchRemoteClusterArgs struct {
	// Alias for this Cross Cluster Search binding
	Alias pulumi.StringInput `pulumi:"alias"`
	// Remote deployment ID
	DeploymentId pulumi.StringInput    `pulumi:"deploymentId"`
	RefId        pulumi.StringPtrInput `pulumi:"refId"`
	// If true, skip the cluster during search when disconnected
	SkipUnavailable pulumi.BoolPtrInput `pulumi:"skipUnavailable"`
}

func (DeploymentElasticsearchRemoteClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (i DeploymentElasticsearchRemoteClusterArgs) ToDeploymentElasticsearchRemoteClusterOutput() DeploymentElasticsearchRemoteClusterOutput {
	return i.ToDeploymentElasticsearchRemoteClusterOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchRemoteClusterArgs) ToDeploymentElasticsearchRemoteClusterOutputWithContext(ctx context.Context) DeploymentElasticsearchRemoteClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchRemoteClusterOutput)
}

func (i DeploymentElasticsearchRemoteClusterArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchRemoteCluster] {
	return pulumix.Output[DeploymentElasticsearchRemoteCluster]{
		OutputState: i.ToDeploymentElasticsearchRemoteClusterOutputWithContext(ctx).OutputState,
	}
}

// DeploymentElasticsearchRemoteClusterArrayInput is an input type that accepts DeploymentElasticsearchRemoteClusterArray and DeploymentElasticsearchRemoteClusterArrayOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchRemoteClusterArrayInput` via:
//
//	DeploymentElasticsearchRemoteClusterArray{ DeploymentElasticsearchRemoteClusterArgs{...} }
type DeploymentElasticsearchRemoteClusterArrayInput interface {
	pulumi.Input

	ToDeploymentElasticsearchRemoteClusterArrayOutput() DeploymentElasticsearchRemoteClusterArrayOutput
	ToDeploymentElasticsearchRemoteClusterArrayOutputWithContext(context.Context) DeploymentElasticsearchRemoteClusterArrayOutput
}

type DeploymentElasticsearchRemoteClusterArray []DeploymentElasticsearchRemoteClusterInput

func (DeploymentElasticsearchRemoteClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (i DeploymentElasticsearchRemoteClusterArray) ToDeploymentElasticsearchRemoteClusterArrayOutput() DeploymentElasticsearchRemoteClusterArrayOutput {
	return i.ToDeploymentElasticsearchRemoteClusterArrayOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchRemoteClusterArray) ToDeploymentElasticsearchRemoteClusterArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchRemoteClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchRemoteClusterArrayOutput)
}

func (i DeploymentElasticsearchRemoteClusterArray) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchRemoteCluster] {
	return pulumix.Output[[]DeploymentElasticsearchRemoteCluster]{
		OutputState: i.ToDeploymentElasticsearchRemoteClusterArrayOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchRemoteClusterOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchRemoteClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (o DeploymentElasticsearchRemoteClusterOutput) ToDeploymentElasticsearchRemoteClusterOutput() DeploymentElasticsearchRemoteClusterOutput {
	return o
}

func (o DeploymentElasticsearchRemoteClusterOutput) ToDeploymentElasticsearchRemoteClusterOutputWithContext(ctx context.Context) DeploymentElasticsearchRemoteClusterOutput {
	return o
}

func (o DeploymentElasticsearchRemoteClusterOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchRemoteCluster] {
	return pulumix.Output[DeploymentElasticsearchRemoteCluster]{
		OutputState: o.OutputState,
	}
}

// Alias for this Cross Cluster Search binding
func (o DeploymentElasticsearchRemoteClusterOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchRemoteCluster) string { return v.Alias }).(pulumi.StringOutput)
}

// Remote deployment ID
func (o DeploymentElasticsearchRemoteClusterOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchRemoteCluster) string { return v.DeploymentId }).(pulumi.StringOutput)
}

func (o DeploymentElasticsearchRemoteClusterOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchRemoteCluster) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

// If true, skip the cluster during search when disconnected
func (o DeploymentElasticsearchRemoteClusterOutput) SkipUnavailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchRemoteCluster) *bool { return v.SkipUnavailable }).(pulumi.BoolPtrOutput)
}

type DeploymentElasticsearchRemoteClusterArrayOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchRemoteClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchRemoteCluster)(nil)).Elem()
}

func (o DeploymentElasticsearchRemoteClusterArrayOutput) ToDeploymentElasticsearchRemoteClusterArrayOutput() DeploymentElasticsearchRemoteClusterArrayOutput {
	return o
}

func (o DeploymentElasticsearchRemoteClusterArrayOutput) ToDeploymentElasticsearchRemoteClusterArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchRemoteClusterArrayOutput {
	return o
}

func (o DeploymentElasticsearchRemoteClusterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchRemoteCluster] {
	return pulumix.Output[[]DeploymentElasticsearchRemoteCluster]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchRemoteClusterArrayOutput) Index(i pulumi.IntInput) DeploymentElasticsearchRemoteClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentElasticsearchRemoteCluster {
		return vs[0].([]DeploymentElasticsearchRemoteCluster)[vs[1].(int)]
	}).(DeploymentElasticsearchRemoteClusterOutput)
}

type DeploymentElasticsearchSnapshot struct {
	// Indicates if Snapshotting is enabled.
	Enabled bool `pulumi:"enabled"`
	// Snapshot repository configuration
	Repository *DeploymentElasticsearchSnapshotRepository `pulumi:"repository"`
}

// DeploymentElasticsearchSnapshotInput is an input type that accepts DeploymentElasticsearchSnapshotArgs and DeploymentElasticsearchSnapshotOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotInput` via:
//
//	DeploymentElasticsearchSnapshotArgs{...}
type DeploymentElasticsearchSnapshotInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotOutput() DeploymentElasticsearchSnapshotOutput
	ToDeploymentElasticsearchSnapshotOutputWithContext(context.Context) DeploymentElasticsearchSnapshotOutput
}

type DeploymentElasticsearchSnapshotArgs struct {
	// Indicates if Snapshotting is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Snapshot repository configuration
	Repository DeploymentElasticsearchSnapshotRepositoryPtrInput `pulumi:"repository"`
}

func (DeploymentElasticsearchSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshot)(nil)).Elem()
}

func (i DeploymentElasticsearchSnapshotArgs) ToDeploymentElasticsearchSnapshotOutput() DeploymentElasticsearchSnapshotOutput {
	return i.ToDeploymentElasticsearchSnapshotOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotArgs) ToDeploymentElasticsearchSnapshotOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotOutput)
}

func (i DeploymentElasticsearchSnapshotArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshot] {
	return pulumix.Output[DeploymentElasticsearchSnapshot]{
		OutputState: i.ToDeploymentElasticsearchSnapshotOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchSnapshotArgs) ToDeploymentElasticsearchSnapshotPtrOutput() DeploymentElasticsearchSnapshotPtrOutput {
	return i.ToDeploymentElasticsearchSnapshotPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotArgs) ToDeploymentElasticsearchSnapshotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotOutput).ToDeploymentElasticsearchSnapshotPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchSnapshotPtrInput is an input type that accepts DeploymentElasticsearchSnapshotArgs, DeploymentElasticsearchSnapshotPtr and DeploymentElasticsearchSnapshotPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotPtrInput` via:
//
//	        DeploymentElasticsearchSnapshotArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchSnapshotPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotPtrOutput() DeploymentElasticsearchSnapshotPtrOutput
	ToDeploymentElasticsearchSnapshotPtrOutputWithContext(context.Context) DeploymentElasticsearchSnapshotPtrOutput
}

type deploymentElasticsearchSnapshotPtrType DeploymentElasticsearchSnapshotArgs

func DeploymentElasticsearchSnapshotPtr(v *DeploymentElasticsearchSnapshotArgs) DeploymentElasticsearchSnapshotPtrInput {
	return (*deploymentElasticsearchSnapshotPtrType)(v)
}

func (*deploymentElasticsearchSnapshotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshot)(nil)).Elem()
}

func (i *deploymentElasticsearchSnapshotPtrType) ToDeploymentElasticsearchSnapshotPtrOutput() DeploymentElasticsearchSnapshotPtrOutput {
	return i.ToDeploymentElasticsearchSnapshotPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchSnapshotPtrType) ToDeploymentElasticsearchSnapshotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotPtrOutput)
}

func (i *deploymentElasticsearchSnapshotPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshot] {
	return pulumix.Output[*DeploymentElasticsearchSnapshot]{
		OutputState: i.ToDeploymentElasticsearchSnapshotPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchSnapshotOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshot)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotOutput) ToDeploymentElasticsearchSnapshotOutput() DeploymentElasticsearchSnapshotOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotOutput) ToDeploymentElasticsearchSnapshotOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotOutput) ToDeploymentElasticsearchSnapshotPtrOutput() DeploymentElasticsearchSnapshotPtrOutput {
	return o.ToDeploymentElasticsearchSnapshotPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchSnapshotOutput) ToDeploymentElasticsearchSnapshotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchSnapshot) *DeploymentElasticsearchSnapshot {
		return &v
	}).(DeploymentElasticsearchSnapshotPtrOutput)
}

func (o DeploymentElasticsearchSnapshotOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshot] {
	return pulumix.Output[DeploymentElasticsearchSnapshot]{
		OutputState: o.OutputState,
	}
}

// Indicates if Snapshotting is enabled.
func (o DeploymentElasticsearchSnapshotOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DeploymentElasticsearchSnapshot) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Snapshot repository configuration
func (o DeploymentElasticsearchSnapshotOutput) Repository() DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchSnapshot) *DeploymentElasticsearchSnapshotRepository {
		return v.Repository
	}).(DeploymentElasticsearchSnapshotRepositoryPtrOutput)
}

type DeploymentElasticsearchSnapshotPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshot)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotPtrOutput) ToDeploymentElasticsearchSnapshotPtrOutput() DeploymentElasticsearchSnapshotPtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotPtrOutput) ToDeploymentElasticsearchSnapshotPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotPtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshot] {
	return pulumix.Output[*DeploymentElasticsearchSnapshot]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchSnapshotPtrOutput) Elem() DeploymentElasticsearchSnapshotOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshot) DeploymentElasticsearchSnapshot {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchSnapshot
		return ret
	}).(DeploymentElasticsearchSnapshotOutput)
}

// Indicates if Snapshotting is enabled.
func (o DeploymentElasticsearchSnapshotPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshot) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Snapshot repository configuration
func (o DeploymentElasticsearchSnapshotPtrOutput) Repository() DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshot) *DeploymentElasticsearchSnapshotRepository {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(DeploymentElasticsearchSnapshotRepositoryPtrOutput)
}

type DeploymentElasticsearchSnapshotRepository struct {
	// Cluster snapshot reference repository settings, containing the repository name in ECE fashion
	Reference *DeploymentElasticsearchSnapshotRepositoryReference `pulumi:"reference"`
}

// DeploymentElasticsearchSnapshotRepositoryInput is an input type that accepts DeploymentElasticsearchSnapshotRepositoryArgs and DeploymentElasticsearchSnapshotRepositoryOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotRepositoryInput` via:
//
//	DeploymentElasticsearchSnapshotRepositoryArgs{...}
type DeploymentElasticsearchSnapshotRepositoryInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotRepositoryOutput() DeploymentElasticsearchSnapshotRepositoryOutput
	ToDeploymentElasticsearchSnapshotRepositoryOutputWithContext(context.Context) DeploymentElasticsearchSnapshotRepositoryOutput
}

type DeploymentElasticsearchSnapshotRepositoryArgs struct {
	// Cluster snapshot reference repository settings, containing the repository name in ECE fashion
	Reference DeploymentElasticsearchSnapshotRepositoryReferencePtrInput `pulumi:"reference"`
}

func (DeploymentElasticsearchSnapshotRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshotRepository)(nil)).Elem()
}

func (i DeploymentElasticsearchSnapshotRepositoryArgs) ToDeploymentElasticsearchSnapshotRepositoryOutput() DeploymentElasticsearchSnapshotRepositoryOutput {
	return i.ToDeploymentElasticsearchSnapshotRepositoryOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotRepositoryArgs) ToDeploymentElasticsearchSnapshotRepositoryOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotRepositoryOutput)
}

func (i DeploymentElasticsearchSnapshotRepositoryArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshotRepository] {
	return pulumix.Output[DeploymentElasticsearchSnapshotRepository]{
		OutputState: i.ToDeploymentElasticsearchSnapshotRepositoryOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchSnapshotRepositoryArgs) ToDeploymentElasticsearchSnapshotRepositoryPtrOutput() DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return i.ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotRepositoryArgs) ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotRepositoryOutput).ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchSnapshotRepositoryPtrInput is an input type that accepts DeploymentElasticsearchSnapshotRepositoryArgs, DeploymentElasticsearchSnapshotRepositoryPtr and DeploymentElasticsearchSnapshotRepositoryPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotRepositoryPtrInput` via:
//
//	        DeploymentElasticsearchSnapshotRepositoryArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchSnapshotRepositoryPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotRepositoryPtrOutput() DeploymentElasticsearchSnapshotRepositoryPtrOutput
	ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(context.Context) DeploymentElasticsearchSnapshotRepositoryPtrOutput
}

type deploymentElasticsearchSnapshotRepositoryPtrType DeploymentElasticsearchSnapshotRepositoryArgs

func DeploymentElasticsearchSnapshotRepositoryPtr(v *DeploymentElasticsearchSnapshotRepositoryArgs) DeploymentElasticsearchSnapshotRepositoryPtrInput {
	return (*deploymentElasticsearchSnapshotRepositoryPtrType)(v)
}

func (*deploymentElasticsearchSnapshotRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshotRepository)(nil)).Elem()
}

func (i *deploymentElasticsearchSnapshotRepositoryPtrType) ToDeploymentElasticsearchSnapshotRepositoryPtrOutput() DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return i.ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchSnapshotRepositoryPtrType) ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotRepositoryPtrOutput)
}

func (i *deploymentElasticsearchSnapshotRepositoryPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshotRepository] {
	return pulumix.Output[*DeploymentElasticsearchSnapshotRepository]{
		OutputState: i.ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchSnapshotRepositoryOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshotRepository)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotRepositoryOutput) ToDeploymentElasticsearchSnapshotRepositoryOutput() DeploymentElasticsearchSnapshotRepositoryOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryOutput) ToDeploymentElasticsearchSnapshotRepositoryOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryOutput) ToDeploymentElasticsearchSnapshotRepositoryPtrOutput() DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return o.ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchSnapshotRepositoryOutput) ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchSnapshotRepository) *DeploymentElasticsearchSnapshotRepository {
		return &v
	}).(DeploymentElasticsearchSnapshotRepositoryPtrOutput)
}

func (o DeploymentElasticsearchSnapshotRepositoryOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshotRepository] {
	return pulumix.Output[DeploymentElasticsearchSnapshotRepository]{
		OutputState: o.OutputState,
	}
}

// Cluster snapshot reference repository settings, containing the repository name in ECE fashion
func (o DeploymentElasticsearchSnapshotRepositoryOutput) Reference() DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchSnapshotRepository) *DeploymentElasticsearchSnapshotRepositoryReference {
		return v.Reference
	}).(DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput)
}

type DeploymentElasticsearchSnapshotRepositoryPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshotRepository)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotRepositoryPtrOutput) ToDeploymentElasticsearchSnapshotRepositoryPtrOutput() DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryPtrOutput) ToDeploymentElasticsearchSnapshotRepositoryPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryPtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshotRepository] {
	return pulumix.Output[*DeploymentElasticsearchSnapshotRepository]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchSnapshotRepositoryPtrOutput) Elem() DeploymentElasticsearchSnapshotRepositoryOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshotRepository) DeploymentElasticsearchSnapshotRepository {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchSnapshotRepository
		return ret
	}).(DeploymentElasticsearchSnapshotRepositoryOutput)
}

// Cluster snapshot reference repository settings, containing the repository name in ECE fashion
func (o DeploymentElasticsearchSnapshotRepositoryPtrOutput) Reference() DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshotRepository) *DeploymentElasticsearchSnapshotRepositoryReference {
		if v == nil {
			return nil
		}
		return v.Reference
	}).(DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput)
}

type DeploymentElasticsearchSnapshotRepositoryReference struct {
	// ECE snapshot repository name, from the '/platform/configuration/snapshots/repositories' endpoint
	RepositoryName string `pulumi:"repositoryName"`
}

// DeploymentElasticsearchSnapshotRepositoryReferenceInput is an input type that accepts DeploymentElasticsearchSnapshotRepositoryReferenceArgs and DeploymentElasticsearchSnapshotRepositoryReferenceOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotRepositoryReferenceInput` via:
//
//	DeploymentElasticsearchSnapshotRepositoryReferenceArgs{...}
type DeploymentElasticsearchSnapshotRepositoryReferenceInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotRepositoryReferenceOutput() DeploymentElasticsearchSnapshotRepositoryReferenceOutput
	ToDeploymentElasticsearchSnapshotRepositoryReferenceOutputWithContext(context.Context) DeploymentElasticsearchSnapshotRepositoryReferenceOutput
}

type DeploymentElasticsearchSnapshotRepositoryReferenceArgs struct {
	// ECE snapshot repository name, from the '/platform/configuration/snapshots/repositories' endpoint
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
}

func (DeploymentElasticsearchSnapshotRepositoryReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshotRepositoryReference)(nil)).Elem()
}

func (i DeploymentElasticsearchSnapshotRepositoryReferenceArgs) ToDeploymentElasticsearchSnapshotRepositoryReferenceOutput() DeploymentElasticsearchSnapshotRepositoryReferenceOutput {
	return i.ToDeploymentElasticsearchSnapshotRepositoryReferenceOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotRepositoryReferenceArgs) ToDeploymentElasticsearchSnapshotRepositoryReferenceOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotRepositoryReferenceOutput)
}

func (i DeploymentElasticsearchSnapshotRepositoryReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshotRepositoryReference] {
	return pulumix.Output[DeploymentElasticsearchSnapshotRepositoryReference]{
		OutputState: i.ToDeploymentElasticsearchSnapshotRepositoryReferenceOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchSnapshotRepositoryReferenceArgs) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutput() DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return i.ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotRepositoryReferenceArgs) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotRepositoryReferenceOutput).ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(ctx)
}

// DeploymentElasticsearchSnapshotRepositoryReferencePtrInput is an input type that accepts DeploymentElasticsearchSnapshotRepositoryReferenceArgs, DeploymentElasticsearchSnapshotRepositoryReferencePtr and DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotRepositoryReferencePtrInput` via:
//
//	        DeploymentElasticsearchSnapshotRepositoryReferenceArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchSnapshotRepositoryReferencePtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutput() DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput
	ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(context.Context) DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput
}

type deploymentElasticsearchSnapshotRepositoryReferencePtrType DeploymentElasticsearchSnapshotRepositoryReferenceArgs

func DeploymentElasticsearchSnapshotRepositoryReferencePtr(v *DeploymentElasticsearchSnapshotRepositoryReferenceArgs) DeploymentElasticsearchSnapshotRepositoryReferencePtrInput {
	return (*deploymentElasticsearchSnapshotRepositoryReferencePtrType)(v)
}

func (*deploymentElasticsearchSnapshotRepositoryReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshotRepositoryReference)(nil)).Elem()
}

func (i *deploymentElasticsearchSnapshotRepositoryReferencePtrType) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutput() DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return i.ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchSnapshotRepositoryReferencePtrType) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput)
}

func (i *deploymentElasticsearchSnapshotRepositoryReferencePtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshotRepositoryReference] {
	return pulumix.Output[*DeploymentElasticsearchSnapshotRepositoryReference]{
		OutputState: i.ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchSnapshotRepositoryReferenceOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotRepositoryReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshotRepositoryReference)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotRepositoryReferenceOutput) ToDeploymentElasticsearchSnapshotRepositoryReferenceOutput() DeploymentElasticsearchSnapshotRepositoryReferenceOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryReferenceOutput) ToDeploymentElasticsearchSnapshotRepositoryReferenceOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryReferenceOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryReferenceOutput) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutput() DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return o.ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchSnapshotRepositoryReferenceOutput) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchSnapshotRepositoryReference) *DeploymentElasticsearchSnapshotRepositoryReference {
		return &v
	}).(DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput)
}

func (o DeploymentElasticsearchSnapshotRepositoryReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshotRepositoryReference] {
	return pulumix.Output[DeploymentElasticsearchSnapshotRepositoryReference]{
		OutputState: o.OutputState,
	}
}

// ECE snapshot repository name, from the '/platform/configuration/snapshots/repositories' endpoint
func (o DeploymentElasticsearchSnapshotRepositoryReferenceOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchSnapshotRepositoryReference) string { return v.RepositoryName }).(pulumi.StringOutput)
}

type DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshotRepositoryReference)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutput() DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput) ToDeploymentElasticsearchSnapshotRepositoryReferencePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshotRepositoryReference] {
	return pulumix.Output[*DeploymentElasticsearchSnapshotRepositoryReference]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput) Elem() DeploymentElasticsearchSnapshotRepositoryReferenceOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshotRepositoryReference) DeploymentElasticsearchSnapshotRepositoryReference {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchSnapshotRepositoryReference
		return ret
	}).(DeploymentElasticsearchSnapshotRepositoryReferenceOutput)
}

// ECE snapshot repository name, from the '/platform/configuration/snapshots/repositories' endpoint
func (o DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshotRepositoryReference) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchSnapshotSource struct {
	// Name of the snapshot to restore. Use '**latest_success**' to get the most recent successful snapshot.
	SnapshotName *string `pulumi:"snapshotName"`
	// ID of the Elasticsearch cluster that will be used as the source of the snapshot
	SourceElasticsearchClusterId string `pulumi:"sourceElasticsearchClusterId"`
}

// DeploymentElasticsearchSnapshotSourceInput is an input type that accepts DeploymentElasticsearchSnapshotSourceArgs and DeploymentElasticsearchSnapshotSourceOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotSourceInput` via:
//
//	DeploymentElasticsearchSnapshotSourceArgs{...}
type DeploymentElasticsearchSnapshotSourceInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotSourceOutput() DeploymentElasticsearchSnapshotSourceOutput
	ToDeploymentElasticsearchSnapshotSourceOutputWithContext(context.Context) DeploymentElasticsearchSnapshotSourceOutput
}

type DeploymentElasticsearchSnapshotSourceArgs struct {
	// Name of the snapshot to restore. Use '**latest_success**' to get the most recent successful snapshot.
	SnapshotName pulumi.StringPtrInput `pulumi:"snapshotName"`
	// ID of the Elasticsearch cluster that will be used as the source of the snapshot
	SourceElasticsearchClusterId pulumi.StringInput `pulumi:"sourceElasticsearchClusterId"`
}

func (DeploymentElasticsearchSnapshotSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (i DeploymentElasticsearchSnapshotSourceArgs) ToDeploymentElasticsearchSnapshotSourceOutput() DeploymentElasticsearchSnapshotSourceOutput {
	return i.ToDeploymentElasticsearchSnapshotSourceOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotSourceArgs) ToDeploymentElasticsearchSnapshotSourceOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotSourceOutput)
}

func (i DeploymentElasticsearchSnapshotSourceArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshotSource] {
	return pulumix.Output[DeploymentElasticsearchSnapshotSource]{
		OutputState: i.ToDeploymentElasticsearchSnapshotSourceOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchSnapshotSourceArgs) ToDeploymentElasticsearchSnapshotSourcePtrOutput() DeploymentElasticsearchSnapshotSourcePtrOutput {
	return i.ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchSnapshotSourceArgs) ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotSourceOutput).ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx)
}

// DeploymentElasticsearchSnapshotSourcePtrInput is an input type that accepts DeploymentElasticsearchSnapshotSourceArgs, DeploymentElasticsearchSnapshotSourcePtr and DeploymentElasticsearchSnapshotSourcePtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchSnapshotSourcePtrInput` via:
//
//	        DeploymentElasticsearchSnapshotSourceArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchSnapshotSourcePtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchSnapshotSourcePtrOutput() DeploymentElasticsearchSnapshotSourcePtrOutput
	ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Context) DeploymentElasticsearchSnapshotSourcePtrOutput
}

type deploymentElasticsearchSnapshotSourcePtrType DeploymentElasticsearchSnapshotSourceArgs

func DeploymentElasticsearchSnapshotSourcePtr(v *DeploymentElasticsearchSnapshotSourceArgs) DeploymentElasticsearchSnapshotSourcePtrInput {
	return (*deploymentElasticsearchSnapshotSourcePtrType)(v)
}

func (*deploymentElasticsearchSnapshotSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (i *deploymentElasticsearchSnapshotSourcePtrType) ToDeploymentElasticsearchSnapshotSourcePtrOutput() DeploymentElasticsearchSnapshotSourcePtrOutput {
	return i.ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchSnapshotSourcePtrType) ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchSnapshotSourcePtrOutput)
}

func (i *deploymentElasticsearchSnapshotSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshotSource] {
	return pulumix.Output[*DeploymentElasticsearchSnapshotSource]{
		OutputState: i.ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchSnapshotSourceOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotSourceOutput) ToDeploymentElasticsearchSnapshotSourceOutput() DeploymentElasticsearchSnapshotSourceOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotSourceOutput) ToDeploymentElasticsearchSnapshotSourceOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotSourceOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotSourceOutput) ToDeploymentElasticsearchSnapshotSourcePtrOutput() DeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchSnapshotSourceOutput) ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchSnapshotSource) *DeploymentElasticsearchSnapshotSource {
		return &v
	}).(DeploymentElasticsearchSnapshotSourcePtrOutput)
}

func (o DeploymentElasticsearchSnapshotSourceOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchSnapshotSource] {
	return pulumix.Output[DeploymentElasticsearchSnapshotSource]{
		OutputState: o.OutputState,
	}
}

// Name of the snapshot to restore. Use '**latest_success**' to get the most recent successful snapshot.
func (o DeploymentElasticsearchSnapshotSourceOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchSnapshotSource) *string { return v.SnapshotName }).(pulumi.StringPtrOutput)
}

// ID of the Elasticsearch cluster that will be used as the source of the snapshot
func (o DeploymentElasticsearchSnapshotSourceOutput) SourceElasticsearchClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchSnapshotSource) string { return v.SourceElasticsearchClusterId }).(pulumi.StringOutput)
}

type DeploymentElasticsearchSnapshotSourcePtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchSnapshotSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchSnapshotSource)(nil)).Elem()
}

func (o DeploymentElasticsearchSnapshotSourcePtrOutput) ToDeploymentElasticsearchSnapshotSourcePtrOutput() DeploymentElasticsearchSnapshotSourcePtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotSourcePtrOutput) ToDeploymentElasticsearchSnapshotSourcePtrOutputWithContext(ctx context.Context) DeploymentElasticsearchSnapshotSourcePtrOutput {
	return o
}

func (o DeploymentElasticsearchSnapshotSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchSnapshotSource] {
	return pulumix.Output[*DeploymentElasticsearchSnapshotSource]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchSnapshotSourcePtrOutput) Elem() DeploymentElasticsearchSnapshotSourceOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshotSource) DeploymentElasticsearchSnapshotSource {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchSnapshotSource
		return ret
	}).(DeploymentElasticsearchSnapshotSourceOutput)
}

// Name of the snapshot to restore. Use '**latest_success**' to get the most recent successful snapshot.
func (o DeploymentElasticsearchSnapshotSourcePtrOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshotSource) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotName
	}).(pulumi.StringPtrOutput)
}

// ID of the Elasticsearch cluster that will be used as the source of the snapshot
func (o DeploymentElasticsearchSnapshotSourcePtrOutput) SourceElasticsearchClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchSnapshotSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceElasticsearchClusterId
	}).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchTrustAccount struct {
	// The ID of the Account.
	AccountId string `pulumi:"accountId"`
	// If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
	TrustAll bool `pulumi:"trustAll"`
	// The list of clusters to trust. Only used when `trustAll` is false.
	TrustAllowlists []string `pulumi:"trustAllowlists"`
}

// DeploymentElasticsearchTrustAccountInput is an input type that accepts DeploymentElasticsearchTrustAccountArgs and DeploymentElasticsearchTrustAccountOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchTrustAccountInput` via:
//
//	DeploymentElasticsearchTrustAccountArgs{...}
type DeploymentElasticsearchTrustAccountInput interface {
	pulumi.Input

	ToDeploymentElasticsearchTrustAccountOutput() DeploymentElasticsearchTrustAccountOutput
	ToDeploymentElasticsearchTrustAccountOutputWithContext(context.Context) DeploymentElasticsearchTrustAccountOutput
}

type DeploymentElasticsearchTrustAccountArgs struct {
	// The ID of the Account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
	TrustAll pulumi.BoolInput `pulumi:"trustAll"`
	// The list of clusters to trust. Only used when `trustAll` is false.
	TrustAllowlists pulumi.StringArrayInput `pulumi:"trustAllowlists"`
}

func (DeploymentElasticsearchTrustAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchTrustAccount)(nil)).Elem()
}

func (i DeploymentElasticsearchTrustAccountArgs) ToDeploymentElasticsearchTrustAccountOutput() DeploymentElasticsearchTrustAccountOutput {
	return i.ToDeploymentElasticsearchTrustAccountOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchTrustAccountArgs) ToDeploymentElasticsearchTrustAccountOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchTrustAccountOutput)
}

func (i DeploymentElasticsearchTrustAccountArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchTrustAccount] {
	return pulumix.Output[DeploymentElasticsearchTrustAccount]{
		OutputState: i.ToDeploymentElasticsearchTrustAccountOutputWithContext(ctx).OutputState,
	}
}

// DeploymentElasticsearchTrustAccountArrayInput is an input type that accepts DeploymentElasticsearchTrustAccountArray and DeploymentElasticsearchTrustAccountArrayOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchTrustAccountArrayInput` via:
//
//	DeploymentElasticsearchTrustAccountArray{ DeploymentElasticsearchTrustAccountArgs{...} }
type DeploymentElasticsearchTrustAccountArrayInput interface {
	pulumi.Input

	ToDeploymentElasticsearchTrustAccountArrayOutput() DeploymentElasticsearchTrustAccountArrayOutput
	ToDeploymentElasticsearchTrustAccountArrayOutputWithContext(context.Context) DeploymentElasticsearchTrustAccountArrayOutput
}

type DeploymentElasticsearchTrustAccountArray []DeploymentElasticsearchTrustAccountInput

func (DeploymentElasticsearchTrustAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchTrustAccount)(nil)).Elem()
}

func (i DeploymentElasticsearchTrustAccountArray) ToDeploymentElasticsearchTrustAccountArrayOutput() DeploymentElasticsearchTrustAccountArrayOutput {
	return i.ToDeploymentElasticsearchTrustAccountArrayOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchTrustAccountArray) ToDeploymentElasticsearchTrustAccountArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchTrustAccountArrayOutput)
}

func (i DeploymentElasticsearchTrustAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchTrustAccount] {
	return pulumix.Output[[]DeploymentElasticsearchTrustAccount]{
		OutputState: i.ToDeploymentElasticsearchTrustAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchTrustAccountOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchTrustAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchTrustAccount)(nil)).Elem()
}

func (o DeploymentElasticsearchTrustAccountOutput) ToDeploymentElasticsearchTrustAccountOutput() DeploymentElasticsearchTrustAccountOutput {
	return o
}

func (o DeploymentElasticsearchTrustAccountOutput) ToDeploymentElasticsearchTrustAccountOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustAccountOutput {
	return o
}

func (o DeploymentElasticsearchTrustAccountOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchTrustAccount] {
	return pulumix.Output[DeploymentElasticsearchTrustAccount]{
		OutputState: o.OutputState,
	}
}

// The ID of the Account.
func (o DeploymentElasticsearchTrustAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchTrustAccount) string { return v.AccountId }).(pulumi.StringOutput)
}

// If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
func (o DeploymentElasticsearchTrustAccountOutput) TrustAll() pulumi.BoolOutput {
	return o.ApplyT(func(v DeploymentElasticsearchTrustAccount) bool { return v.TrustAll }).(pulumi.BoolOutput)
}

// The list of clusters to trust. Only used when `trustAll` is false.
func (o DeploymentElasticsearchTrustAccountOutput) TrustAllowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchTrustAccount) []string { return v.TrustAllowlists }).(pulumi.StringArrayOutput)
}

type DeploymentElasticsearchTrustAccountArrayOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchTrustAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchTrustAccount)(nil)).Elem()
}

func (o DeploymentElasticsearchTrustAccountArrayOutput) ToDeploymentElasticsearchTrustAccountArrayOutput() DeploymentElasticsearchTrustAccountArrayOutput {
	return o
}

func (o DeploymentElasticsearchTrustAccountArrayOutput) ToDeploymentElasticsearchTrustAccountArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustAccountArrayOutput {
	return o
}

func (o DeploymentElasticsearchTrustAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchTrustAccount] {
	return pulumix.Output[[]DeploymentElasticsearchTrustAccount]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchTrustAccountArrayOutput) Index(i pulumi.IntInput) DeploymentElasticsearchTrustAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentElasticsearchTrustAccount {
		return vs[0].([]DeploymentElasticsearchTrustAccount)[vs[1].(int)]
	}).(DeploymentElasticsearchTrustAccountOutput)
}

type DeploymentElasticsearchTrustExternal struct {
	// The ID of the external trust relationship.
	RelationshipId string `pulumi:"relationshipId"`
	// If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
	TrustAll bool `pulumi:"trustAll"`
	// The list of clusters to trust. Only used when `trustAll` is false.
	TrustAllowlists []string `pulumi:"trustAllowlists"`
}

// DeploymentElasticsearchTrustExternalInput is an input type that accepts DeploymentElasticsearchTrustExternalArgs and DeploymentElasticsearchTrustExternalOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchTrustExternalInput` via:
//
//	DeploymentElasticsearchTrustExternalArgs{...}
type DeploymentElasticsearchTrustExternalInput interface {
	pulumi.Input

	ToDeploymentElasticsearchTrustExternalOutput() DeploymentElasticsearchTrustExternalOutput
	ToDeploymentElasticsearchTrustExternalOutputWithContext(context.Context) DeploymentElasticsearchTrustExternalOutput
}

type DeploymentElasticsearchTrustExternalArgs struct {
	// The ID of the external trust relationship.
	RelationshipId pulumi.StringInput `pulumi:"relationshipId"`
	// If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
	TrustAll pulumi.BoolInput `pulumi:"trustAll"`
	// The list of clusters to trust. Only used when `trustAll` is false.
	TrustAllowlists pulumi.StringArrayInput `pulumi:"trustAllowlists"`
}

func (DeploymentElasticsearchTrustExternalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchTrustExternal)(nil)).Elem()
}

func (i DeploymentElasticsearchTrustExternalArgs) ToDeploymentElasticsearchTrustExternalOutput() DeploymentElasticsearchTrustExternalOutput {
	return i.ToDeploymentElasticsearchTrustExternalOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchTrustExternalArgs) ToDeploymentElasticsearchTrustExternalOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustExternalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchTrustExternalOutput)
}

func (i DeploymentElasticsearchTrustExternalArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchTrustExternal] {
	return pulumix.Output[DeploymentElasticsearchTrustExternal]{
		OutputState: i.ToDeploymentElasticsearchTrustExternalOutputWithContext(ctx).OutputState,
	}
}

// DeploymentElasticsearchTrustExternalArrayInput is an input type that accepts DeploymentElasticsearchTrustExternalArray and DeploymentElasticsearchTrustExternalArrayOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchTrustExternalArrayInput` via:
//
//	DeploymentElasticsearchTrustExternalArray{ DeploymentElasticsearchTrustExternalArgs{...} }
type DeploymentElasticsearchTrustExternalArrayInput interface {
	pulumi.Input

	ToDeploymentElasticsearchTrustExternalArrayOutput() DeploymentElasticsearchTrustExternalArrayOutput
	ToDeploymentElasticsearchTrustExternalArrayOutputWithContext(context.Context) DeploymentElasticsearchTrustExternalArrayOutput
}

type DeploymentElasticsearchTrustExternalArray []DeploymentElasticsearchTrustExternalInput

func (DeploymentElasticsearchTrustExternalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchTrustExternal)(nil)).Elem()
}

func (i DeploymentElasticsearchTrustExternalArray) ToDeploymentElasticsearchTrustExternalArrayOutput() DeploymentElasticsearchTrustExternalArrayOutput {
	return i.ToDeploymentElasticsearchTrustExternalArrayOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchTrustExternalArray) ToDeploymentElasticsearchTrustExternalArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustExternalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchTrustExternalArrayOutput)
}

func (i DeploymentElasticsearchTrustExternalArray) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchTrustExternal] {
	return pulumix.Output[[]DeploymentElasticsearchTrustExternal]{
		OutputState: i.ToDeploymentElasticsearchTrustExternalArrayOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchTrustExternalOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchTrustExternalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchTrustExternal)(nil)).Elem()
}

func (o DeploymentElasticsearchTrustExternalOutput) ToDeploymentElasticsearchTrustExternalOutput() DeploymentElasticsearchTrustExternalOutput {
	return o
}

func (o DeploymentElasticsearchTrustExternalOutput) ToDeploymentElasticsearchTrustExternalOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustExternalOutput {
	return o
}

func (o DeploymentElasticsearchTrustExternalOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchTrustExternal] {
	return pulumix.Output[DeploymentElasticsearchTrustExternal]{
		OutputState: o.OutputState,
	}
}

// The ID of the external trust relationship.
func (o DeploymentElasticsearchTrustExternalOutput) RelationshipId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentElasticsearchTrustExternal) string { return v.RelationshipId }).(pulumi.StringOutput)
}

// If true, all clusters in this account will by default be trusted and the `trustAllowlist` is ignored.
func (o DeploymentElasticsearchTrustExternalOutput) TrustAll() pulumi.BoolOutput {
	return o.ApplyT(func(v DeploymentElasticsearchTrustExternal) bool { return v.TrustAll }).(pulumi.BoolOutput)
}

// The list of clusters to trust. Only used when `trustAll` is false.
func (o DeploymentElasticsearchTrustExternalOutput) TrustAllowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchTrustExternal) []string { return v.TrustAllowlists }).(pulumi.StringArrayOutput)
}

type DeploymentElasticsearchTrustExternalArrayOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchTrustExternalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentElasticsearchTrustExternal)(nil)).Elem()
}

func (o DeploymentElasticsearchTrustExternalArrayOutput) ToDeploymentElasticsearchTrustExternalArrayOutput() DeploymentElasticsearchTrustExternalArrayOutput {
	return o
}

func (o DeploymentElasticsearchTrustExternalArrayOutput) ToDeploymentElasticsearchTrustExternalArrayOutputWithContext(ctx context.Context) DeploymentElasticsearchTrustExternalArrayOutput {
	return o
}

func (o DeploymentElasticsearchTrustExternalArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentElasticsearchTrustExternal] {
	return pulumix.Output[[]DeploymentElasticsearchTrustExternal]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchTrustExternalArrayOutput) Index(i pulumi.IntInput) DeploymentElasticsearchTrustExternalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentElasticsearchTrustExternal {
		return vs[0].([]DeploymentElasticsearchTrustExternal)[vs[1].(int)]
	}).(DeploymentElasticsearchTrustExternalOutput)
}

type DeploymentElasticsearchWarm struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchWarmAutoscaling `pulumi:"autoscaling"`
	InstanceConfigurationId *string                                `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles []string `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData *string `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest *string `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster *string `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl *string `pulumi:"nodeTypeMl"`
	Size       *string `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentElasticsearchWarmInput is an input type that accepts DeploymentElasticsearchWarmArgs and DeploymentElasticsearchWarmOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchWarmInput` via:
//
//	DeploymentElasticsearchWarmArgs{...}
type DeploymentElasticsearchWarmInput interface {
	pulumi.Input

	ToDeploymentElasticsearchWarmOutput() DeploymentElasticsearchWarmOutput
	ToDeploymentElasticsearchWarmOutputWithContext(context.Context) DeploymentElasticsearchWarmOutput
}

type DeploymentElasticsearchWarmArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscaling             DeploymentElasticsearchWarmAutoscalingInput `pulumi:"autoscaling"`
	InstanceConfigurationId pulumi.StringPtrInput                       `pulumi:"instanceConfigurationId"`
	// The computed list of node roles for the current topology element
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// The node type for the Elasticsearch Topology element (data node)
	NodeTypeData pulumi.StringPtrInput `pulumi:"nodeTypeData"`
	// The node type for the Elasticsearch Topology element (ingest node)
	NodeTypeIngest pulumi.StringPtrInput `pulumi:"nodeTypeIngest"`
	// The node type for the Elasticsearch Topology element (master node)
	NodeTypeMaster pulumi.StringPtrInput `pulumi:"nodeTypeMaster"`
	// The node type for the Elasticsearch Topology element (machine learning node)
	NodeTypeMl pulumi.StringPtrInput `pulumi:"nodeTypeMl"`
	Size       pulumi.StringPtrInput `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentElasticsearchWarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchWarm)(nil)).Elem()
}

func (i DeploymentElasticsearchWarmArgs) ToDeploymentElasticsearchWarmOutput() DeploymentElasticsearchWarmOutput {
	return i.ToDeploymentElasticsearchWarmOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchWarmArgs) ToDeploymentElasticsearchWarmOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchWarmOutput)
}

func (i DeploymentElasticsearchWarmArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchWarm] {
	return pulumix.Output[DeploymentElasticsearchWarm]{
		OutputState: i.ToDeploymentElasticsearchWarmOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchWarmArgs) ToDeploymentElasticsearchWarmPtrOutput() DeploymentElasticsearchWarmPtrOutput {
	return i.ToDeploymentElasticsearchWarmPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchWarmArgs) ToDeploymentElasticsearchWarmPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchWarmOutput).ToDeploymentElasticsearchWarmPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchWarmPtrInput is an input type that accepts DeploymentElasticsearchWarmArgs, DeploymentElasticsearchWarmPtr and DeploymentElasticsearchWarmPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchWarmPtrInput` via:
//
//	        DeploymentElasticsearchWarmArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchWarmPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchWarmPtrOutput() DeploymentElasticsearchWarmPtrOutput
	ToDeploymentElasticsearchWarmPtrOutputWithContext(context.Context) DeploymentElasticsearchWarmPtrOutput
}

type deploymentElasticsearchWarmPtrType DeploymentElasticsearchWarmArgs

func DeploymentElasticsearchWarmPtr(v *DeploymentElasticsearchWarmArgs) DeploymentElasticsearchWarmPtrInput {
	return (*deploymentElasticsearchWarmPtrType)(v)
}

func (*deploymentElasticsearchWarmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchWarm)(nil)).Elem()
}

func (i *deploymentElasticsearchWarmPtrType) ToDeploymentElasticsearchWarmPtrOutput() DeploymentElasticsearchWarmPtrOutput {
	return i.ToDeploymentElasticsearchWarmPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchWarmPtrType) ToDeploymentElasticsearchWarmPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchWarmPtrOutput)
}

func (i *deploymentElasticsearchWarmPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchWarm] {
	return pulumix.Output[*DeploymentElasticsearchWarm]{
		OutputState: i.ToDeploymentElasticsearchWarmPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchWarmOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchWarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchWarm)(nil)).Elem()
}

func (o DeploymentElasticsearchWarmOutput) ToDeploymentElasticsearchWarmOutput() DeploymentElasticsearchWarmOutput {
	return o
}

func (o DeploymentElasticsearchWarmOutput) ToDeploymentElasticsearchWarmOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmOutput {
	return o
}

func (o DeploymentElasticsearchWarmOutput) ToDeploymentElasticsearchWarmPtrOutput() DeploymentElasticsearchWarmPtrOutput {
	return o.ToDeploymentElasticsearchWarmPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchWarmOutput) ToDeploymentElasticsearchWarmPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchWarm) *DeploymentElasticsearchWarm {
		return &v
	}).(DeploymentElasticsearchWarmPtrOutput)
}

func (o DeploymentElasticsearchWarmOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchWarm] {
	return pulumix.Output[DeploymentElasticsearchWarm]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchWarmOutput) Autoscaling() DeploymentElasticsearchWarmAutoscalingOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) DeploymentElasticsearchWarmAutoscaling { return v.Autoscaling }).(DeploymentElasticsearchWarmAutoscalingOutput)
}

func (o DeploymentElasticsearchWarmOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchWarmOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchWarmOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *string { return v.NodeTypeData }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchWarmOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *string { return v.NodeTypeIngest }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchWarmOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *string { return v.NodeTypeMaster }).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchWarmOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *string { return v.NodeTypeMl }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchWarmOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchWarmOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchWarmOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarm) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchWarmPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchWarmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchWarm)(nil)).Elem()
}

func (o DeploymentElasticsearchWarmPtrOutput) ToDeploymentElasticsearchWarmPtrOutput() DeploymentElasticsearchWarmPtrOutput {
	return o
}

func (o DeploymentElasticsearchWarmPtrOutput) ToDeploymentElasticsearchWarmPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmPtrOutput {
	return o
}

func (o DeploymentElasticsearchWarmPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchWarm] {
	return pulumix.Output[*DeploymentElasticsearchWarm]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchWarmPtrOutput) Elem() DeploymentElasticsearchWarmOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) DeploymentElasticsearchWarm {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchWarm
		return ret
	}).(DeploymentElasticsearchWarmOutput)
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o DeploymentElasticsearchWarmPtrOutput) Autoscaling() DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *DeploymentElasticsearchWarmAutoscaling {
		if v == nil {
			return nil
		}
		return &v.Autoscaling
	}).(DeploymentElasticsearchWarmAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchWarmPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

// The computed list of node roles for the current topology element
func (o DeploymentElasticsearchWarmPtrOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) []string {
		if v == nil {
			return nil
		}
		return v.NodeRoles
	}).(pulumi.StringArrayOutput)
}

// The node type for the Elasticsearch Topology element (data node)
func (o DeploymentElasticsearchWarmPtrOutput) NodeTypeData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeData
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (ingest node)
func (o DeploymentElasticsearchWarmPtrOutput) NodeTypeIngest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeIngest
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (master node)
func (o DeploymentElasticsearchWarmPtrOutput) NodeTypeMaster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMaster
	}).(pulumi.StringPtrOutput)
}

// The node type for the Elasticsearch Topology element (machine learning node)
func (o DeploymentElasticsearchWarmPtrOutput) NodeTypeMl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *string {
		if v == nil {
			return nil
		}
		return v.NodeTypeMl
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchWarmPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentElasticsearchWarmPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentElasticsearchWarmPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarm) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentElasticsearchWarmAutoscaling struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize *string `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource *string `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize *string `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource *string `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson *string `pulumi:"policyOverrideJson"`
}

// DeploymentElasticsearchWarmAutoscalingInput is an input type that accepts DeploymentElasticsearchWarmAutoscalingArgs and DeploymentElasticsearchWarmAutoscalingOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchWarmAutoscalingInput` via:
//
//	DeploymentElasticsearchWarmAutoscalingArgs{...}
type DeploymentElasticsearchWarmAutoscalingInput interface {
	pulumi.Input

	ToDeploymentElasticsearchWarmAutoscalingOutput() DeploymentElasticsearchWarmAutoscalingOutput
	ToDeploymentElasticsearchWarmAutoscalingOutputWithContext(context.Context) DeploymentElasticsearchWarmAutoscalingOutput
}

type DeploymentElasticsearchWarmAutoscalingArgs struct {
	// Maximum size value for the maximum autoscaling setting.
	MaxSize pulumi.StringPtrInput `pulumi:"maxSize"`
	// Maximum resource type for the maximum autoscaling setting.
	MaxSizeResource pulumi.StringPtrInput `pulumi:"maxSizeResource"`
	// Minimum size value for the minimum autoscaling setting.
	MinSize pulumi.StringPtrInput `pulumi:"minSize"`
	// Minimum resource type for the minimum autoscaling setting.
	MinSizeResource pulumi.StringPtrInput `pulumi:"minSizeResource"`
	// Computed policy overrides set directly via the API or other clients.
	PolicyOverrideJson pulumi.StringPtrInput `pulumi:"policyOverrideJson"`
}

func (DeploymentElasticsearchWarmAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchWarmAutoscaling)(nil)).Elem()
}

func (i DeploymentElasticsearchWarmAutoscalingArgs) ToDeploymentElasticsearchWarmAutoscalingOutput() DeploymentElasticsearchWarmAutoscalingOutput {
	return i.ToDeploymentElasticsearchWarmAutoscalingOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchWarmAutoscalingArgs) ToDeploymentElasticsearchWarmAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchWarmAutoscalingOutput)
}

func (i DeploymentElasticsearchWarmAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchWarmAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchWarmAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchWarmAutoscalingOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentElasticsearchWarmAutoscalingArgs) ToDeploymentElasticsearchWarmAutoscalingPtrOutput() DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(context.Background())
}

func (i DeploymentElasticsearchWarmAutoscalingArgs) ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchWarmAutoscalingOutput).ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(ctx)
}

// DeploymentElasticsearchWarmAutoscalingPtrInput is an input type that accepts DeploymentElasticsearchWarmAutoscalingArgs, DeploymentElasticsearchWarmAutoscalingPtr and DeploymentElasticsearchWarmAutoscalingPtrOutput values.
// You can construct a concrete instance of `DeploymentElasticsearchWarmAutoscalingPtrInput` via:
//
//	        DeploymentElasticsearchWarmAutoscalingArgs{...}
//
//	or:
//
//	        nil
type DeploymentElasticsearchWarmAutoscalingPtrInput interface {
	pulumi.Input

	ToDeploymentElasticsearchWarmAutoscalingPtrOutput() DeploymentElasticsearchWarmAutoscalingPtrOutput
	ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(context.Context) DeploymentElasticsearchWarmAutoscalingPtrOutput
}

type deploymentElasticsearchWarmAutoscalingPtrType DeploymentElasticsearchWarmAutoscalingArgs

func DeploymentElasticsearchWarmAutoscalingPtr(v *DeploymentElasticsearchWarmAutoscalingArgs) DeploymentElasticsearchWarmAutoscalingPtrInput {
	return (*deploymentElasticsearchWarmAutoscalingPtrType)(v)
}

func (*deploymentElasticsearchWarmAutoscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchWarmAutoscaling)(nil)).Elem()
}

func (i *deploymentElasticsearchWarmAutoscalingPtrType) ToDeploymentElasticsearchWarmAutoscalingPtrOutput() DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return i.ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(context.Background())
}

func (i *deploymentElasticsearchWarmAutoscalingPtrType) ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentElasticsearchWarmAutoscalingPtrOutput)
}

func (i *deploymentElasticsearchWarmAutoscalingPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchWarmAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchWarmAutoscaling]{
		OutputState: i.ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentElasticsearchWarmAutoscalingOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchWarmAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentElasticsearchWarmAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchWarmAutoscalingOutput) ToDeploymentElasticsearchWarmAutoscalingOutput() DeploymentElasticsearchWarmAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchWarmAutoscalingOutput) ToDeploymentElasticsearchWarmAutoscalingOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmAutoscalingOutput {
	return o
}

func (o DeploymentElasticsearchWarmAutoscalingOutput) ToDeploymentElasticsearchWarmAutoscalingPtrOutput() DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return o.ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(context.Background())
}

func (o DeploymentElasticsearchWarmAutoscalingOutput) ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentElasticsearchWarmAutoscaling) *DeploymentElasticsearchWarmAutoscaling {
		return &v
	}).(DeploymentElasticsearchWarmAutoscalingPtrOutput)
}

func (o DeploymentElasticsearchWarmAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentElasticsearchWarmAutoscaling] {
	return pulumix.Output[DeploymentElasticsearchWarmAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarmAutoscaling) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarmAutoscaling) *string { return v.MaxSizeResource }).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarmAutoscaling) *string { return v.MinSize }).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarmAutoscaling) *string { return v.MinSizeResource }).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchWarmAutoscalingOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentElasticsearchWarmAutoscaling) *string { return v.PolicyOverrideJson }).(pulumi.StringPtrOutput)
}

type DeploymentElasticsearchWarmAutoscalingPtrOutput struct{ *pulumi.OutputState }

func (DeploymentElasticsearchWarmAutoscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentElasticsearchWarmAutoscaling)(nil)).Elem()
}

func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) ToDeploymentElasticsearchWarmAutoscalingPtrOutput() DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) ToDeploymentElasticsearchWarmAutoscalingPtrOutputWithContext(ctx context.Context) DeploymentElasticsearchWarmAutoscalingPtrOutput {
	return o
}

func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentElasticsearchWarmAutoscaling] {
	return pulumix.Output[*DeploymentElasticsearchWarmAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) Elem() DeploymentElasticsearchWarmAutoscalingOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarmAutoscaling) DeploymentElasticsearchWarmAutoscaling {
		if v != nil {
			return *v
		}
		var ret DeploymentElasticsearchWarmAutoscaling
		return ret
	}).(DeploymentElasticsearchWarmAutoscalingOutput)
}

// Maximum size value for the maximum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarmAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

// Maximum resource type for the maximum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) MaxSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarmAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeResource
	}).(pulumi.StringPtrOutput)
}

// Minimum size value for the minimum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) MinSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarmAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSize
	}).(pulumi.StringPtrOutput)
}

// Minimum resource type for the minimum autoscaling setting.
func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) MinSizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarmAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.MinSizeResource
	}).(pulumi.StringPtrOutput)
}

// Computed policy overrides set directly via the API or other clients.
func (o DeploymentElasticsearchWarmAutoscalingPtrOutput) PolicyOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentElasticsearchWarmAutoscaling) *string {
		if v == nil {
			return nil
		}
		return v.PolicyOverrideJson
	}).(pulumi.StringPtrOutput)
}

type DeploymentEnterpriseSearch struct {
	// Optionally define the Enterprise Search configuration options for the Enterprise Search Server
	Config                    *DeploymentEnterpriseSearchConfig `pulumi:"config"`
	ElasticsearchClusterRefId *string                           `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              *string                           `pulumi:"httpEndpoint"`
	HttpsEndpoint             *string                           `pulumi:"httpsEndpoint"`
	InstanceConfigurationId   *string                           `pulumi:"instanceConfigurationId"`
	NodeTypeAppserver         *bool                             `pulumi:"nodeTypeAppserver"`
	NodeTypeConnector         *bool                             `pulumi:"nodeTypeConnector"`
	NodeTypeWorker            *bool                             `pulumi:"nodeTypeWorker"`
	RefId                     *string                           `pulumi:"refId"`
	Region                    *string                           `pulumi:"region"`
	ResourceId                *string                           `pulumi:"resourceId"`
	Size                      *string                           `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentEnterpriseSearchInput is an input type that accepts DeploymentEnterpriseSearchArgs and DeploymentEnterpriseSearchOutput values.
// You can construct a concrete instance of `DeploymentEnterpriseSearchInput` via:
//
//	DeploymentEnterpriseSearchArgs{...}
type DeploymentEnterpriseSearchInput interface {
	pulumi.Input

	ToDeploymentEnterpriseSearchOutput() DeploymentEnterpriseSearchOutput
	ToDeploymentEnterpriseSearchOutputWithContext(context.Context) DeploymentEnterpriseSearchOutput
}

type DeploymentEnterpriseSearchArgs struct {
	// Optionally define the Enterprise Search configuration options for the Enterprise Search Server
	Config                    DeploymentEnterpriseSearchConfigPtrInput `pulumi:"config"`
	ElasticsearchClusterRefId pulumi.StringPtrInput                    `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              pulumi.StringPtrInput                    `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringPtrInput                    `pulumi:"httpsEndpoint"`
	InstanceConfigurationId   pulumi.StringPtrInput                    `pulumi:"instanceConfigurationId"`
	NodeTypeAppserver         pulumi.BoolPtrInput                      `pulumi:"nodeTypeAppserver"`
	NodeTypeConnector         pulumi.BoolPtrInput                      `pulumi:"nodeTypeConnector"`
	NodeTypeWorker            pulumi.BoolPtrInput                      `pulumi:"nodeTypeWorker"`
	RefId                     pulumi.StringPtrInput                    `pulumi:"refId"`
	Region                    pulumi.StringPtrInput                    `pulumi:"region"`
	ResourceId                pulumi.StringPtrInput                    `pulumi:"resourceId"`
	Size                      pulumi.StringPtrInput                    `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentEnterpriseSearch)(nil)).Elem()
}

func (i DeploymentEnterpriseSearchArgs) ToDeploymentEnterpriseSearchOutput() DeploymentEnterpriseSearchOutput {
	return i.ToDeploymentEnterpriseSearchOutputWithContext(context.Background())
}

func (i DeploymentEnterpriseSearchArgs) ToDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnterpriseSearchOutput)
}

func (i DeploymentEnterpriseSearchArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentEnterpriseSearch] {
	return pulumix.Output[DeploymentEnterpriseSearch]{
		OutputState: i.ToDeploymentEnterpriseSearchOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentEnterpriseSearchArgs) ToDeploymentEnterpriseSearchPtrOutput() DeploymentEnterpriseSearchPtrOutput {
	return i.ToDeploymentEnterpriseSearchPtrOutputWithContext(context.Background())
}

func (i DeploymentEnterpriseSearchArgs) ToDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnterpriseSearchOutput).ToDeploymentEnterpriseSearchPtrOutputWithContext(ctx)
}

// DeploymentEnterpriseSearchPtrInput is an input type that accepts DeploymentEnterpriseSearchArgs, DeploymentEnterpriseSearchPtr and DeploymentEnterpriseSearchPtrOutput values.
// You can construct a concrete instance of `DeploymentEnterpriseSearchPtrInput` via:
//
//	        DeploymentEnterpriseSearchArgs{...}
//
//	or:
//
//	        nil
type DeploymentEnterpriseSearchPtrInput interface {
	pulumi.Input

	ToDeploymentEnterpriseSearchPtrOutput() DeploymentEnterpriseSearchPtrOutput
	ToDeploymentEnterpriseSearchPtrOutputWithContext(context.Context) DeploymentEnterpriseSearchPtrOutput
}

type deploymentEnterpriseSearchPtrType DeploymentEnterpriseSearchArgs

func DeploymentEnterpriseSearchPtr(v *DeploymentEnterpriseSearchArgs) DeploymentEnterpriseSearchPtrInput {
	return (*deploymentEnterpriseSearchPtrType)(v)
}

func (*deploymentEnterpriseSearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentEnterpriseSearch)(nil)).Elem()
}

func (i *deploymentEnterpriseSearchPtrType) ToDeploymentEnterpriseSearchPtrOutput() DeploymentEnterpriseSearchPtrOutput {
	return i.ToDeploymentEnterpriseSearchPtrOutputWithContext(context.Background())
}

func (i *deploymentEnterpriseSearchPtrType) ToDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnterpriseSearchPtrOutput)
}

func (i *deploymentEnterpriseSearchPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentEnterpriseSearch] {
	return pulumix.Output[*DeploymentEnterpriseSearch]{
		OutputState: i.ToDeploymentEnterpriseSearchPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (DeploymentEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentEnterpriseSearch)(nil)).Elem()
}

func (o DeploymentEnterpriseSearchOutput) ToDeploymentEnterpriseSearchOutput() DeploymentEnterpriseSearchOutput {
	return o
}

func (o DeploymentEnterpriseSearchOutput) ToDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchOutput {
	return o
}

func (o DeploymentEnterpriseSearchOutput) ToDeploymentEnterpriseSearchPtrOutput() DeploymentEnterpriseSearchPtrOutput {
	return o.ToDeploymentEnterpriseSearchPtrOutputWithContext(context.Background())
}

func (o DeploymentEnterpriseSearchOutput) ToDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentEnterpriseSearch) *DeploymentEnterpriseSearch {
		return &v
	}).(DeploymentEnterpriseSearchPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentEnterpriseSearch] {
	return pulumix.Output[DeploymentEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

// Optionally define the Enterprise Search configuration options for the Enterprise Search Server
func (o DeploymentEnterpriseSearchOutput) Config() DeploymentEnterpriseSearchConfigPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *DeploymentEnterpriseSearchConfig { return v.Config }).(DeploymentEnterpriseSearchConfigPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.ElasticsearchClusterRefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) NodeTypeAppserver() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *bool { return v.NodeTypeAppserver }).(pulumi.BoolPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) NodeTypeConnector() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *bool { return v.NodeTypeConnector }).(pulumi.BoolPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) NodeTypeWorker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *bool { return v.NodeTypeWorker }).(pulumi.BoolPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentEnterpriseSearchOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearch) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentEnterpriseSearchPtrOutput struct{ *pulumi.OutputState }

func (DeploymentEnterpriseSearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentEnterpriseSearch)(nil)).Elem()
}

func (o DeploymentEnterpriseSearchPtrOutput) ToDeploymentEnterpriseSearchPtrOutput() DeploymentEnterpriseSearchPtrOutput {
	return o
}

func (o DeploymentEnterpriseSearchPtrOutput) ToDeploymentEnterpriseSearchPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchPtrOutput {
	return o
}

func (o DeploymentEnterpriseSearchPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentEnterpriseSearch] {
	return pulumix.Output[*DeploymentEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentEnterpriseSearchPtrOutput) Elem() DeploymentEnterpriseSearchOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) DeploymentEnterpriseSearch {
		if v != nil {
			return *v
		}
		var ret DeploymentEnterpriseSearch
		return ret
	}).(DeploymentEnterpriseSearchOutput)
}

// Optionally define the Enterprise Search configuration options for the Enterprise Search Server
func (o DeploymentEnterpriseSearchPtrOutput) Config() DeploymentEnterpriseSearchConfigPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *DeploymentEnterpriseSearchConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(DeploymentEnterpriseSearchConfigPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchClusterRefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) NodeTypeAppserver() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *bool {
		if v == nil {
			return nil
		}
		return v.NodeTypeAppserver
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) NodeTypeConnector() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *bool {
		if v == nil {
			return nil
		}
		return v.NodeTypeConnector
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) NodeTypeWorker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *bool {
		if v == nil {
			return nil
		}
		return v.NodeTypeWorker
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentEnterpriseSearchPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentEnterpriseSearchPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearch) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentEnterpriseSearchConfig struct {
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage *string `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson *string `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml *string `pulumi:"userSettingsYaml"`
}

// DeploymentEnterpriseSearchConfigInput is an input type that accepts DeploymentEnterpriseSearchConfigArgs and DeploymentEnterpriseSearchConfigOutput values.
// You can construct a concrete instance of `DeploymentEnterpriseSearchConfigInput` via:
//
//	DeploymentEnterpriseSearchConfigArgs{...}
type DeploymentEnterpriseSearchConfigInput interface {
	pulumi.Input

	ToDeploymentEnterpriseSearchConfigOutput() DeploymentEnterpriseSearchConfigOutput
	ToDeploymentEnterpriseSearchConfigOutputWithContext(context.Context) DeploymentEnterpriseSearchConfigOutput
}

type DeploymentEnterpriseSearchConfigArgs struct {
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage pulumi.StringPtrInput `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (DeploymentEnterpriseSearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (i DeploymentEnterpriseSearchConfigArgs) ToDeploymentEnterpriseSearchConfigOutput() DeploymentEnterpriseSearchConfigOutput {
	return i.ToDeploymentEnterpriseSearchConfigOutputWithContext(context.Background())
}

func (i DeploymentEnterpriseSearchConfigArgs) ToDeploymentEnterpriseSearchConfigOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnterpriseSearchConfigOutput)
}

func (i DeploymentEnterpriseSearchConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentEnterpriseSearchConfig] {
	return pulumix.Output[DeploymentEnterpriseSearchConfig]{
		OutputState: i.ToDeploymentEnterpriseSearchConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentEnterpriseSearchConfigArgs) ToDeploymentEnterpriseSearchConfigPtrOutput() DeploymentEnterpriseSearchConfigPtrOutput {
	return i.ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Background())
}

func (i DeploymentEnterpriseSearchConfigArgs) ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnterpriseSearchConfigOutput).ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx)
}

// DeploymentEnterpriseSearchConfigPtrInput is an input type that accepts DeploymentEnterpriseSearchConfigArgs, DeploymentEnterpriseSearchConfigPtr and DeploymentEnterpriseSearchConfigPtrOutput values.
// You can construct a concrete instance of `DeploymentEnterpriseSearchConfigPtrInput` via:
//
//	        DeploymentEnterpriseSearchConfigArgs{...}
//
//	or:
//
//	        nil
type DeploymentEnterpriseSearchConfigPtrInput interface {
	pulumi.Input

	ToDeploymentEnterpriseSearchConfigPtrOutput() DeploymentEnterpriseSearchConfigPtrOutput
	ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Context) DeploymentEnterpriseSearchConfigPtrOutput
}

type deploymentEnterpriseSearchConfigPtrType DeploymentEnterpriseSearchConfigArgs

func DeploymentEnterpriseSearchConfigPtr(v *DeploymentEnterpriseSearchConfigArgs) DeploymentEnterpriseSearchConfigPtrInput {
	return (*deploymentEnterpriseSearchConfigPtrType)(v)
}

func (*deploymentEnterpriseSearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (i *deploymentEnterpriseSearchConfigPtrType) ToDeploymentEnterpriseSearchConfigPtrOutput() DeploymentEnterpriseSearchConfigPtrOutput {
	return i.ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Background())
}

func (i *deploymentEnterpriseSearchConfigPtrType) ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentEnterpriseSearchConfigPtrOutput)
}

func (i *deploymentEnterpriseSearchConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentEnterpriseSearchConfig] {
	return pulumix.Output[*DeploymentEnterpriseSearchConfig]{
		OutputState: i.ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentEnterpriseSearchConfigOutput struct{ *pulumi.OutputState }

func (DeploymentEnterpriseSearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (o DeploymentEnterpriseSearchConfigOutput) ToDeploymentEnterpriseSearchConfigOutput() DeploymentEnterpriseSearchConfigOutput {
	return o
}

func (o DeploymentEnterpriseSearchConfigOutput) ToDeploymentEnterpriseSearchConfigOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchConfigOutput {
	return o
}

func (o DeploymentEnterpriseSearchConfigOutput) ToDeploymentEnterpriseSearchConfigPtrOutput() DeploymentEnterpriseSearchConfigPtrOutput {
	return o.ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(context.Background())
}

func (o DeploymentEnterpriseSearchConfigOutput) ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentEnterpriseSearchConfig) *DeploymentEnterpriseSearchConfig {
		return &v
	}).(DeploymentEnterpriseSearchConfigPtrOutput)
}

func (o DeploymentEnterpriseSearchConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentEnterpriseSearchConfig] {
	return pulumix.Output[DeploymentEnterpriseSearchConfig]{
		OutputState: o.OutputState,
	}
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentEnterpriseSearchConfigOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearchConfig) *string { return v.DockerImage }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearchConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearchConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearchConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentEnterpriseSearchConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type DeploymentEnterpriseSearchConfigPtrOutput struct{ *pulumi.OutputState }

func (DeploymentEnterpriseSearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentEnterpriseSearchConfig)(nil)).Elem()
}

func (o DeploymentEnterpriseSearchConfigPtrOutput) ToDeploymentEnterpriseSearchConfigPtrOutput() DeploymentEnterpriseSearchConfigPtrOutput {
	return o
}

func (o DeploymentEnterpriseSearchConfigPtrOutput) ToDeploymentEnterpriseSearchConfigPtrOutputWithContext(ctx context.Context) DeploymentEnterpriseSearchConfigPtrOutput {
	return o
}

func (o DeploymentEnterpriseSearchConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentEnterpriseSearchConfig] {
	return pulumix.Output[*DeploymentEnterpriseSearchConfig]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentEnterpriseSearchConfigPtrOutput) Elem() DeploymentEnterpriseSearchConfigOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearchConfig) DeploymentEnterpriseSearchConfig {
		if v != nil {
			return *v
		}
		var ret DeploymentEnterpriseSearchConfig
		return ret
	}).(DeploymentEnterpriseSearchConfigOutput)
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentEnterpriseSearchConfigPtrOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.DockerImage
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentEnterpriseSearchConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentEnterpriseSearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type DeploymentIntegrationsServer struct {
	// Optionally define the Integrations Server configuration options for the IntegrationsServer Server
	Config                    *DeploymentIntegrationsServerConfig `pulumi:"config"`
	ElasticsearchClusterRefId *string                             `pulumi:"elasticsearchClusterRefId"`
	// URLs for the accessing the Fleet and APM API's within this Integrations Server resource.
	Endpoints               *DeploymentIntegrationsServerEndpoints `pulumi:"endpoints"`
	HttpEndpoint            *string                                `pulumi:"httpEndpoint"`
	HttpsEndpoint           *string                                `pulumi:"httpsEndpoint"`
	InstanceConfigurationId *string                                `pulumi:"instanceConfigurationId"`
	RefId                   *string                                `pulumi:"refId"`
	Region                  *string                                `pulumi:"region"`
	ResourceId              *string                                `pulumi:"resourceId"`
	Size                    *string                                `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentIntegrationsServerInput is an input type that accepts DeploymentIntegrationsServerArgs and DeploymentIntegrationsServerOutput values.
// You can construct a concrete instance of `DeploymentIntegrationsServerInput` via:
//
//	DeploymentIntegrationsServerArgs{...}
type DeploymentIntegrationsServerInput interface {
	pulumi.Input

	ToDeploymentIntegrationsServerOutput() DeploymentIntegrationsServerOutput
	ToDeploymentIntegrationsServerOutputWithContext(context.Context) DeploymentIntegrationsServerOutput
}

type DeploymentIntegrationsServerArgs struct {
	// Optionally define the Integrations Server configuration options for the IntegrationsServer Server
	Config                    DeploymentIntegrationsServerConfigPtrInput `pulumi:"config"`
	ElasticsearchClusterRefId pulumi.StringPtrInput                      `pulumi:"elasticsearchClusterRefId"`
	// URLs for the accessing the Fleet and APM API's within this Integrations Server resource.
	Endpoints               DeploymentIntegrationsServerEndpointsPtrInput `pulumi:"endpoints"`
	HttpEndpoint            pulumi.StringPtrInput                         `pulumi:"httpEndpoint"`
	HttpsEndpoint           pulumi.StringPtrInput                         `pulumi:"httpsEndpoint"`
	InstanceConfigurationId pulumi.StringPtrInput                         `pulumi:"instanceConfigurationId"`
	RefId                   pulumi.StringPtrInput                         `pulumi:"refId"`
	Region                  pulumi.StringPtrInput                         `pulumi:"region"`
	ResourceId              pulumi.StringPtrInput                         `pulumi:"resourceId"`
	Size                    pulumi.StringPtrInput                         `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentIntegrationsServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIntegrationsServer)(nil)).Elem()
}

func (i DeploymentIntegrationsServerArgs) ToDeploymentIntegrationsServerOutput() DeploymentIntegrationsServerOutput {
	return i.ToDeploymentIntegrationsServerOutputWithContext(context.Background())
}

func (i DeploymentIntegrationsServerArgs) ToDeploymentIntegrationsServerOutputWithContext(ctx context.Context) DeploymentIntegrationsServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerOutput)
}

func (i DeploymentIntegrationsServerArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentIntegrationsServer] {
	return pulumix.Output[DeploymentIntegrationsServer]{
		OutputState: i.ToDeploymentIntegrationsServerOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentIntegrationsServerArgs) ToDeploymentIntegrationsServerPtrOutput() DeploymentIntegrationsServerPtrOutput {
	return i.ToDeploymentIntegrationsServerPtrOutputWithContext(context.Background())
}

func (i DeploymentIntegrationsServerArgs) ToDeploymentIntegrationsServerPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerOutput).ToDeploymentIntegrationsServerPtrOutputWithContext(ctx)
}

// DeploymentIntegrationsServerPtrInput is an input type that accepts DeploymentIntegrationsServerArgs, DeploymentIntegrationsServerPtr and DeploymentIntegrationsServerPtrOutput values.
// You can construct a concrete instance of `DeploymentIntegrationsServerPtrInput` via:
//
//	        DeploymentIntegrationsServerArgs{...}
//
//	or:
//
//	        nil
type DeploymentIntegrationsServerPtrInput interface {
	pulumi.Input

	ToDeploymentIntegrationsServerPtrOutput() DeploymentIntegrationsServerPtrOutput
	ToDeploymentIntegrationsServerPtrOutputWithContext(context.Context) DeploymentIntegrationsServerPtrOutput
}

type deploymentIntegrationsServerPtrType DeploymentIntegrationsServerArgs

func DeploymentIntegrationsServerPtr(v *DeploymentIntegrationsServerArgs) DeploymentIntegrationsServerPtrInput {
	return (*deploymentIntegrationsServerPtrType)(v)
}

func (*deploymentIntegrationsServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIntegrationsServer)(nil)).Elem()
}

func (i *deploymentIntegrationsServerPtrType) ToDeploymentIntegrationsServerPtrOutput() DeploymentIntegrationsServerPtrOutput {
	return i.ToDeploymentIntegrationsServerPtrOutputWithContext(context.Background())
}

func (i *deploymentIntegrationsServerPtrType) ToDeploymentIntegrationsServerPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerPtrOutput)
}

func (i *deploymentIntegrationsServerPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentIntegrationsServer] {
	return pulumix.Output[*DeploymentIntegrationsServer]{
		OutputState: i.ToDeploymentIntegrationsServerPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentIntegrationsServerOutput struct{ *pulumi.OutputState }

func (DeploymentIntegrationsServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIntegrationsServer)(nil)).Elem()
}

func (o DeploymentIntegrationsServerOutput) ToDeploymentIntegrationsServerOutput() DeploymentIntegrationsServerOutput {
	return o
}

func (o DeploymentIntegrationsServerOutput) ToDeploymentIntegrationsServerOutputWithContext(ctx context.Context) DeploymentIntegrationsServerOutput {
	return o
}

func (o DeploymentIntegrationsServerOutput) ToDeploymentIntegrationsServerPtrOutput() DeploymentIntegrationsServerPtrOutput {
	return o.ToDeploymentIntegrationsServerPtrOutputWithContext(context.Background())
}

func (o DeploymentIntegrationsServerOutput) ToDeploymentIntegrationsServerPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentIntegrationsServer) *DeploymentIntegrationsServer {
		return &v
	}).(DeploymentIntegrationsServerPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentIntegrationsServer] {
	return pulumix.Output[DeploymentIntegrationsServer]{
		OutputState: o.OutputState,
	}
}

// Optionally define the Integrations Server configuration options for the IntegrationsServer Server
func (o DeploymentIntegrationsServerOutput) Config() DeploymentIntegrationsServerConfigPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *DeploymentIntegrationsServerConfig { return v.Config }).(DeploymentIntegrationsServerConfigPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.ElasticsearchClusterRefId }).(pulumi.StringPtrOutput)
}

// URLs for the accessing the Fleet and APM API's within this Integrations Server resource.
func (o DeploymentIntegrationsServerOutput) Endpoints() DeploymentIntegrationsServerEndpointsPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *DeploymentIntegrationsServerEndpoints { return v.Endpoints }).(DeploymentIntegrationsServerEndpointsPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentIntegrationsServerOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServer) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentIntegrationsServerPtrOutput struct{ *pulumi.OutputState }

func (DeploymentIntegrationsServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIntegrationsServer)(nil)).Elem()
}

func (o DeploymentIntegrationsServerPtrOutput) ToDeploymentIntegrationsServerPtrOutput() DeploymentIntegrationsServerPtrOutput {
	return o
}

func (o DeploymentIntegrationsServerPtrOutput) ToDeploymentIntegrationsServerPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerPtrOutput {
	return o
}

func (o DeploymentIntegrationsServerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentIntegrationsServer] {
	return pulumix.Output[*DeploymentIntegrationsServer]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentIntegrationsServerPtrOutput) Elem() DeploymentIntegrationsServerOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) DeploymentIntegrationsServer {
		if v != nil {
			return *v
		}
		var ret DeploymentIntegrationsServer
		return ret
	}).(DeploymentIntegrationsServerOutput)
}

// Optionally define the Integrations Server configuration options for the IntegrationsServer Server
func (o DeploymentIntegrationsServerPtrOutput) Config() DeploymentIntegrationsServerConfigPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *DeploymentIntegrationsServerConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(DeploymentIntegrationsServerConfigPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchClusterRefId
	}).(pulumi.StringPtrOutput)
}

// URLs for the accessing the Fleet and APM API's within this Integrations Server resource.
func (o DeploymentIntegrationsServerPtrOutput) Endpoints() DeploymentIntegrationsServerEndpointsPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *DeploymentIntegrationsServerEndpoints {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(DeploymentIntegrationsServerEndpointsPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentIntegrationsServerPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServer) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentIntegrationsServerConfig struct {
	// Optionally enable debug mode for APM servers - defaults to false
	DebugEnabled *bool `pulumi:"debugEnabled"`
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage *string `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson *string `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml *string `pulumi:"userSettingsYaml"`
}

// DeploymentIntegrationsServerConfigInput is an input type that accepts DeploymentIntegrationsServerConfigArgs and DeploymentIntegrationsServerConfigOutput values.
// You can construct a concrete instance of `DeploymentIntegrationsServerConfigInput` via:
//
//	DeploymentIntegrationsServerConfigArgs{...}
type DeploymentIntegrationsServerConfigInput interface {
	pulumi.Input

	ToDeploymentIntegrationsServerConfigOutput() DeploymentIntegrationsServerConfigOutput
	ToDeploymentIntegrationsServerConfigOutputWithContext(context.Context) DeploymentIntegrationsServerConfigOutput
}

type DeploymentIntegrationsServerConfigArgs struct {
	// Optionally enable debug mode for APM servers - defaults to false
	DebugEnabled pulumi.BoolPtrInput `pulumi:"debugEnabled"`
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage pulumi.StringPtrInput `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (DeploymentIntegrationsServerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIntegrationsServerConfig)(nil)).Elem()
}

func (i DeploymentIntegrationsServerConfigArgs) ToDeploymentIntegrationsServerConfigOutput() DeploymentIntegrationsServerConfigOutput {
	return i.ToDeploymentIntegrationsServerConfigOutputWithContext(context.Background())
}

func (i DeploymentIntegrationsServerConfigArgs) ToDeploymentIntegrationsServerConfigOutputWithContext(ctx context.Context) DeploymentIntegrationsServerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerConfigOutput)
}

func (i DeploymentIntegrationsServerConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentIntegrationsServerConfig] {
	return pulumix.Output[DeploymentIntegrationsServerConfig]{
		OutputState: i.ToDeploymentIntegrationsServerConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentIntegrationsServerConfigArgs) ToDeploymentIntegrationsServerConfigPtrOutput() DeploymentIntegrationsServerConfigPtrOutput {
	return i.ToDeploymentIntegrationsServerConfigPtrOutputWithContext(context.Background())
}

func (i DeploymentIntegrationsServerConfigArgs) ToDeploymentIntegrationsServerConfigPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerConfigOutput).ToDeploymentIntegrationsServerConfigPtrOutputWithContext(ctx)
}

// DeploymentIntegrationsServerConfigPtrInput is an input type that accepts DeploymentIntegrationsServerConfigArgs, DeploymentIntegrationsServerConfigPtr and DeploymentIntegrationsServerConfigPtrOutput values.
// You can construct a concrete instance of `DeploymentIntegrationsServerConfigPtrInput` via:
//
//	        DeploymentIntegrationsServerConfigArgs{...}
//
//	or:
//
//	        nil
type DeploymentIntegrationsServerConfigPtrInput interface {
	pulumi.Input

	ToDeploymentIntegrationsServerConfigPtrOutput() DeploymentIntegrationsServerConfigPtrOutput
	ToDeploymentIntegrationsServerConfigPtrOutputWithContext(context.Context) DeploymentIntegrationsServerConfigPtrOutput
}

type deploymentIntegrationsServerConfigPtrType DeploymentIntegrationsServerConfigArgs

func DeploymentIntegrationsServerConfigPtr(v *DeploymentIntegrationsServerConfigArgs) DeploymentIntegrationsServerConfigPtrInput {
	return (*deploymentIntegrationsServerConfigPtrType)(v)
}

func (*deploymentIntegrationsServerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIntegrationsServerConfig)(nil)).Elem()
}

func (i *deploymentIntegrationsServerConfigPtrType) ToDeploymentIntegrationsServerConfigPtrOutput() DeploymentIntegrationsServerConfigPtrOutput {
	return i.ToDeploymentIntegrationsServerConfigPtrOutputWithContext(context.Background())
}

func (i *deploymentIntegrationsServerConfigPtrType) ToDeploymentIntegrationsServerConfigPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerConfigPtrOutput)
}

func (i *deploymentIntegrationsServerConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentIntegrationsServerConfig] {
	return pulumix.Output[*DeploymentIntegrationsServerConfig]{
		OutputState: i.ToDeploymentIntegrationsServerConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentIntegrationsServerConfigOutput struct{ *pulumi.OutputState }

func (DeploymentIntegrationsServerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIntegrationsServerConfig)(nil)).Elem()
}

func (o DeploymentIntegrationsServerConfigOutput) ToDeploymentIntegrationsServerConfigOutput() DeploymentIntegrationsServerConfigOutput {
	return o
}

func (o DeploymentIntegrationsServerConfigOutput) ToDeploymentIntegrationsServerConfigOutputWithContext(ctx context.Context) DeploymentIntegrationsServerConfigOutput {
	return o
}

func (o DeploymentIntegrationsServerConfigOutput) ToDeploymentIntegrationsServerConfigPtrOutput() DeploymentIntegrationsServerConfigPtrOutput {
	return o.ToDeploymentIntegrationsServerConfigPtrOutputWithContext(context.Background())
}

func (o DeploymentIntegrationsServerConfigOutput) ToDeploymentIntegrationsServerConfigPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentIntegrationsServerConfig) *DeploymentIntegrationsServerConfig {
		return &v
	}).(DeploymentIntegrationsServerConfigPtrOutput)
}

func (o DeploymentIntegrationsServerConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentIntegrationsServerConfig] {
	return pulumix.Output[DeploymentIntegrationsServerConfig]{
		OutputState: o.OutputState,
	}
}

// Optionally enable debug mode for APM servers - defaults to false
func (o DeploymentIntegrationsServerConfigOutput) DebugEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerConfig) *bool { return v.DebugEnabled }).(pulumi.BoolPtrOutput)
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentIntegrationsServerConfigOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerConfig) *string { return v.DockerImage }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type DeploymentIntegrationsServerConfigPtrOutput struct{ *pulumi.OutputState }

func (DeploymentIntegrationsServerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIntegrationsServerConfig)(nil)).Elem()
}

func (o DeploymentIntegrationsServerConfigPtrOutput) ToDeploymentIntegrationsServerConfigPtrOutput() DeploymentIntegrationsServerConfigPtrOutput {
	return o
}

func (o DeploymentIntegrationsServerConfigPtrOutput) ToDeploymentIntegrationsServerConfigPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerConfigPtrOutput {
	return o
}

func (o DeploymentIntegrationsServerConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentIntegrationsServerConfig] {
	return pulumix.Output[*DeploymentIntegrationsServerConfig]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentIntegrationsServerConfigPtrOutput) Elem() DeploymentIntegrationsServerConfigOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerConfig) DeploymentIntegrationsServerConfig {
		if v != nil {
			return *v
		}
		var ret DeploymentIntegrationsServerConfig
		return ret
	}).(DeploymentIntegrationsServerConfigOutput)
}

// Optionally enable debug mode for APM servers - defaults to false
func (o DeploymentIntegrationsServerConfigPtrOutput) DebugEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DebugEnabled
	}).(pulumi.BoolPtrOutput)
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentIntegrationsServerConfigPtrOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerConfig) *string {
		if v == nil {
			return nil
		}
		return v.DockerImage
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentIntegrationsServerConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type DeploymentIntegrationsServerEndpoints struct {
	Apm   string `pulumi:"apm"`
	Fleet string `pulumi:"fleet"`
}

// DeploymentIntegrationsServerEndpointsInput is an input type that accepts DeploymentIntegrationsServerEndpointsArgs and DeploymentIntegrationsServerEndpointsOutput values.
// You can construct a concrete instance of `DeploymentIntegrationsServerEndpointsInput` via:
//
//	DeploymentIntegrationsServerEndpointsArgs{...}
type DeploymentIntegrationsServerEndpointsInput interface {
	pulumi.Input

	ToDeploymentIntegrationsServerEndpointsOutput() DeploymentIntegrationsServerEndpointsOutput
	ToDeploymentIntegrationsServerEndpointsOutputWithContext(context.Context) DeploymentIntegrationsServerEndpointsOutput
}

type DeploymentIntegrationsServerEndpointsArgs struct {
	Apm   pulumi.StringInput `pulumi:"apm"`
	Fleet pulumi.StringInput `pulumi:"fleet"`
}

func (DeploymentIntegrationsServerEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIntegrationsServerEndpoints)(nil)).Elem()
}

func (i DeploymentIntegrationsServerEndpointsArgs) ToDeploymentIntegrationsServerEndpointsOutput() DeploymentIntegrationsServerEndpointsOutput {
	return i.ToDeploymentIntegrationsServerEndpointsOutputWithContext(context.Background())
}

func (i DeploymentIntegrationsServerEndpointsArgs) ToDeploymentIntegrationsServerEndpointsOutputWithContext(ctx context.Context) DeploymentIntegrationsServerEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerEndpointsOutput)
}

func (i DeploymentIntegrationsServerEndpointsArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentIntegrationsServerEndpoints] {
	return pulumix.Output[DeploymentIntegrationsServerEndpoints]{
		OutputState: i.ToDeploymentIntegrationsServerEndpointsOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentIntegrationsServerEndpointsArgs) ToDeploymentIntegrationsServerEndpointsPtrOutput() DeploymentIntegrationsServerEndpointsPtrOutput {
	return i.ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(context.Background())
}

func (i DeploymentIntegrationsServerEndpointsArgs) ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerEndpointsOutput).ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(ctx)
}

// DeploymentIntegrationsServerEndpointsPtrInput is an input type that accepts DeploymentIntegrationsServerEndpointsArgs, DeploymentIntegrationsServerEndpointsPtr and DeploymentIntegrationsServerEndpointsPtrOutput values.
// You can construct a concrete instance of `DeploymentIntegrationsServerEndpointsPtrInput` via:
//
//	        DeploymentIntegrationsServerEndpointsArgs{...}
//
//	or:
//
//	        nil
type DeploymentIntegrationsServerEndpointsPtrInput interface {
	pulumi.Input

	ToDeploymentIntegrationsServerEndpointsPtrOutput() DeploymentIntegrationsServerEndpointsPtrOutput
	ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(context.Context) DeploymentIntegrationsServerEndpointsPtrOutput
}

type deploymentIntegrationsServerEndpointsPtrType DeploymentIntegrationsServerEndpointsArgs

func DeploymentIntegrationsServerEndpointsPtr(v *DeploymentIntegrationsServerEndpointsArgs) DeploymentIntegrationsServerEndpointsPtrInput {
	return (*deploymentIntegrationsServerEndpointsPtrType)(v)
}

func (*deploymentIntegrationsServerEndpointsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIntegrationsServerEndpoints)(nil)).Elem()
}

func (i *deploymentIntegrationsServerEndpointsPtrType) ToDeploymentIntegrationsServerEndpointsPtrOutput() DeploymentIntegrationsServerEndpointsPtrOutput {
	return i.ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(context.Background())
}

func (i *deploymentIntegrationsServerEndpointsPtrType) ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIntegrationsServerEndpointsPtrOutput)
}

func (i *deploymentIntegrationsServerEndpointsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentIntegrationsServerEndpoints] {
	return pulumix.Output[*DeploymentIntegrationsServerEndpoints]{
		OutputState: i.ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentIntegrationsServerEndpointsOutput struct{ *pulumi.OutputState }

func (DeploymentIntegrationsServerEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIntegrationsServerEndpoints)(nil)).Elem()
}

func (o DeploymentIntegrationsServerEndpointsOutput) ToDeploymentIntegrationsServerEndpointsOutput() DeploymentIntegrationsServerEndpointsOutput {
	return o
}

func (o DeploymentIntegrationsServerEndpointsOutput) ToDeploymentIntegrationsServerEndpointsOutputWithContext(ctx context.Context) DeploymentIntegrationsServerEndpointsOutput {
	return o
}

func (o DeploymentIntegrationsServerEndpointsOutput) ToDeploymentIntegrationsServerEndpointsPtrOutput() DeploymentIntegrationsServerEndpointsPtrOutput {
	return o.ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(context.Background())
}

func (o DeploymentIntegrationsServerEndpointsOutput) ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerEndpointsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentIntegrationsServerEndpoints) *DeploymentIntegrationsServerEndpoints {
		return &v
	}).(DeploymentIntegrationsServerEndpointsPtrOutput)
}

func (o DeploymentIntegrationsServerEndpointsOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentIntegrationsServerEndpoints] {
	return pulumix.Output[DeploymentIntegrationsServerEndpoints]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentIntegrationsServerEndpointsOutput) Apm() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerEndpoints) string { return v.Apm }).(pulumi.StringOutput)
}

func (o DeploymentIntegrationsServerEndpointsOutput) Fleet() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentIntegrationsServerEndpoints) string { return v.Fleet }).(pulumi.StringOutput)
}

type DeploymentIntegrationsServerEndpointsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentIntegrationsServerEndpointsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIntegrationsServerEndpoints)(nil)).Elem()
}

func (o DeploymentIntegrationsServerEndpointsPtrOutput) ToDeploymentIntegrationsServerEndpointsPtrOutput() DeploymentIntegrationsServerEndpointsPtrOutput {
	return o
}

func (o DeploymentIntegrationsServerEndpointsPtrOutput) ToDeploymentIntegrationsServerEndpointsPtrOutputWithContext(ctx context.Context) DeploymentIntegrationsServerEndpointsPtrOutput {
	return o
}

func (o DeploymentIntegrationsServerEndpointsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentIntegrationsServerEndpoints] {
	return pulumix.Output[*DeploymentIntegrationsServerEndpoints]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentIntegrationsServerEndpointsPtrOutput) Elem() DeploymentIntegrationsServerEndpointsOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerEndpoints) DeploymentIntegrationsServerEndpoints {
		if v != nil {
			return *v
		}
		var ret DeploymentIntegrationsServerEndpoints
		return ret
	}).(DeploymentIntegrationsServerEndpointsOutput)
}

func (o DeploymentIntegrationsServerEndpointsPtrOutput) Apm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerEndpoints) *string {
		if v == nil {
			return nil
		}
		return &v.Apm
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIntegrationsServerEndpointsPtrOutput) Fleet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIntegrationsServerEndpoints) *string {
		if v == nil {
			return nil
		}
		return &v.Fleet
	}).(pulumi.StringPtrOutput)
}

type DeploymentKibana struct {
	// Optionally define the Kibana configuration options for the Kibana Server
	Config                    *DeploymentKibanaConfig `pulumi:"config"`
	ElasticsearchClusterRefId *string                 `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              *string                 `pulumi:"httpEndpoint"`
	HttpsEndpoint             *string                 `pulumi:"httpsEndpoint"`
	InstanceConfigurationId   *string                 `pulumi:"instanceConfigurationId"`
	RefId                     *string                 `pulumi:"refId"`
	Region                    *string                 `pulumi:"region"`
	ResourceId                *string                 `pulumi:"resourceId"`
	Size                      *string                 `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource *string `pulumi:"sizeResource"`
	ZoneCount    *int    `pulumi:"zoneCount"`
}

// DeploymentKibanaInput is an input type that accepts DeploymentKibanaArgs and DeploymentKibanaOutput values.
// You can construct a concrete instance of `DeploymentKibanaInput` via:
//
//	DeploymentKibanaArgs{...}
type DeploymentKibanaInput interface {
	pulumi.Input

	ToDeploymentKibanaOutput() DeploymentKibanaOutput
	ToDeploymentKibanaOutputWithContext(context.Context) DeploymentKibanaOutput
}

type DeploymentKibanaArgs struct {
	// Optionally define the Kibana configuration options for the Kibana Server
	Config                    DeploymentKibanaConfigPtrInput `pulumi:"config"`
	ElasticsearchClusterRefId pulumi.StringPtrInput          `pulumi:"elasticsearchClusterRefId"`
	HttpEndpoint              pulumi.StringPtrInput          `pulumi:"httpEndpoint"`
	HttpsEndpoint             pulumi.StringPtrInput          `pulumi:"httpsEndpoint"`
	InstanceConfigurationId   pulumi.StringPtrInput          `pulumi:"instanceConfigurationId"`
	RefId                     pulumi.StringPtrInput          `pulumi:"refId"`
	Region                    pulumi.StringPtrInput          `pulumi:"region"`
	ResourceId                pulumi.StringPtrInput          `pulumi:"resourceId"`
	Size                      pulumi.StringPtrInput          `pulumi:"size"`
	// Optional size type, defaults to "memory".
	SizeResource pulumi.StringPtrInput `pulumi:"sizeResource"`
	ZoneCount    pulumi.IntPtrInput    `pulumi:"zoneCount"`
}

func (DeploymentKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentKibana)(nil)).Elem()
}

func (i DeploymentKibanaArgs) ToDeploymentKibanaOutput() DeploymentKibanaOutput {
	return i.ToDeploymentKibanaOutputWithContext(context.Background())
}

func (i DeploymentKibanaArgs) ToDeploymentKibanaOutputWithContext(ctx context.Context) DeploymentKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentKibanaOutput)
}

func (i DeploymentKibanaArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentKibana] {
	return pulumix.Output[DeploymentKibana]{
		OutputState: i.ToDeploymentKibanaOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentKibanaArgs) ToDeploymentKibanaPtrOutput() DeploymentKibanaPtrOutput {
	return i.ToDeploymentKibanaPtrOutputWithContext(context.Background())
}

func (i DeploymentKibanaArgs) ToDeploymentKibanaPtrOutputWithContext(ctx context.Context) DeploymentKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentKibanaOutput).ToDeploymentKibanaPtrOutputWithContext(ctx)
}

// DeploymentKibanaPtrInput is an input type that accepts DeploymentKibanaArgs, DeploymentKibanaPtr and DeploymentKibanaPtrOutput values.
// You can construct a concrete instance of `DeploymentKibanaPtrInput` via:
//
//	        DeploymentKibanaArgs{...}
//
//	or:
//
//	        nil
type DeploymentKibanaPtrInput interface {
	pulumi.Input

	ToDeploymentKibanaPtrOutput() DeploymentKibanaPtrOutput
	ToDeploymentKibanaPtrOutputWithContext(context.Context) DeploymentKibanaPtrOutput
}

type deploymentKibanaPtrType DeploymentKibanaArgs

func DeploymentKibanaPtr(v *DeploymentKibanaArgs) DeploymentKibanaPtrInput {
	return (*deploymentKibanaPtrType)(v)
}

func (*deploymentKibanaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentKibana)(nil)).Elem()
}

func (i *deploymentKibanaPtrType) ToDeploymentKibanaPtrOutput() DeploymentKibanaPtrOutput {
	return i.ToDeploymentKibanaPtrOutputWithContext(context.Background())
}

func (i *deploymentKibanaPtrType) ToDeploymentKibanaPtrOutputWithContext(ctx context.Context) DeploymentKibanaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentKibanaPtrOutput)
}

func (i *deploymentKibanaPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentKibana] {
	return pulumix.Output[*DeploymentKibana]{
		OutputState: i.ToDeploymentKibanaPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentKibanaOutput struct{ *pulumi.OutputState }

func (DeploymentKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentKibana)(nil)).Elem()
}

func (o DeploymentKibanaOutput) ToDeploymentKibanaOutput() DeploymentKibanaOutput {
	return o
}

func (o DeploymentKibanaOutput) ToDeploymentKibanaOutputWithContext(ctx context.Context) DeploymentKibanaOutput {
	return o
}

func (o DeploymentKibanaOutput) ToDeploymentKibanaPtrOutput() DeploymentKibanaPtrOutput {
	return o.ToDeploymentKibanaPtrOutputWithContext(context.Background())
}

func (o DeploymentKibanaOutput) ToDeploymentKibanaPtrOutputWithContext(ctx context.Context) DeploymentKibanaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentKibana) *DeploymentKibana {
		return &v
	}).(DeploymentKibanaPtrOutput)
}

func (o DeploymentKibanaOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentKibana] {
	return pulumix.Output[DeploymentKibana]{
		OutputState: o.OutputState,
	}
}

// Optionally define the Kibana configuration options for the Kibana Server
func (o DeploymentKibanaOutput) Config() DeploymentKibanaConfigPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *DeploymentKibanaConfig { return v.Config }).(DeploymentKibanaConfigPtrOutput)
}

func (o DeploymentKibanaOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.ElasticsearchClusterRefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.HttpsEndpoint }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.InstanceConfigurationId }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentKibanaOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *string { return v.SizeResource }).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentKibana) *int { return v.ZoneCount }).(pulumi.IntPtrOutput)
}

type DeploymentKibanaPtrOutput struct{ *pulumi.OutputState }

func (DeploymentKibanaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentKibana)(nil)).Elem()
}

func (o DeploymentKibanaPtrOutput) ToDeploymentKibanaPtrOutput() DeploymentKibanaPtrOutput {
	return o
}

func (o DeploymentKibanaPtrOutput) ToDeploymentKibanaPtrOutputWithContext(ctx context.Context) DeploymentKibanaPtrOutput {
	return o
}

func (o DeploymentKibanaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentKibana] {
	return pulumix.Output[*DeploymentKibana]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentKibanaPtrOutput) Elem() DeploymentKibanaOutput {
	return o.ApplyT(func(v *DeploymentKibana) DeploymentKibana {
		if v != nil {
			return *v
		}
		var ret DeploymentKibana
		return ret
	}).(DeploymentKibanaOutput)
}

// Optionally define the Kibana configuration options for the Kibana Server
func (o DeploymentKibanaPtrOutput) Config() DeploymentKibanaConfigPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *DeploymentKibanaConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(DeploymentKibanaConfigPtrOutput)
}

func (o DeploymentKibanaPtrOutput) ElasticsearchClusterRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchClusterRefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) HttpsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.HttpsEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) InstanceConfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.InstanceConfigurationId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Optional size type, defaults to "memory".
func (o DeploymentKibanaPtrOutput) SizeResource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *string {
		if v == nil {
			return nil
		}
		return v.SizeResource
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentKibanaPtrOutput) ZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentKibana) *int {
		if v == nil {
			return nil
		}
		return v.ZoneCount
	}).(pulumi.IntPtrOutput)
}

type DeploymentKibanaConfig struct {
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage *string `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson *string `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson *string `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml *string `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml *string `pulumi:"userSettingsYaml"`
}

// DeploymentKibanaConfigInput is an input type that accepts DeploymentKibanaConfigArgs and DeploymentKibanaConfigOutput values.
// You can construct a concrete instance of `DeploymentKibanaConfigInput` via:
//
//	DeploymentKibanaConfigArgs{...}
type DeploymentKibanaConfigInput interface {
	pulumi.Input

	ToDeploymentKibanaConfigOutput() DeploymentKibanaConfigOutput
	ToDeploymentKibanaConfigOutputWithContext(context.Context) DeploymentKibanaConfigOutput
}

type DeploymentKibanaConfigArgs struct {
	// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
	DockerImage pulumi.StringPtrInput `pulumi:"dockerImage"`
	// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsJson pulumi.StringPtrInput `pulumi:"userSettingsJson"`
	// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideJson pulumi.StringPtrInput `pulumi:"userSettingsOverrideJson"`
	// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
	UserSettingsOverrideYaml pulumi.StringPtrInput `pulumi:"userSettingsOverrideYaml"`
	// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
	UserSettingsYaml pulumi.StringPtrInput `pulumi:"userSettingsYaml"`
}

func (DeploymentKibanaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentKibanaConfig)(nil)).Elem()
}

func (i DeploymentKibanaConfigArgs) ToDeploymentKibanaConfigOutput() DeploymentKibanaConfigOutput {
	return i.ToDeploymentKibanaConfigOutputWithContext(context.Background())
}

func (i DeploymentKibanaConfigArgs) ToDeploymentKibanaConfigOutputWithContext(ctx context.Context) DeploymentKibanaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentKibanaConfigOutput)
}

func (i DeploymentKibanaConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentKibanaConfig] {
	return pulumix.Output[DeploymentKibanaConfig]{
		OutputState: i.ToDeploymentKibanaConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentKibanaConfigArgs) ToDeploymentKibanaConfigPtrOutput() DeploymentKibanaConfigPtrOutput {
	return i.ToDeploymentKibanaConfigPtrOutputWithContext(context.Background())
}

func (i DeploymentKibanaConfigArgs) ToDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) DeploymentKibanaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentKibanaConfigOutput).ToDeploymentKibanaConfigPtrOutputWithContext(ctx)
}

// DeploymentKibanaConfigPtrInput is an input type that accepts DeploymentKibanaConfigArgs, DeploymentKibanaConfigPtr and DeploymentKibanaConfigPtrOutput values.
// You can construct a concrete instance of `DeploymentKibanaConfigPtrInput` via:
//
//	        DeploymentKibanaConfigArgs{...}
//
//	or:
//
//	        nil
type DeploymentKibanaConfigPtrInput interface {
	pulumi.Input

	ToDeploymentKibanaConfigPtrOutput() DeploymentKibanaConfigPtrOutput
	ToDeploymentKibanaConfigPtrOutputWithContext(context.Context) DeploymentKibanaConfigPtrOutput
}

type deploymentKibanaConfigPtrType DeploymentKibanaConfigArgs

func DeploymentKibanaConfigPtr(v *DeploymentKibanaConfigArgs) DeploymentKibanaConfigPtrInput {
	return (*deploymentKibanaConfigPtrType)(v)
}

func (*deploymentKibanaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentKibanaConfig)(nil)).Elem()
}

func (i *deploymentKibanaConfigPtrType) ToDeploymentKibanaConfigPtrOutput() DeploymentKibanaConfigPtrOutput {
	return i.ToDeploymentKibanaConfigPtrOutputWithContext(context.Background())
}

func (i *deploymentKibanaConfigPtrType) ToDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) DeploymentKibanaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentKibanaConfigPtrOutput)
}

func (i *deploymentKibanaConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentKibanaConfig] {
	return pulumix.Output[*DeploymentKibanaConfig]{
		OutputState: i.ToDeploymentKibanaConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentKibanaConfigOutput struct{ *pulumi.OutputState }

func (DeploymentKibanaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentKibanaConfig)(nil)).Elem()
}

func (o DeploymentKibanaConfigOutput) ToDeploymentKibanaConfigOutput() DeploymentKibanaConfigOutput {
	return o
}

func (o DeploymentKibanaConfigOutput) ToDeploymentKibanaConfigOutputWithContext(ctx context.Context) DeploymentKibanaConfigOutput {
	return o
}

func (o DeploymentKibanaConfigOutput) ToDeploymentKibanaConfigPtrOutput() DeploymentKibanaConfigPtrOutput {
	return o.ToDeploymentKibanaConfigPtrOutputWithContext(context.Background())
}

func (o DeploymentKibanaConfigOutput) ToDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) DeploymentKibanaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentKibanaConfig) *DeploymentKibanaConfig {
		return &v
	}).(DeploymentKibanaConfigPtrOutput)
}

func (o DeploymentKibanaConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentKibanaConfig] {
	return pulumix.Output[DeploymentKibanaConfig]{
		OutputState: o.OutputState,
	}
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentKibanaConfigOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibanaConfig) *string { return v.DockerImage }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentKibanaConfigOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibanaConfig) *string { return v.UserSettingsJson }).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentKibanaConfigOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibanaConfig) *string { return v.UserSettingsOverrideJson }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentKibanaConfigOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibanaConfig) *string { return v.UserSettingsOverrideYaml }).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentKibanaConfigOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentKibanaConfig) *string { return v.UserSettingsYaml }).(pulumi.StringPtrOutput)
}

type DeploymentKibanaConfigPtrOutput struct{ *pulumi.OutputState }

func (DeploymentKibanaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentKibanaConfig)(nil)).Elem()
}

func (o DeploymentKibanaConfigPtrOutput) ToDeploymentKibanaConfigPtrOutput() DeploymentKibanaConfigPtrOutput {
	return o
}

func (o DeploymentKibanaConfigPtrOutput) ToDeploymentKibanaConfigPtrOutputWithContext(ctx context.Context) DeploymentKibanaConfigPtrOutput {
	return o
}

func (o DeploymentKibanaConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentKibanaConfig] {
	return pulumix.Output[*DeploymentKibanaConfig]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentKibanaConfigPtrOutput) Elem() DeploymentKibanaConfigOutput {
	return o.ApplyT(func(v *DeploymentKibanaConfig) DeploymentKibanaConfig {
		if v != nil {
			return *v
		}
		var ret DeploymentKibanaConfig
		return ret
	}).(DeploymentKibanaConfigOutput)
}

// Optionally override the docker image the APM nodes will use. This option will not work in ESS customers and should only be changed if you know what you're doing.
func (o DeploymentKibanaConfigPtrOutput) DockerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.DockerImage
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*yaml' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (This field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentKibanaConfigPtrOutput) UserSettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*yaml' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentKibanaConfigPtrOutput) UserSettingsOverrideJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideJson
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user*settings*override*json' is allowed), ie in addition to the documented 'system*settings'. (This field together with 'system*settings' and 'user*settings*' defines the total set of resource settings)
func (o DeploymentKibanaConfigPtrOutput) UserSettingsOverrideYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsOverrideYaml
	}).(pulumi.StringPtrOutput)
}

// An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user*settings*json' is allowed), provided they are on the whitelist ('user*settings*whitelist') and not on the blacklist ('user*settings*blacklist'). (These field together with 'user*settings*override*' and 'system_settings' defines the total set of resource settings)
func (o DeploymentKibanaConfigPtrOutput) UserSettingsYaml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentKibanaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserSettingsYaml
	}).(pulumi.StringPtrOutput)
}

type DeploymentObservability struct {
	DeploymentId string  `pulumi:"deploymentId"`
	Logs         *bool   `pulumi:"logs"`
	Metrics      *bool   `pulumi:"metrics"`
	RefId        *string `pulumi:"refId"`
}

// DeploymentObservabilityInput is an input type that accepts DeploymentObservabilityArgs and DeploymentObservabilityOutput values.
// You can construct a concrete instance of `DeploymentObservabilityInput` via:
//
//	DeploymentObservabilityArgs{...}
type DeploymentObservabilityInput interface {
	pulumi.Input

	ToDeploymentObservabilityOutput() DeploymentObservabilityOutput
	ToDeploymentObservabilityOutputWithContext(context.Context) DeploymentObservabilityOutput
}

type DeploymentObservabilityArgs struct {
	DeploymentId pulumi.StringInput    `pulumi:"deploymentId"`
	Logs         pulumi.BoolPtrInput   `pulumi:"logs"`
	Metrics      pulumi.BoolPtrInput   `pulumi:"metrics"`
	RefId        pulumi.StringPtrInput `pulumi:"refId"`
}

func (DeploymentObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentObservability)(nil)).Elem()
}

func (i DeploymentObservabilityArgs) ToDeploymentObservabilityOutput() DeploymentObservabilityOutput {
	return i.ToDeploymentObservabilityOutputWithContext(context.Background())
}

func (i DeploymentObservabilityArgs) ToDeploymentObservabilityOutputWithContext(ctx context.Context) DeploymentObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentObservabilityOutput)
}

func (i DeploymentObservabilityArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentObservability] {
	return pulumix.Output[DeploymentObservability]{
		OutputState: i.ToDeploymentObservabilityOutputWithContext(ctx).OutputState,
	}
}

func (i DeploymentObservabilityArgs) ToDeploymentObservabilityPtrOutput() DeploymentObservabilityPtrOutput {
	return i.ToDeploymentObservabilityPtrOutputWithContext(context.Background())
}

func (i DeploymentObservabilityArgs) ToDeploymentObservabilityPtrOutputWithContext(ctx context.Context) DeploymentObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentObservabilityOutput).ToDeploymentObservabilityPtrOutputWithContext(ctx)
}

// DeploymentObservabilityPtrInput is an input type that accepts DeploymentObservabilityArgs, DeploymentObservabilityPtr and DeploymentObservabilityPtrOutput values.
// You can construct a concrete instance of `DeploymentObservabilityPtrInput` via:
//
//	        DeploymentObservabilityArgs{...}
//
//	or:
//
//	        nil
type DeploymentObservabilityPtrInput interface {
	pulumi.Input

	ToDeploymentObservabilityPtrOutput() DeploymentObservabilityPtrOutput
	ToDeploymentObservabilityPtrOutputWithContext(context.Context) DeploymentObservabilityPtrOutput
}

type deploymentObservabilityPtrType DeploymentObservabilityArgs

func DeploymentObservabilityPtr(v *DeploymentObservabilityArgs) DeploymentObservabilityPtrInput {
	return (*deploymentObservabilityPtrType)(v)
}

func (*deploymentObservabilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentObservability)(nil)).Elem()
}

func (i *deploymentObservabilityPtrType) ToDeploymentObservabilityPtrOutput() DeploymentObservabilityPtrOutput {
	return i.ToDeploymentObservabilityPtrOutputWithContext(context.Background())
}

func (i *deploymentObservabilityPtrType) ToDeploymentObservabilityPtrOutputWithContext(ctx context.Context) DeploymentObservabilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentObservabilityPtrOutput)
}

func (i *deploymentObservabilityPtrType) ToOutput(ctx context.Context) pulumix.Output[*DeploymentObservability] {
	return pulumix.Output[*DeploymentObservability]{
		OutputState: i.ToDeploymentObservabilityPtrOutputWithContext(ctx).OutputState,
	}
}

type DeploymentObservabilityOutput struct{ *pulumi.OutputState }

func (DeploymentObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentObservability)(nil)).Elem()
}

func (o DeploymentObservabilityOutput) ToDeploymentObservabilityOutput() DeploymentObservabilityOutput {
	return o
}

func (o DeploymentObservabilityOutput) ToDeploymentObservabilityOutputWithContext(ctx context.Context) DeploymentObservabilityOutput {
	return o
}

func (o DeploymentObservabilityOutput) ToDeploymentObservabilityPtrOutput() DeploymentObservabilityPtrOutput {
	return o.ToDeploymentObservabilityPtrOutputWithContext(context.Background())
}

func (o DeploymentObservabilityOutput) ToDeploymentObservabilityPtrOutputWithContext(ctx context.Context) DeploymentObservabilityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentObservability) *DeploymentObservability {
		return &v
	}).(DeploymentObservabilityPtrOutput)
}

func (o DeploymentObservabilityOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentObservability] {
	return pulumix.Output[DeploymentObservability]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentObservabilityOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentObservability) string { return v.DeploymentId }).(pulumi.StringOutput)
}

func (o DeploymentObservabilityOutput) Logs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentObservability) *bool { return v.Logs }).(pulumi.BoolPtrOutput)
}

func (o DeploymentObservabilityOutput) Metrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentObservability) *bool { return v.Metrics }).(pulumi.BoolPtrOutput)
}

func (o DeploymentObservabilityOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentObservability) *string { return v.RefId }).(pulumi.StringPtrOutput)
}

type DeploymentObservabilityPtrOutput struct{ *pulumi.OutputState }

func (DeploymentObservabilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentObservability)(nil)).Elem()
}

func (o DeploymentObservabilityPtrOutput) ToDeploymentObservabilityPtrOutput() DeploymentObservabilityPtrOutput {
	return o
}

func (o DeploymentObservabilityPtrOutput) ToDeploymentObservabilityPtrOutputWithContext(ctx context.Context) DeploymentObservabilityPtrOutput {
	return o
}

func (o DeploymentObservabilityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DeploymentObservability] {
	return pulumix.Output[*DeploymentObservability]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentObservabilityPtrOutput) Elem() DeploymentObservabilityOutput {
	return o.ApplyT(func(v *DeploymentObservability) DeploymentObservability {
		if v != nil {
			return *v
		}
		var ret DeploymentObservability
		return ret
	}).(DeploymentObservabilityOutput)
}

func (o DeploymentObservabilityPtrOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentObservability) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentObservabilityPtrOutput) Logs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentObservability) *bool {
		if v == nil {
			return nil
		}
		return v.Logs
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentObservabilityPtrOutput) Metrics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeploymentObservability) *bool {
		if v == nil {
			return nil
		}
		return v.Metrics
	}).(pulumi.BoolPtrOutput)
}

func (o DeploymentObservabilityPtrOutput) RefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentObservability) *string {
		if v == nil {
			return nil
		}
		return v.RefId
	}).(pulumi.StringPtrOutput)
}

type DeploymentTrafficFilterRule struct {
	// Azure endpoint GUID. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
	AzureEndpointGuid *string `pulumi:"azureEndpointGuid"`
	// Azure endpoint name. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
	AzureEndpointName *string `pulumi:"azureEndpointName"`
	// Description of this individual rule
	Description *string `pulumi:"description"`
	// Computed rule ID
	Id *string `pulumi:"id"`
	// Traffic filter source: IP address, CIDR mask, or VPC endpoint ID, **only required** when the type is not `azurePrivateEndpoint`
	Source *string `pulumi:"source"`
}

// DeploymentTrafficFilterRuleInput is an input type that accepts DeploymentTrafficFilterRuleArgs and DeploymentTrafficFilterRuleOutput values.
// You can construct a concrete instance of `DeploymentTrafficFilterRuleInput` via:
//
//	DeploymentTrafficFilterRuleArgs{...}
type DeploymentTrafficFilterRuleInput interface {
	pulumi.Input

	ToDeploymentTrafficFilterRuleOutput() DeploymentTrafficFilterRuleOutput
	ToDeploymentTrafficFilterRuleOutputWithContext(context.Context) DeploymentTrafficFilterRuleOutput
}

type DeploymentTrafficFilterRuleArgs struct {
	// Azure endpoint GUID. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
	AzureEndpointGuid pulumi.StringPtrInput `pulumi:"azureEndpointGuid"`
	// Azure endpoint name. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
	AzureEndpointName pulumi.StringPtrInput `pulumi:"azureEndpointName"`
	// Description of this individual rule
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Computed rule ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Traffic filter source: IP address, CIDR mask, or VPC endpoint ID, **only required** when the type is not `azurePrivateEndpoint`
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (DeploymentTrafficFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTrafficFilterRule)(nil)).Elem()
}

func (i DeploymentTrafficFilterRuleArgs) ToDeploymentTrafficFilterRuleOutput() DeploymentTrafficFilterRuleOutput {
	return i.ToDeploymentTrafficFilterRuleOutputWithContext(context.Background())
}

func (i DeploymentTrafficFilterRuleArgs) ToDeploymentTrafficFilterRuleOutputWithContext(ctx context.Context) DeploymentTrafficFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTrafficFilterRuleOutput)
}

func (i DeploymentTrafficFilterRuleArgs) ToOutput(ctx context.Context) pulumix.Output[DeploymentTrafficFilterRule] {
	return pulumix.Output[DeploymentTrafficFilterRule]{
		OutputState: i.ToDeploymentTrafficFilterRuleOutputWithContext(ctx).OutputState,
	}
}

// DeploymentTrafficFilterRuleArrayInput is an input type that accepts DeploymentTrafficFilterRuleArray and DeploymentTrafficFilterRuleArrayOutput values.
// You can construct a concrete instance of `DeploymentTrafficFilterRuleArrayInput` via:
//
//	DeploymentTrafficFilterRuleArray{ DeploymentTrafficFilterRuleArgs{...} }
type DeploymentTrafficFilterRuleArrayInput interface {
	pulumi.Input

	ToDeploymentTrafficFilterRuleArrayOutput() DeploymentTrafficFilterRuleArrayOutput
	ToDeploymentTrafficFilterRuleArrayOutputWithContext(context.Context) DeploymentTrafficFilterRuleArrayOutput
}

type DeploymentTrafficFilterRuleArray []DeploymentTrafficFilterRuleInput

func (DeploymentTrafficFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentTrafficFilterRule)(nil)).Elem()
}

func (i DeploymentTrafficFilterRuleArray) ToDeploymentTrafficFilterRuleArrayOutput() DeploymentTrafficFilterRuleArrayOutput {
	return i.ToDeploymentTrafficFilterRuleArrayOutputWithContext(context.Background())
}

func (i DeploymentTrafficFilterRuleArray) ToDeploymentTrafficFilterRuleArrayOutputWithContext(ctx context.Context) DeploymentTrafficFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTrafficFilterRuleArrayOutput)
}

func (i DeploymentTrafficFilterRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentTrafficFilterRule] {
	return pulumix.Output[[]DeploymentTrafficFilterRule]{
		OutputState: i.ToDeploymentTrafficFilterRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type DeploymentTrafficFilterRuleOutput struct{ *pulumi.OutputState }

func (DeploymentTrafficFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTrafficFilterRule)(nil)).Elem()
}

func (o DeploymentTrafficFilterRuleOutput) ToDeploymentTrafficFilterRuleOutput() DeploymentTrafficFilterRuleOutput {
	return o
}

func (o DeploymentTrafficFilterRuleOutput) ToDeploymentTrafficFilterRuleOutputWithContext(ctx context.Context) DeploymentTrafficFilterRuleOutput {
	return o
}

func (o DeploymentTrafficFilterRuleOutput) ToOutput(ctx context.Context) pulumix.Output[DeploymentTrafficFilterRule] {
	return pulumix.Output[DeploymentTrafficFilterRule]{
		OutputState: o.OutputState,
	}
}

// Azure endpoint GUID. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
func (o DeploymentTrafficFilterRuleOutput) AzureEndpointGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTrafficFilterRule) *string { return v.AzureEndpointGuid }).(pulumi.StringPtrOutput)
}

// Azure endpoint name. Only applicable when the ruleset type is set to `azurePrivateEndpoint`
func (o DeploymentTrafficFilterRuleOutput) AzureEndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTrafficFilterRule) *string { return v.AzureEndpointName }).(pulumi.StringPtrOutput)
}

// Description of this individual rule
func (o DeploymentTrafficFilterRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTrafficFilterRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Computed rule ID
func (o DeploymentTrafficFilterRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTrafficFilterRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Traffic filter source: IP address, CIDR mask, or VPC endpoint ID, **only required** when the type is not `azurePrivateEndpoint`
func (o DeploymentTrafficFilterRuleOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTrafficFilterRule) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type DeploymentTrafficFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (DeploymentTrafficFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentTrafficFilterRule)(nil)).Elem()
}

func (o DeploymentTrafficFilterRuleArrayOutput) ToDeploymentTrafficFilterRuleArrayOutput() DeploymentTrafficFilterRuleArrayOutput {
	return o
}

func (o DeploymentTrafficFilterRuleArrayOutput) ToDeploymentTrafficFilterRuleArrayOutputWithContext(ctx context.Context) DeploymentTrafficFilterRuleArrayOutput {
	return o
}

func (o DeploymentTrafficFilterRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DeploymentTrafficFilterRule] {
	return pulumix.Output[[]DeploymentTrafficFilterRule]{
		OutputState: o.OutputState,
	}
}

func (o DeploymentTrafficFilterRuleArrayOutput) Index(i pulumi.IntInput) DeploymentTrafficFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentTrafficFilterRule {
		return vs[0].([]DeploymentTrafficFilterRule)[vs[1].(int)]
	}).(DeploymentTrafficFilterRuleOutput)
}

type SnapshotRepositoryGeneric struct {
	// An arbitrary JSON object containing the repository settings.
	Settings string `pulumi:"settings"`
	// Repository type
	Type string `pulumi:"type"`
}

// SnapshotRepositoryGenericInput is an input type that accepts SnapshotRepositoryGenericArgs and SnapshotRepositoryGenericOutput values.
// You can construct a concrete instance of `SnapshotRepositoryGenericInput` via:
//
//	SnapshotRepositoryGenericArgs{...}
type SnapshotRepositoryGenericInput interface {
	pulumi.Input

	ToSnapshotRepositoryGenericOutput() SnapshotRepositoryGenericOutput
	ToSnapshotRepositoryGenericOutputWithContext(context.Context) SnapshotRepositoryGenericOutput
}

type SnapshotRepositoryGenericArgs struct {
	// An arbitrary JSON object containing the repository settings.
	Settings pulumi.StringInput `pulumi:"settings"`
	// Repository type
	Type pulumi.StringInput `pulumi:"type"`
}

func (SnapshotRepositoryGenericArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotRepositoryGeneric)(nil)).Elem()
}

func (i SnapshotRepositoryGenericArgs) ToSnapshotRepositoryGenericOutput() SnapshotRepositoryGenericOutput {
	return i.ToSnapshotRepositoryGenericOutputWithContext(context.Background())
}

func (i SnapshotRepositoryGenericArgs) ToSnapshotRepositoryGenericOutputWithContext(ctx context.Context) SnapshotRepositoryGenericOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotRepositoryGenericOutput)
}

func (i SnapshotRepositoryGenericArgs) ToOutput(ctx context.Context) pulumix.Output[SnapshotRepositoryGeneric] {
	return pulumix.Output[SnapshotRepositoryGeneric]{
		OutputState: i.ToSnapshotRepositoryGenericOutputWithContext(ctx).OutputState,
	}
}

func (i SnapshotRepositoryGenericArgs) ToSnapshotRepositoryGenericPtrOutput() SnapshotRepositoryGenericPtrOutput {
	return i.ToSnapshotRepositoryGenericPtrOutputWithContext(context.Background())
}

func (i SnapshotRepositoryGenericArgs) ToSnapshotRepositoryGenericPtrOutputWithContext(ctx context.Context) SnapshotRepositoryGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotRepositoryGenericOutput).ToSnapshotRepositoryGenericPtrOutputWithContext(ctx)
}

// SnapshotRepositoryGenericPtrInput is an input type that accepts SnapshotRepositoryGenericArgs, SnapshotRepositoryGenericPtr and SnapshotRepositoryGenericPtrOutput values.
// You can construct a concrete instance of `SnapshotRepositoryGenericPtrInput` via:
//
//	        SnapshotRepositoryGenericArgs{...}
//
//	or:
//
//	        nil
type SnapshotRepositoryGenericPtrInput interface {
	pulumi.Input

	ToSnapshotRepositoryGenericPtrOutput() SnapshotRepositoryGenericPtrOutput
	ToSnapshotRepositoryGenericPtrOutputWithContext(context.Context) SnapshotRepositoryGenericPtrOutput
}

type snapshotRepositoryGenericPtrType SnapshotRepositoryGenericArgs

func SnapshotRepositoryGenericPtr(v *SnapshotRepositoryGenericArgs) SnapshotRepositoryGenericPtrInput {
	return (*snapshotRepositoryGenericPtrType)(v)
}

func (*snapshotRepositoryGenericPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotRepositoryGeneric)(nil)).Elem()
}

func (i *snapshotRepositoryGenericPtrType) ToSnapshotRepositoryGenericPtrOutput() SnapshotRepositoryGenericPtrOutput {
	return i.ToSnapshotRepositoryGenericPtrOutputWithContext(context.Background())
}

func (i *snapshotRepositoryGenericPtrType) ToSnapshotRepositoryGenericPtrOutputWithContext(ctx context.Context) SnapshotRepositoryGenericPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotRepositoryGenericPtrOutput)
}

func (i *snapshotRepositoryGenericPtrType) ToOutput(ctx context.Context) pulumix.Output[*SnapshotRepositoryGeneric] {
	return pulumix.Output[*SnapshotRepositoryGeneric]{
		OutputState: i.ToSnapshotRepositoryGenericPtrOutputWithContext(ctx).OutputState,
	}
}

type SnapshotRepositoryGenericOutput struct{ *pulumi.OutputState }

func (SnapshotRepositoryGenericOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotRepositoryGeneric)(nil)).Elem()
}

func (o SnapshotRepositoryGenericOutput) ToSnapshotRepositoryGenericOutput() SnapshotRepositoryGenericOutput {
	return o
}

func (o SnapshotRepositoryGenericOutput) ToSnapshotRepositoryGenericOutputWithContext(ctx context.Context) SnapshotRepositoryGenericOutput {
	return o
}

func (o SnapshotRepositoryGenericOutput) ToSnapshotRepositoryGenericPtrOutput() SnapshotRepositoryGenericPtrOutput {
	return o.ToSnapshotRepositoryGenericPtrOutputWithContext(context.Background())
}

func (o SnapshotRepositoryGenericOutput) ToSnapshotRepositoryGenericPtrOutputWithContext(ctx context.Context) SnapshotRepositoryGenericPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotRepositoryGeneric) *SnapshotRepositoryGeneric {
		return &v
	}).(SnapshotRepositoryGenericPtrOutput)
}

func (o SnapshotRepositoryGenericOutput) ToOutput(ctx context.Context) pulumix.Output[SnapshotRepositoryGeneric] {
	return pulumix.Output[SnapshotRepositoryGeneric]{
		OutputState: o.OutputState,
	}
}

// An arbitrary JSON object containing the repository settings.
func (o SnapshotRepositoryGenericOutput) Settings() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotRepositoryGeneric) string { return v.Settings }).(pulumi.StringOutput)
}

// Repository type
func (o SnapshotRepositoryGenericOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotRepositoryGeneric) string { return v.Type }).(pulumi.StringOutput)
}

type SnapshotRepositoryGenericPtrOutput struct{ *pulumi.OutputState }

func (SnapshotRepositoryGenericPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotRepositoryGeneric)(nil)).Elem()
}

func (o SnapshotRepositoryGenericPtrOutput) ToSnapshotRepositoryGenericPtrOutput() SnapshotRepositoryGenericPtrOutput {
	return o
}

func (o SnapshotRepositoryGenericPtrOutput) ToSnapshotRepositoryGenericPtrOutputWithContext(ctx context.Context) SnapshotRepositoryGenericPtrOutput {
	return o
}

func (o SnapshotRepositoryGenericPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SnapshotRepositoryGeneric] {
	return pulumix.Output[*SnapshotRepositoryGeneric]{
		OutputState: o.OutputState,
	}
}

func (o SnapshotRepositoryGenericPtrOutput) Elem() SnapshotRepositoryGenericOutput {
	return o.ApplyT(func(v *SnapshotRepositoryGeneric) SnapshotRepositoryGeneric {
		if v != nil {
			return *v
		}
		var ret SnapshotRepositoryGeneric
		return ret
	}).(SnapshotRepositoryGenericOutput)
}

// An arbitrary JSON object containing the repository settings.
func (o SnapshotRepositoryGenericPtrOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Settings
	}).(pulumi.StringPtrOutput)
}

// Repository type
func (o SnapshotRepositoryGenericPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryGeneric) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SnapshotRepositoryS3 struct {
	// An S3 access key. If set, the secretKey setting must also be specified. If unset, the client will use the instance or container role instead.
	AccessKey *string `pulumi:"accessKey"`
	// Name of the S3 bucket to use for snapshots.
	Bucket string `pulumi:"bucket"`
	// The S3 service endpoint to connect to. This defaults to s3.amazonaws.com but the AWS documentation lists alternative S3 endpoints. If you are using an S3-compatible service then you should set this to the service’s endpoint.
	Endpoint *string `pulumi:"endpoint"`
	// Whether to force the use of the path style access pattern. If true, the path style access pattern will be used. If false, the access pattern will be automatically determined by the AWS Java SDK (See AWS documentation for details). Defaults to false.
	PathStyleAccess *bool `pulumi:"pathStyleAccess"`
	// Allows specifying the signing region to use. Specifying this setting manually should not be necessary for most use cases. Generally, the SDK will correctly guess the signing region to use. It should be considered an expert level setting to support S3-compatible APIs that require v4 signatures and use a region other than the default us-east-1. Defaults to empty string which means that the SDK will try to automatically determine the correct signing region.
	Region *string `pulumi:"region"`
	// An S3 secret key. If set, the accessKey setting must also be specified.
	SecretKey *string `pulumi:"secretKey"`
	// When set to true files are encrypted on server side using AES256 algorithm. Defaults to false.
	ServerSideEncryption *bool `pulumi:"serverSideEncryption"`
}

// SnapshotRepositoryS3Input is an input type that accepts SnapshotRepositoryS3Args and SnapshotRepositoryS3Output values.
// You can construct a concrete instance of `SnapshotRepositoryS3Input` via:
//
//	SnapshotRepositoryS3Args{...}
type SnapshotRepositoryS3Input interface {
	pulumi.Input

	ToSnapshotRepositoryS3Output() SnapshotRepositoryS3Output
	ToSnapshotRepositoryS3OutputWithContext(context.Context) SnapshotRepositoryS3Output
}

type SnapshotRepositoryS3Args struct {
	// An S3 access key. If set, the secretKey setting must also be specified. If unset, the client will use the instance or container role instead.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Name of the S3 bucket to use for snapshots.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// The S3 service endpoint to connect to. This defaults to s3.amazonaws.com but the AWS documentation lists alternative S3 endpoints. If you are using an S3-compatible service then you should set this to the service’s endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Whether to force the use of the path style access pattern. If true, the path style access pattern will be used. If false, the access pattern will be automatically determined by the AWS Java SDK (See AWS documentation for details). Defaults to false.
	PathStyleAccess pulumi.BoolPtrInput `pulumi:"pathStyleAccess"`
	// Allows specifying the signing region to use. Specifying this setting manually should not be necessary for most use cases. Generally, the SDK will correctly guess the signing region to use. It should be considered an expert level setting to support S3-compatible APIs that require v4 signatures and use a region other than the default us-east-1. Defaults to empty string which means that the SDK will try to automatically determine the correct signing region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// An S3 secret key. If set, the accessKey setting must also be specified.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// When set to true files are encrypted on server side using AES256 algorithm. Defaults to false.
	ServerSideEncryption pulumi.BoolPtrInput `pulumi:"serverSideEncryption"`
}

func (SnapshotRepositoryS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotRepositoryS3)(nil)).Elem()
}

func (i SnapshotRepositoryS3Args) ToSnapshotRepositoryS3Output() SnapshotRepositoryS3Output {
	return i.ToSnapshotRepositoryS3OutputWithContext(context.Background())
}

func (i SnapshotRepositoryS3Args) ToSnapshotRepositoryS3OutputWithContext(ctx context.Context) SnapshotRepositoryS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotRepositoryS3Output)
}

func (i SnapshotRepositoryS3Args) ToOutput(ctx context.Context) pulumix.Output[SnapshotRepositoryS3] {
	return pulumix.Output[SnapshotRepositoryS3]{
		OutputState: i.ToSnapshotRepositoryS3OutputWithContext(ctx).OutputState,
	}
}

func (i SnapshotRepositoryS3Args) ToSnapshotRepositoryS3PtrOutput() SnapshotRepositoryS3PtrOutput {
	return i.ToSnapshotRepositoryS3PtrOutputWithContext(context.Background())
}

func (i SnapshotRepositoryS3Args) ToSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) SnapshotRepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotRepositoryS3Output).ToSnapshotRepositoryS3PtrOutputWithContext(ctx)
}

// SnapshotRepositoryS3PtrInput is an input type that accepts SnapshotRepositoryS3Args, SnapshotRepositoryS3Ptr and SnapshotRepositoryS3PtrOutput values.
// You can construct a concrete instance of `SnapshotRepositoryS3PtrInput` via:
//
//	        SnapshotRepositoryS3Args{...}
//
//	or:
//
//	        nil
type SnapshotRepositoryS3PtrInput interface {
	pulumi.Input

	ToSnapshotRepositoryS3PtrOutput() SnapshotRepositoryS3PtrOutput
	ToSnapshotRepositoryS3PtrOutputWithContext(context.Context) SnapshotRepositoryS3PtrOutput
}

type snapshotRepositoryS3PtrType SnapshotRepositoryS3Args

func SnapshotRepositoryS3Ptr(v *SnapshotRepositoryS3Args) SnapshotRepositoryS3PtrInput {
	return (*snapshotRepositoryS3PtrType)(v)
}

func (*snapshotRepositoryS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotRepositoryS3)(nil)).Elem()
}

func (i *snapshotRepositoryS3PtrType) ToSnapshotRepositoryS3PtrOutput() SnapshotRepositoryS3PtrOutput {
	return i.ToSnapshotRepositoryS3PtrOutputWithContext(context.Background())
}

func (i *snapshotRepositoryS3PtrType) ToSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) SnapshotRepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotRepositoryS3PtrOutput)
}

func (i *snapshotRepositoryS3PtrType) ToOutput(ctx context.Context) pulumix.Output[*SnapshotRepositoryS3] {
	return pulumix.Output[*SnapshotRepositoryS3]{
		OutputState: i.ToSnapshotRepositoryS3PtrOutputWithContext(ctx).OutputState,
	}
}

type SnapshotRepositoryS3Output struct{ *pulumi.OutputState }

func (SnapshotRepositoryS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotRepositoryS3)(nil)).Elem()
}

func (o SnapshotRepositoryS3Output) ToSnapshotRepositoryS3Output() SnapshotRepositoryS3Output {
	return o
}

func (o SnapshotRepositoryS3Output) ToSnapshotRepositoryS3OutputWithContext(ctx context.Context) SnapshotRepositoryS3Output {
	return o
}

func (o SnapshotRepositoryS3Output) ToSnapshotRepositoryS3PtrOutput() SnapshotRepositoryS3PtrOutput {
	return o.ToSnapshotRepositoryS3PtrOutputWithContext(context.Background())
}

func (o SnapshotRepositoryS3Output) ToSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) SnapshotRepositoryS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotRepositoryS3) *SnapshotRepositoryS3 {
		return &v
	}).(SnapshotRepositoryS3PtrOutput)
}

func (o SnapshotRepositoryS3Output) ToOutput(ctx context.Context) pulumix.Output[SnapshotRepositoryS3] {
	return pulumix.Output[SnapshotRepositoryS3]{
		OutputState: o.OutputState,
	}
}

// An S3 access key. If set, the secretKey setting must also be specified. If unset, the client will use the instance or container role instead.
func (o SnapshotRepositoryS3Output) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotRepositoryS3) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Name of the S3 bucket to use for snapshots.
func (o SnapshotRepositoryS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v SnapshotRepositoryS3) string { return v.Bucket }).(pulumi.StringOutput)
}

// The S3 service endpoint to connect to. This defaults to s3.amazonaws.com but the AWS documentation lists alternative S3 endpoints. If you are using an S3-compatible service then you should set this to the service’s endpoint.
func (o SnapshotRepositoryS3Output) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotRepositoryS3) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Whether to force the use of the path style access pattern. If true, the path style access pattern will be used. If false, the access pattern will be automatically determined by the AWS Java SDK (See AWS documentation for details). Defaults to false.
func (o SnapshotRepositoryS3Output) PathStyleAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnapshotRepositoryS3) *bool { return v.PathStyleAccess }).(pulumi.BoolPtrOutput)
}

// Allows specifying the signing region to use. Specifying this setting manually should not be necessary for most use cases. Generally, the SDK will correctly guess the signing region to use. It should be considered an expert level setting to support S3-compatible APIs that require v4 signatures and use a region other than the default us-east-1. Defaults to empty string which means that the SDK will try to automatically determine the correct signing region.
func (o SnapshotRepositoryS3Output) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotRepositoryS3) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// An S3 secret key. If set, the accessKey setting must also be specified.
func (o SnapshotRepositoryS3Output) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SnapshotRepositoryS3) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// When set to true files are encrypted on server side using AES256 algorithm. Defaults to false.
func (o SnapshotRepositoryS3Output) ServerSideEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SnapshotRepositoryS3) *bool { return v.ServerSideEncryption }).(pulumi.BoolPtrOutput)
}

type SnapshotRepositoryS3PtrOutput struct{ *pulumi.OutputState }

func (SnapshotRepositoryS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotRepositoryS3)(nil)).Elem()
}

func (o SnapshotRepositoryS3PtrOutput) ToSnapshotRepositoryS3PtrOutput() SnapshotRepositoryS3PtrOutput {
	return o
}

func (o SnapshotRepositoryS3PtrOutput) ToSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) SnapshotRepositoryS3PtrOutput {
	return o
}

func (o SnapshotRepositoryS3PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SnapshotRepositoryS3] {
	return pulumix.Output[*SnapshotRepositoryS3]{
		OutputState: o.OutputState,
	}
}

func (o SnapshotRepositoryS3PtrOutput) Elem() SnapshotRepositoryS3Output {
	return o.ApplyT(func(v *SnapshotRepositoryS3) SnapshotRepositoryS3 {
		if v != nil {
			return *v
		}
		var ret SnapshotRepositoryS3
		return ret
	}).(SnapshotRepositoryS3Output)
}

// An S3 access key. If set, the secretKey setting must also be specified. If unset, the client will use the instance or container role instead.
func (o SnapshotRepositoryS3PtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Name of the S3 bucket to use for snapshots.
func (o SnapshotRepositoryS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// The S3 service endpoint to connect to. This defaults to s3.amazonaws.com but the AWS documentation lists alternative S3 endpoints. If you are using an S3-compatible service then you should set this to the service’s endpoint.
func (o SnapshotRepositoryS3PtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Whether to force the use of the path style access pattern. If true, the path style access pattern will be used. If false, the access pattern will be automatically determined by the AWS Java SDK (See AWS documentation for details). Defaults to false.
func (o SnapshotRepositoryS3PtrOutput) PathStyleAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryS3) *bool {
		if v == nil {
			return nil
		}
		return v.PathStyleAccess
	}).(pulumi.BoolPtrOutput)
}

// Allows specifying the signing region to use. Specifying this setting manually should not be necessary for most use cases. Generally, the SDK will correctly guess the signing region to use. It should be considered an expert level setting to support S3-compatible APIs that require v4 signatures and use a region other than the default us-east-1. Defaults to empty string which means that the SDK will try to automatically determine the correct signing region.
func (o SnapshotRepositoryS3PtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// An S3 secret key. If set, the accessKey setting must also be specified.
func (o SnapshotRepositoryS3PtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// When set to true files are encrypted on server side using AES256 algorithm. Defaults to false.
func (o SnapshotRepositoryS3PtrOutput) ServerSideEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SnapshotRepositoryS3) *bool {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryption
	}).(pulumi.BoolPtrOutput)
}

type GetDeploymentApm struct {
	// The locally-unique user-specified id of an APM Resource.
	ElasticsearchClusterRefId string `pulumi:"elasticsearchClusterRefId"`
	// APM resource health status.
	Healthy bool `pulumi:"healthy"`
	// HTTP endpoint for the APM resource.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the APM resource.
	HttpsEndpoint string `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this APM resource.
	RefId string `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId string `pulumi:"resourceId"`
	// APM resource status (for example, "started", "stopped", etc).
	Status string `pulumi:"status"`
	// Node topology element definition.
	Topologies []GetDeploymentApmTopology `pulumi:"topologies"`
	// Elastic stack version.
	Version string `pulumi:"version"`
}

// GetDeploymentApmInput is an input type that accepts GetDeploymentApmArgs and GetDeploymentApmOutput values.
// You can construct a concrete instance of `GetDeploymentApmInput` via:
//
//	GetDeploymentApmArgs{...}
type GetDeploymentApmInput interface {
	pulumi.Input

	ToGetDeploymentApmOutput() GetDeploymentApmOutput
	ToGetDeploymentApmOutputWithContext(context.Context) GetDeploymentApmOutput
}

type GetDeploymentApmArgs struct {
	// The locally-unique user-specified id of an APM Resource.
	ElasticsearchClusterRefId pulumi.StringInput `pulumi:"elasticsearchClusterRefId"`
	// APM resource health status.
	Healthy pulumi.BoolInput `pulumi:"healthy"`
	// HTTP endpoint for the APM resource.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the APM resource.
	HttpsEndpoint pulumi.StringInput `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this APM resource.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// APM resource status (for example, "started", "stopped", etc).
	Status pulumi.StringInput `pulumi:"status"`
	// Node topology element definition.
	Topologies GetDeploymentApmTopologyArrayInput `pulumi:"topologies"`
	// Elastic stack version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDeploymentApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentApm)(nil)).Elem()
}

func (i GetDeploymentApmArgs) ToGetDeploymentApmOutput() GetDeploymentApmOutput {
	return i.ToGetDeploymentApmOutputWithContext(context.Background())
}

func (i GetDeploymentApmArgs) ToGetDeploymentApmOutputWithContext(ctx context.Context) GetDeploymentApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentApmOutput)
}

func (i GetDeploymentApmArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentApm] {
	return pulumix.Output[GetDeploymentApm]{
		OutputState: i.ToGetDeploymentApmOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentApmArrayInput is an input type that accepts GetDeploymentApmArray and GetDeploymentApmArrayOutput values.
// You can construct a concrete instance of `GetDeploymentApmArrayInput` via:
//
//	GetDeploymentApmArray{ GetDeploymentApmArgs{...} }
type GetDeploymentApmArrayInput interface {
	pulumi.Input

	ToGetDeploymentApmArrayOutput() GetDeploymentApmArrayOutput
	ToGetDeploymentApmArrayOutputWithContext(context.Context) GetDeploymentApmArrayOutput
}

type GetDeploymentApmArray []GetDeploymentApmInput

func (GetDeploymentApmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentApm)(nil)).Elem()
}

func (i GetDeploymentApmArray) ToGetDeploymentApmArrayOutput() GetDeploymentApmArrayOutput {
	return i.ToGetDeploymentApmArrayOutputWithContext(context.Background())
}

func (i GetDeploymentApmArray) ToGetDeploymentApmArrayOutputWithContext(ctx context.Context) GetDeploymentApmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentApmArrayOutput)
}

func (i GetDeploymentApmArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentApm] {
	return pulumix.Output[[]GetDeploymentApm]{
		OutputState: i.ToGetDeploymentApmArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentApmOutput struct{ *pulumi.OutputState }

func (GetDeploymentApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentApm)(nil)).Elem()
}

func (o GetDeploymentApmOutput) ToGetDeploymentApmOutput() GetDeploymentApmOutput {
	return o
}

func (o GetDeploymentApmOutput) ToGetDeploymentApmOutputWithContext(ctx context.Context) GetDeploymentApmOutput {
	return o
}

func (o GetDeploymentApmOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentApm] {
	return pulumix.Output[GetDeploymentApm]{
		OutputState: o.OutputState,
	}
}

// The locally-unique user-specified id of an APM Resource.
func (o GetDeploymentApmOutput) ElasticsearchClusterRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApm) string { return v.ElasticsearchClusterRefId }).(pulumi.StringOutput)
}

// APM resource health status.
func (o GetDeploymentApmOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentApm) bool { return v.Healthy }).(pulumi.BoolOutput)
}

// HTTP endpoint for the APM resource.
func (o GetDeploymentApmOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApm) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// HTTPS endpoint for the APM resource.
func (o GetDeploymentApmOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApm) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

// A locally-unique friendly alias for this APM resource.
func (o GetDeploymentApmOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApm) string { return v.RefId }).(pulumi.StringOutput)
}

// The resource unique identifier.
func (o GetDeploymentApmOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApm) string { return v.ResourceId }).(pulumi.StringOutput)
}

// APM resource status (for example, "started", "stopped", etc).
func (o GetDeploymentApmOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApm) string { return v.Status }).(pulumi.StringOutput)
}

// Node topology element definition.
func (o GetDeploymentApmOutput) Topologies() GetDeploymentApmTopologyArrayOutput {
	return o.ApplyT(func(v GetDeploymentApm) []GetDeploymentApmTopology { return v.Topologies }).(GetDeploymentApmTopologyArrayOutput)
}

// Elastic stack version.
func (o GetDeploymentApmOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApm) string { return v.Version }).(pulumi.StringOutput)
}

type GetDeploymentApmArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentApmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentApm)(nil)).Elem()
}

func (o GetDeploymentApmArrayOutput) ToGetDeploymentApmArrayOutput() GetDeploymentApmArrayOutput {
	return o
}

func (o GetDeploymentApmArrayOutput) ToGetDeploymentApmArrayOutputWithContext(ctx context.Context) GetDeploymentApmArrayOutput {
	return o
}

func (o GetDeploymentApmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentApm] {
	return pulumix.Output[[]GetDeploymentApm]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentApmArrayOutput) Index(i pulumi.IntInput) GetDeploymentApmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentApm {
		return vs[0].([]GetDeploymentApm)[vs[1].(int)]
	}).(GetDeploymentApmOutput)
}

type GetDeploymentApmTopology struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size string `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource string `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount int `pulumi:"zoneCount"`
}

// GetDeploymentApmTopologyInput is an input type that accepts GetDeploymentApmTopologyArgs and GetDeploymentApmTopologyOutput values.
// You can construct a concrete instance of `GetDeploymentApmTopologyInput` via:
//
//	GetDeploymentApmTopologyArgs{...}
type GetDeploymentApmTopologyInput interface {
	pulumi.Input

	ToGetDeploymentApmTopologyOutput() GetDeploymentApmTopologyOutput
	ToGetDeploymentApmTopologyOutputWithContext(context.Context) GetDeploymentApmTopologyOutput
}

type GetDeploymentApmTopologyArgs struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size pulumi.StringInput `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource pulumi.StringInput `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount pulumi.IntInput `pulumi:"zoneCount"`
}

func (GetDeploymentApmTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentApmTopology)(nil)).Elem()
}

func (i GetDeploymentApmTopologyArgs) ToGetDeploymentApmTopologyOutput() GetDeploymentApmTopologyOutput {
	return i.ToGetDeploymentApmTopologyOutputWithContext(context.Background())
}

func (i GetDeploymentApmTopologyArgs) ToGetDeploymentApmTopologyOutputWithContext(ctx context.Context) GetDeploymentApmTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentApmTopologyOutput)
}

func (i GetDeploymentApmTopologyArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentApmTopology] {
	return pulumix.Output[GetDeploymentApmTopology]{
		OutputState: i.ToGetDeploymentApmTopologyOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentApmTopologyArrayInput is an input type that accepts GetDeploymentApmTopologyArray and GetDeploymentApmTopologyArrayOutput values.
// You can construct a concrete instance of `GetDeploymentApmTopologyArrayInput` via:
//
//	GetDeploymentApmTopologyArray{ GetDeploymentApmTopologyArgs{...} }
type GetDeploymentApmTopologyArrayInput interface {
	pulumi.Input

	ToGetDeploymentApmTopologyArrayOutput() GetDeploymentApmTopologyArrayOutput
	ToGetDeploymentApmTopologyArrayOutputWithContext(context.Context) GetDeploymentApmTopologyArrayOutput
}

type GetDeploymentApmTopologyArray []GetDeploymentApmTopologyInput

func (GetDeploymentApmTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentApmTopology)(nil)).Elem()
}

func (i GetDeploymentApmTopologyArray) ToGetDeploymentApmTopologyArrayOutput() GetDeploymentApmTopologyArrayOutput {
	return i.ToGetDeploymentApmTopologyArrayOutputWithContext(context.Background())
}

func (i GetDeploymentApmTopologyArray) ToGetDeploymentApmTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentApmTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentApmTopologyArrayOutput)
}

func (i GetDeploymentApmTopologyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentApmTopology] {
	return pulumix.Output[[]GetDeploymentApmTopology]{
		OutputState: i.ToGetDeploymentApmTopologyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentApmTopologyOutput struct{ *pulumi.OutputState }

func (GetDeploymentApmTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentApmTopology)(nil)).Elem()
}

func (o GetDeploymentApmTopologyOutput) ToGetDeploymentApmTopologyOutput() GetDeploymentApmTopologyOutput {
	return o
}

func (o GetDeploymentApmTopologyOutput) ToGetDeploymentApmTopologyOutputWithContext(ctx context.Context) GetDeploymentApmTopologyOutput {
	return o
}

func (o GetDeploymentApmTopologyOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentApmTopology] {
	return pulumix.Output[GetDeploymentApmTopology]{
		OutputState: o.OutputState,
	}
}

// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
func (o GetDeploymentApmTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApmTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

// Amount of "sizeResource" in Gigabytes. For example "4g".
func (o GetDeploymentApmTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApmTopology) string { return v.Size }).(pulumi.StringOutput)
}

// Type of resource ("memory" or "storage")
func (o GetDeploymentApmTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentApmTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

// Number of zones in which nodes will be placed.
func (o GetDeploymentApmTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeploymentApmTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetDeploymentApmTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentApmTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentApmTopology)(nil)).Elem()
}

func (o GetDeploymentApmTopologyArrayOutput) ToGetDeploymentApmTopologyArrayOutput() GetDeploymentApmTopologyArrayOutput {
	return o
}

func (o GetDeploymentApmTopologyArrayOutput) ToGetDeploymentApmTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentApmTopologyArrayOutput {
	return o
}

func (o GetDeploymentApmTopologyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentApmTopology] {
	return pulumix.Output[[]GetDeploymentApmTopology]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentApmTopologyArrayOutput) Index(i pulumi.IntInput) GetDeploymentApmTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentApmTopology {
		return vs[0].([]GetDeploymentApmTopology)[vs[1].(int)]
	}).(GetDeploymentApmTopologyOutput)
}

type GetDeploymentElasticsearch struct {
	// Whether or not Elasticsearch autoscaling is enabled.
	Autoscale string `pulumi:"autoscale"`
	// The cloud ID, an encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana. See [Configure Beats and Logstash with Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html) for more information.
	CloudId string `pulumi:"cloudId"`
	// Elasticsearch resource health status.
	Healthy bool `pulumi:"healthy"`
	// HTTP endpoint for the Elasticsearch resource.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the Elasticsearch resource.
	HttpsEndpoint string `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Elasticsearch cluster.
	RefId string `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId string `pulumi:"resourceId"`
	// Elasticsearch resource status (for example, "started", "stopped", etc).
	Status string `pulumi:"status"`
	// Node topology element definition.
	Topologies []GetDeploymentElasticsearchTopology `pulumi:"topologies"`
	// Elastic stack version.
	Version string `pulumi:"version"`
}

// GetDeploymentElasticsearchInput is an input type that accepts GetDeploymentElasticsearchArgs and GetDeploymentElasticsearchOutput values.
// You can construct a concrete instance of `GetDeploymentElasticsearchInput` via:
//
//	GetDeploymentElasticsearchArgs{...}
type GetDeploymentElasticsearchInput interface {
	pulumi.Input

	ToGetDeploymentElasticsearchOutput() GetDeploymentElasticsearchOutput
	ToGetDeploymentElasticsearchOutputWithContext(context.Context) GetDeploymentElasticsearchOutput
}

type GetDeploymentElasticsearchArgs struct {
	// Whether or not Elasticsearch autoscaling is enabled.
	Autoscale pulumi.StringInput `pulumi:"autoscale"`
	// The cloud ID, an encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana. See [Configure Beats and Logstash with Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html) for more information.
	CloudId pulumi.StringInput `pulumi:"cloudId"`
	// Elasticsearch resource health status.
	Healthy pulumi.BoolInput `pulumi:"healthy"`
	// HTTP endpoint for the Elasticsearch resource.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the Elasticsearch resource.
	HttpsEndpoint pulumi.StringInput `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Elasticsearch cluster.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Elasticsearch resource status (for example, "started", "stopped", etc).
	Status pulumi.StringInput `pulumi:"status"`
	// Node topology element definition.
	Topologies GetDeploymentElasticsearchTopologyArrayInput `pulumi:"topologies"`
	// Elastic stack version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDeploymentElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentElasticsearch)(nil)).Elem()
}

func (i GetDeploymentElasticsearchArgs) ToGetDeploymentElasticsearchOutput() GetDeploymentElasticsearchOutput {
	return i.ToGetDeploymentElasticsearchOutputWithContext(context.Background())
}

func (i GetDeploymentElasticsearchArgs) ToGetDeploymentElasticsearchOutputWithContext(ctx context.Context) GetDeploymentElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentElasticsearchOutput)
}

func (i GetDeploymentElasticsearchArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentElasticsearch] {
	return pulumix.Output[GetDeploymentElasticsearch]{
		OutputState: i.ToGetDeploymentElasticsearchOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentElasticsearchArrayInput is an input type that accepts GetDeploymentElasticsearchArray and GetDeploymentElasticsearchArrayOutput values.
// You can construct a concrete instance of `GetDeploymentElasticsearchArrayInput` via:
//
//	GetDeploymentElasticsearchArray{ GetDeploymentElasticsearchArgs{...} }
type GetDeploymentElasticsearchArrayInput interface {
	pulumi.Input

	ToGetDeploymentElasticsearchArrayOutput() GetDeploymentElasticsearchArrayOutput
	ToGetDeploymentElasticsearchArrayOutputWithContext(context.Context) GetDeploymentElasticsearchArrayOutput
}

type GetDeploymentElasticsearchArray []GetDeploymentElasticsearchInput

func (GetDeploymentElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentElasticsearch)(nil)).Elem()
}

func (i GetDeploymentElasticsearchArray) ToGetDeploymentElasticsearchArrayOutput() GetDeploymentElasticsearchArrayOutput {
	return i.ToGetDeploymentElasticsearchArrayOutputWithContext(context.Background())
}

func (i GetDeploymentElasticsearchArray) ToGetDeploymentElasticsearchArrayOutputWithContext(ctx context.Context) GetDeploymentElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentElasticsearchArrayOutput)
}

func (i GetDeploymentElasticsearchArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentElasticsearch] {
	return pulumix.Output[[]GetDeploymentElasticsearch]{
		OutputState: i.ToGetDeploymentElasticsearchArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentElasticsearchOutput struct{ *pulumi.OutputState }

func (GetDeploymentElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentElasticsearch)(nil)).Elem()
}

func (o GetDeploymentElasticsearchOutput) ToGetDeploymentElasticsearchOutput() GetDeploymentElasticsearchOutput {
	return o
}

func (o GetDeploymentElasticsearchOutput) ToGetDeploymentElasticsearchOutputWithContext(ctx context.Context) GetDeploymentElasticsearchOutput {
	return o
}

func (o GetDeploymentElasticsearchOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentElasticsearch] {
	return pulumix.Output[GetDeploymentElasticsearch]{
		OutputState: o.OutputState,
	}
}

// Whether or not Elasticsearch autoscaling is enabled.
func (o GetDeploymentElasticsearchOutput) Autoscale() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.Autoscale }).(pulumi.StringOutput)
}

// The cloud ID, an encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana. See [Configure Beats and Logstash with Cloud ID](https://www.elastic.co/guide/en/cloud/current/ec-cloud-id.html) for more information.
func (o GetDeploymentElasticsearchOutput) CloudId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.CloudId }).(pulumi.StringOutput)
}

// Elasticsearch resource health status.
func (o GetDeploymentElasticsearchOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) bool { return v.Healthy }).(pulumi.BoolOutput)
}

// HTTP endpoint for the Elasticsearch resource.
func (o GetDeploymentElasticsearchOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// HTTPS endpoint for the Elasticsearch resource.
func (o GetDeploymentElasticsearchOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

// A locally-unique friendly alias for this Elasticsearch cluster.
func (o GetDeploymentElasticsearchOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.RefId }).(pulumi.StringOutput)
}

// The resource unique identifier.
func (o GetDeploymentElasticsearchOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Elasticsearch resource status (for example, "started", "stopped", etc).
func (o GetDeploymentElasticsearchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.Status }).(pulumi.StringOutput)
}

// Node topology element definition.
func (o GetDeploymentElasticsearchOutput) Topologies() GetDeploymentElasticsearchTopologyArrayOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) []GetDeploymentElasticsearchTopology { return v.Topologies }).(GetDeploymentElasticsearchTopologyArrayOutput)
}

// Elastic stack version.
func (o GetDeploymentElasticsearchOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearch) string { return v.Version }).(pulumi.StringOutput)
}

type GetDeploymentElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentElasticsearch)(nil)).Elem()
}

func (o GetDeploymentElasticsearchArrayOutput) ToGetDeploymentElasticsearchArrayOutput() GetDeploymentElasticsearchArrayOutput {
	return o
}

func (o GetDeploymentElasticsearchArrayOutput) ToGetDeploymentElasticsearchArrayOutputWithContext(ctx context.Context) GetDeploymentElasticsearchArrayOutput {
	return o
}

func (o GetDeploymentElasticsearchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentElasticsearch] {
	return pulumix.Output[[]GetDeploymentElasticsearch]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentElasticsearchArrayOutput) Index(i pulumi.IntInput) GetDeploymentElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentElasticsearch {
		return vs[0].([]GetDeploymentElasticsearch)[vs[1].(int)]
	}).(GetDeploymentElasticsearchOutput)
}

type GetDeploymentElasticsearchTopology struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscalings []GetDeploymentElasticsearchTopologyAutoscaling `pulumi:"autoscalings"`
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	// Defines the list of Elasticsearch node roles assigned to the topology element. This is supported from v7.10, and required from v8.
	NodeRoles []string `pulumi:"nodeRoles"`
	// Defines whether this node can hold data (\n\n).
	NodeTypeData bool `pulumi:"nodeTypeData"`
	// Defines whether this node can run an ingest pipeline (\n\n).
	NodeTypeIngest bool `pulumi:"nodeTypeIngest"`
	// Defines whether this node can be elected master (\n\n).
	NodeTypeMaster bool `pulumi:"nodeTypeMaster"`
	// Defines whether this node can run ML jobs (\n\n).
	NodeTypeMl bool `pulumi:"nodeTypeMl"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size string `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource string `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount int `pulumi:"zoneCount"`
}

// GetDeploymentElasticsearchTopologyInput is an input type that accepts GetDeploymentElasticsearchTopologyArgs and GetDeploymentElasticsearchTopologyOutput values.
// You can construct a concrete instance of `GetDeploymentElasticsearchTopologyInput` via:
//
//	GetDeploymentElasticsearchTopologyArgs{...}
type GetDeploymentElasticsearchTopologyInput interface {
	pulumi.Input

	ToGetDeploymentElasticsearchTopologyOutput() GetDeploymentElasticsearchTopologyOutput
	ToGetDeploymentElasticsearchTopologyOutputWithContext(context.Context) GetDeploymentElasticsearchTopologyOutput
}

type GetDeploymentElasticsearchTopologyArgs struct {
	// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
	Autoscalings GetDeploymentElasticsearchTopologyAutoscalingArrayInput `pulumi:"autoscalings"`
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	// Defines the list of Elasticsearch node roles assigned to the topology element. This is supported from v7.10, and required from v8.
	NodeRoles pulumi.StringArrayInput `pulumi:"nodeRoles"`
	// Defines whether this node can hold data (\n\n).
	NodeTypeData pulumi.BoolInput `pulumi:"nodeTypeData"`
	// Defines whether this node can run an ingest pipeline (\n\n).
	NodeTypeIngest pulumi.BoolInput `pulumi:"nodeTypeIngest"`
	// Defines whether this node can be elected master (\n\n).
	NodeTypeMaster pulumi.BoolInput `pulumi:"nodeTypeMaster"`
	// Defines whether this node can run ML jobs (\n\n).
	NodeTypeMl pulumi.BoolInput `pulumi:"nodeTypeMl"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size pulumi.StringInput `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource pulumi.StringInput `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount pulumi.IntInput `pulumi:"zoneCount"`
}

func (GetDeploymentElasticsearchTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentElasticsearchTopology)(nil)).Elem()
}

func (i GetDeploymentElasticsearchTopologyArgs) ToGetDeploymentElasticsearchTopologyOutput() GetDeploymentElasticsearchTopologyOutput {
	return i.ToGetDeploymentElasticsearchTopologyOutputWithContext(context.Background())
}

func (i GetDeploymentElasticsearchTopologyArgs) ToGetDeploymentElasticsearchTopologyOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentElasticsearchTopologyOutput)
}

func (i GetDeploymentElasticsearchTopologyArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentElasticsearchTopology] {
	return pulumix.Output[GetDeploymentElasticsearchTopology]{
		OutputState: i.ToGetDeploymentElasticsearchTopologyOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentElasticsearchTopologyArrayInput is an input type that accepts GetDeploymentElasticsearchTopologyArray and GetDeploymentElasticsearchTopologyArrayOutput values.
// You can construct a concrete instance of `GetDeploymentElasticsearchTopologyArrayInput` via:
//
//	GetDeploymentElasticsearchTopologyArray{ GetDeploymentElasticsearchTopologyArgs{...} }
type GetDeploymentElasticsearchTopologyArrayInput interface {
	pulumi.Input

	ToGetDeploymentElasticsearchTopologyArrayOutput() GetDeploymentElasticsearchTopologyArrayOutput
	ToGetDeploymentElasticsearchTopologyArrayOutputWithContext(context.Context) GetDeploymentElasticsearchTopologyArrayOutput
}

type GetDeploymentElasticsearchTopologyArray []GetDeploymentElasticsearchTopologyInput

func (GetDeploymentElasticsearchTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentElasticsearchTopology)(nil)).Elem()
}

func (i GetDeploymentElasticsearchTopologyArray) ToGetDeploymentElasticsearchTopologyArrayOutput() GetDeploymentElasticsearchTopologyArrayOutput {
	return i.ToGetDeploymentElasticsearchTopologyArrayOutputWithContext(context.Background())
}

func (i GetDeploymentElasticsearchTopologyArray) ToGetDeploymentElasticsearchTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentElasticsearchTopologyArrayOutput)
}

func (i GetDeploymentElasticsearchTopologyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentElasticsearchTopology] {
	return pulumix.Output[[]GetDeploymentElasticsearchTopology]{
		OutputState: i.ToGetDeploymentElasticsearchTopologyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentElasticsearchTopologyOutput struct{ *pulumi.OutputState }

func (GetDeploymentElasticsearchTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentElasticsearchTopology)(nil)).Elem()
}

func (o GetDeploymentElasticsearchTopologyOutput) ToGetDeploymentElasticsearchTopologyOutput() GetDeploymentElasticsearchTopologyOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyOutput) ToGetDeploymentElasticsearchTopologyOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentElasticsearchTopology] {
	return pulumix.Output[GetDeploymentElasticsearchTopology]{
		OutputState: o.OutputState,
	}
}

// Optional Elasticsearch autoscaling settings, such a maximum and minimum size and resources.
func (o GetDeploymentElasticsearchTopologyOutput) Autoscalings() GetDeploymentElasticsearchTopologyAutoscalingArrayOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) []GetDeploymentElasticsearchTopologyAutoscaling {
		return v.Autoscalings
	}).(GetDeploymentElasticsearchTopologyAutoscalingArrayOutput)
}

// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
func (o GetDeploymentElasticsearchTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

// Defines the list of Elasticsearch node roles assigned to the topology element. This is supported from v7.10, and required from v8.
func (o GetDeploymentElasticsearchTopologyOutput) NodeRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) []string { return v.NodeRoles }).(pulumi.StringArrayOutput)
}

// Defines whether this node can hold data (\n\n).
func (o GetDeploymentElasticsearchTopologyOutput) NodeTypeData() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) bool { return v.NodeTypeData }).(pulumi.BoolOutput)
}

// Defines whether this node can run an ingest pipeline (\n\n).
func (o GetDeploymentElasticsearchTopologyOutput) NodeTypeIngest() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) bool { return v.NodeTypeIngest }).(pulumi.BoolOutput)
}

// Defines whether this node can be elected master (\n\n).
func (o GetDeploymentElasticsearchTopologyOutput) NodeTypeMaster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) bool { return v.NodeTypeMaster }).(pulumi.BoolOutput)
}

// Defines whether this node can run ML jobs (\n\n).
func (o GetDeploymentElasticsearchTopologyOutput) NodeTypeMl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) bool { return v.NodeTypeMl }).(pulumi.BoolOutput)
}

// Amount of "sizeResource" in Gigabytes. For example "4g".
func (o GetDeploymentElasticsearchTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) string { return v.Size }).(pulumi.StringOutput)
}

// Type of resource ("memory" or "storage")
func (o GetDeploymentElasticsearchTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

// Number of zones in which nodes will be placed.
func (o GetDeploymentElasticsearchTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetDeploymentElasticsearchTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentElasticsearchTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentElasticsearchTopology)(nil)).Elem()
}

func (o GetDeploymentElasticsearchTopologyArrayOutput) ToGetDeploymentElasticsearchTopologyArrayOutput() GetDeploymentElasticsearchTopologyArrayOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyArrayOutput) ToGetDeploymentElasticsearchTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyArrayOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentElasticsearchTopology] {
	return pulumix.Output[[]GetDeploymentElasticsearchTopology]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentElasticsearchTopologyArrayOutput) Index(i pulumi.IntInput) GetDeploymentElasticsearchTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentElasticsearchTopology {
		return vs[0].([]GetDeploymentElasticsearchTopology)[vs[1].(int)]
	}).(GetDeploymentElasticsearchTopologyOutput)
}

type GetDeploymentElasticsearchTopologyAutoscaling struct {
	// Maximum size the tier can scale up to, e.g "64g".
	MaxSize string `pulumi:"maxSize"`
	// Resource type used when specifying the maximum size the tier can scale up to.
	MaxSizeResource string `pulumi:"maxSizeResource"`
	// Minimum size the tier can scale down to when bidirectional autoscaling is supported.
	MinSize string `pulumi:"minSize"`
	// Resource type used when specifying the minimum size the tier can scale down to when bidirectional autoscaling is supported.
	MinSizeResource string `pulumi:"minSizeResource"`
	// An arbitrary JSON object overriding the default autoscaling policy. Don't set unless you really know what you are doing.
	PolicyOverrideJson string `pulumi:"policyOverrideJson"`
}

// GetDeploymentElasticsearchTopologyAutoscalingInput is an input type that accepts GetDeploymentElasticsearchTopologyAutoscalingArgs and GetDeploymentElasticsearchTopologyAutoscalingOutput values.
// You can construct a concrete instance of `GetDeploymentElasticsearchTopologyAutoscalingInput` via:
//
//	GetDeploymentElasticsearchTopologyAutoscalingArgs{...}
type GetDeploymentElasticsearchTopologyAutoscalingInput interface {
	pulumi.Input

	ToGetDeploymentElasticsearchTopologyAutoscalingOutput() GetDeploymentElasticsearchTopologyAutoscalingOutput
	ToGetDeploymentElasticsearchTopologyAutoscalingOutputWithContext(context.Context) GetDeploymentElasticsearchTopologyAutoscalingOutput
}

type GetDeploymentElasticsearchTopologyAutoscalingArgs struct {
	// Maximum size the tier can scale up to, e.g "64g".
	MaxSize pulumi.StringInput `pulumi:"maxSize"`
	// Resource type used when specifying the maximum size the tier can scale up to.
	MaxSizeResource pulumi.StringInput `pulumi:"maxSizeResource"`
	// Minimum size the tier can scale down to when bidirectional autoscaling is supported.
	MinSize pulumi.StringInput `pulumi:"minSize"`
	// Resource type used when specifying the minimum size the tier can scale down to when bidirectional autoscaling is supported.
	MinSizeResource pulumi.StringInput `pulumi:"minSizeResource"`
	// An arbitrary JSON object overriding the default autoscaling policy. Don't set unless you really know what you are doing.
	PolicyOverrideJson pulumi.StringInput `pulumi:"policyOverrideJson"`
}

func (GetDeploymentElasticsearchTopologyAutoscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentElasticsearchTopologyAutoscaling)(nil)).Elem()
}

func (i GetDeploymentElasticsearchTopologyAutoscalingArgs) ToGetDeploymentElasticsearchTopologyAutoscalingOutput() GetDeploymentElasticsearchTopologyAutoscalingOutput {
	return i.ToGetDeploymentElasticsearchTopologyAutoscalingOutputWithContext(context.Background())
}

func (i GetDeploymentElasticsearchTopologyAutoscalingArgs) ToGetDeploymentElasticsearchTopologyAutoscalingOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyAutoscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentElasticsearchTopologyAutoscalingOutput)
}

func (i GetDeploymentElasticsearchTopologyAutoscalingArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentElasticsearchTopologyAutoscaling] {
	return pulumix.Output[GetDeploymentElasticsearchTopologyAutoscaling]{
		OutputState: i.ToGetDeploymentElasticsearchTopologyAutoscalingOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentElasticsearchTopologyAutoscalingArrayInput is an input type that accepts GetDeploymentElasticsearchTopologyAutoscalingArray and GetDeploymentElasticsearchTopologyAutoscalingArrayOutput values.
// You can construct a concrete instance of `GetDeploymentElasticsearchTopologyAutoscalingArrayInput` via:
//
//	GetDeploymentElasticsearchTopologyAutoscalingArray{ GetDeploymentElasticsearchTopologyAutoscalingArgs{...} }
type GetDeploymentElasticsearchTopologyAutoscalingArrayInput interface {
	pulumi.Input

	ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutput() GetDeploymentElasticsearchTopologyAutoscalingArrayOutput
	ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutputWithContext(context.Context) GetDeploymentElasticsearchTopologyAutoscalingArrayOutput
}

type GetDeploymentElasticsearchTopologyAutoscalingArray []GetDeploymentElasticsearchTopologyAutoscalingInput

func (GetDeploymentElasticsearchTopologyAutoscalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentElasticsearchTopologyAutoscaling)(nil)).Elem()
}

func (i GetDeploymentElasticsearchTopologyAutoscalingArray) ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutput() GetDeploymentElasticsearchTopologyAutoscalingArrayOutput {
	return i.ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutputWithContext(context.Background())
}

func (i GetDeploymentElasticsearchTopologyAutoscalingArray) ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyAutoscalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentElasticsearchTopologyAutoscalingArrayOutput)
}

func (i GetDeploymentElasticsearchTopologyAutoscalingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentElasticsearchTopologyAutoscaling] {
	return pulumix.Output[[]GetDeploymentElasticsearchTopologyAutoscaling]{
		OutputState: i.ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentElasticsearchTopologyAutoscalingOutput struct{ *pulumi.OutputState }

func (GetDeploymentElasticsearchTopologyAutoscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentElasticsearchTopologyAutoscaling)(nil)).Elem()
}

func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) ToGetDeploymentElasticsearchTopologyAutoscalingOutput() GetDeploymentElasticsearchTopologyAutoscalingOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) ToGetDeploymentElasticsearchTopologyAutoscalingOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyAutoscalingOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentElasticsearchTopologyAutoscaling] {
	return pulumix.Output[GetDeploymentElasticsearchTopologyAutoscaling]{
		OutputState: o.OutputState,
	}
}

// Maximum size the tier can scale up to, e.g "64g".
func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) MaxSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopologyAutoscaling) string { return v.MaxSize }).(pulumi.StringOutput)
}

// Resource type used when specifying the maximum size the tier can scale up to.
func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) MaxSizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopologyAutoscaling) string { return v.MaxSizeResource }).(pulumi.StringOutput)
}

// Minimum size the tier can scale down to when bidirectional autoscaling is supported.
func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) MinSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopologyAutoscaling) string { return v.MinSize }).(pulumi.StringOutput)
}

// Resource type used when specifying the minimum size the tier can scale down to when bidirectional autoscaling is supported.
func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) MinSizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopologyAutoscaling) string { return v.MinSizeResource }).(pulumi.StringOutput)
}

// An arbitrary JSON object overriding the default autoscaling policy. Don't set unless you really know what you are doing.
func (o GetDeploymentElasticsearchTopologyAutoscalingOutput) PolicyOverrideJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentElasticsearchTopologyAutoscaling) string { return v.PolicyOverrideJson }).(pulumi.StringOutput)
}

type GetDeploymentElasticsearchTopologyAutoscalingArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentElasticsearchTopologyAutoscalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentElasticsearchTopologyAutoscaling)(nil)).Elem()
}

func (o GetDeploymentElasticsearchTopologyAutoscalingArrayOutput) ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutput() GetDeploymentElasticsearchTopologyAutoscalingArrayOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyAutoscalingArrayOutput) ToGetDeploymentElasticsearchTopologyAutoscalingArrayOutputWithContext(ctx context.Context) GetDeploymentElasticsearchTopologyAutoscalingArrayOutput {
	return o
}

func (o GetDeploymentElasticsearchTopologyAutoscalingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentElasticsearchTopologyAutoscaling] {
	return pulumix.Output[[]GetDeploymentElasticsearchTopologyAutoscaling]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentElasticsearchTopologyAutoscalingArrayOutput) Index(i pulumi.IntInput) GetDeploymentElasticsearchTopologyAutoscalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentElasticsearchTopologyAutoscaling {
		return vs[0].([]GetDeploymentElasticsearchTopologyAutoscaling)[vs[1].(int)]
	}).(GetDeploymentElasticsearchTopologyAutoscalingOutput)
}

type GetDeploymentEnterpriseSearch struct {
	// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
	ElasticsearchClusterRefId string `pulumi:"elasticsearchClusterRefId"`
	// Enterprise Search resource health status.
	Healthy bool `pulumi:"healthy"`
	// HTTP endpoint for the Enterprise Search resource.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the Enterprise Search resource.
	HttpsEndpoint string `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Enterprise Search resource.
	RefId string `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId string `pulumi:"resourceId"`
	// Enterprise Search resource status (for example, "started", "stopped", etc).
	Status string `pulumi:"status"`
	// Node topology element definition.
	Topologies []GetDeploymentEnterpriseSearchTopology `pulumi:"topologies"`
	// Elastic stack version.
	Version string `pulumi:"version"`
}

// GetDeploymentEnterpriseSearchInput is an input type that accepts GetDeploymentEnterpriseSearchArgs and GetDeploymentEnterpriseSearchOutput values.
// You can construct a concrete instance of `GetDeploymentEnterpriseSearchInput` via:
//
//	GetDeploymentEnterpriseSearchArgs{...}
type GetDeploymentEnterpriseSearchInput interface {
	pulumi.Input

	ToGetDeploymentEnterpriseSearchOutput() GetDeploymentEnterpriseSearchOutput
	ToGetDeploymentEnterpriseSearchOutputWithContext(context.Context) GetDeploymentEnterpriseSearchOutput
}

type GetDeploymentEnterpriseSearchArgs struct {
	// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
	ElasticsearchClusterRefId pulumi.StringInput `pulumi:"elasticsearchClusterRefId"`
	// Enterprise Search resource health status.
	Healthy pulumi.BoolInput `pulumi:"healthy"`
	// HTTP endpoint for the Enterprise Search resource.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the Enterprise Search resource.
	HttpsEndpoint pulumi.StringInput `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Enterprise Search resource.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Enterprise Search resource status (for example, "started", "stopped", etc).
	Status pulumi.StringInput `pulumi:"status"`
	// Node topology element definition.
	Topologies GetDeploymentEnterpriseSearchTopologyArrayInput `pulumi:"topologies"`
	// Elastic stack version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDeploymentEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentEnterpriseSearch)(nil)).Elem()
}

func (i GetDeploymentEnterpriseSearchArgs) ToGetDeploymentEnterpriseSearchOutput() GetDeploymentEnterpriseSearchOutput {
	return i.ToGetDeploymentEnterpriseSearchOutputWithContext(context.Background())
}

func (i GetDeploymentEnterpriseSearchArgs) ToGetDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentEnterpriseSearchOutput)
}

func (i GetDeploymentEnterpriseSearchArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentEnterpriseSearch] {
	return pulumix.Output[GetDeploymentEnterpriseSearch]{
		OutputState: i.ToGetDeploymentEnterpriseSearchOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentEnterpriseSearchArrayInput is an input type that accepts GetDeploymentEnterpriseSearchArray and GetDeploymentEnterpriseSearchArrayOutput values.
// You can construct a concrete instance of `GetDeploymentEnterpriseSearchArrayInput` via:
//
//	GetDeploymentEnterpriseSearchArray{ GetDeploymentEnterpriseSearchArgs{...} }
type GetDeploymentEnterpriseSearchArrayInput interface {
	pulumi.Input

	ToGetDeploymentEnterpriseSearchArrayOutput() GetDeploymentEnterpriseSearchArrayOutput
	ToGetDeploymentEnterpriseSearchArrayOutputWithContext(context.Context) GetDeploymentEnterpriseSearchArrayOutput
}

type GetDeploymentEnterpriseSearchArray []GetDeploymentEnterpriseSearchInput

func (GetDeploymentEnterpriseSearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentEnterpriseSearch)(nil)).Elem()
}

func (i GetDeploymentEnterpriseSearchArray) ToGetDeploymentEnterpriseSearchArrayOutput() GetDeploymentEnterpriseSearchArrayOutput {
	return i.ToGetDeploymentEnterpriseSearchArrayOutputWithContext(context.Background())
}

func (i GetDeploymentEnterpriseSearchArray) ToGetDeploymentEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentEnterpriseSearchArrayOutput)
}

func (i GetDeploymentEnterpriseSearchArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentEnterpriseSearch] {
	return pulumix.Output[[]GetDeploymentEnterpriseSearch]{
		OutputState: i.ToGetDeploymentEnterpriseSearchArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (GetDeploymentEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentEnterpriseSearch)(nil)).Elem()
}

func (o GetDeploymentEnterpriseSearchOutput) ToGetDeploymentEnterpriseSearchOutput() GetDeploymentEnterpriseSearchOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchOutput) ToGetDeploymentEnterpriseSearchOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentEnterpriseSearch] {
	return pulumix.Output[GetDeploymentEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
func (o GetDeploymentEnterpriseSearchOutput) ElasticsearchClusterRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) string { return v.ElasticsearchClusterRefId }).(pulumi.StringOutput)
}

// Enterprise Search resource health status.
func (o GetDeploymentEnterpriseSearchOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) bool { return v.Healthy }).(pulumi.BoolOutput)
}

// HTTP endpoint for the Enterprise Search resource.
func (o GetDeploymentEnterpriseSearchOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// HTTPS endpoint for the Enterprise Search resource.
func (o GetDeploymentEnterpriseSearchOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

// A locally-unique friendly alias for this Enterprise Search resource.
func (o GetDeploymentEnterpriseSearchOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) string { return v.RefId }).(pulumi.StringOutput)
}

// The resource unique identifier.
func (o GetDeploymentEnterpriseSearchOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Enterprise Search resource status (for example, "started", "stopped", etc).
func (o GetDeploymentEnterpriseSearchOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) string { return v.Status }).(pulumi.StringOutput)
}

// Node topology element definition.
func (o GetDeploymentEnterpriseSearchOutput) Topologies() GetDeploymentEnterpriseSearchTopologyArrayOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) []GetDeploymentEnterpriseSearchTopology { return v.Topologies }).(GetDeploymentEnterpriseSearchTopologyArrayOutput)
}

// Elastic stack version.
func (o GetDeploymentEnterpriseSearchOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearch) string { return v.Version }).(pulumi.StringOutput)
}

type GetDeploymentEnterpriseSearchArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentEnterpriseSearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentEnterpriseSearch)(nil)).Elem()
}

func (o GetDeploymentEnterpriseSearchArrayOutput) ToGetDeploymentEnterpriseSearchArrayOutput() GetDeploymentEnterpriseSearchArrayOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchArrayOutput) ToGetDeploymentEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchArrayOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentEnterpriseSearch] {
	return pulumix.Output[[]GetDeploymentEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentEnterpriseSearchArrayOutput) Index(i pulumi.IntInput) GetDeploymentEnterpriseSearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentEnterpriseSearch {
		return vs[0].([]GetDeploymentEnterpriseSearch)[vs[1].(int)]
	}).(GetDeploymentEnterpriseSearchOutput)
}

type GetDeploymentEnterpriseSearchTopology struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	// Defines whether this instance should run as application/API server.
	NodeTypeAppserver bool `pulumi:"nodeTypeAppserver"`
	// Defines whether this instance should run as connector.
	NodeTypeConnector bool `pulumi:"nodeTypeConnector"`
	// Defines whether this instance should run as background worker.
	NodeTypeWorker bool `pulumi:"nodeTypeWorker"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size string `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource string `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount int `pulumi:"zoneCount"`
}

// GetDeploymentEnterpriseSearchTopologyInput is an input type that accepts GetDeploymentEnterpriseSearchTopologyArgs and GetDeploymentEnterpriseSearchTopologyOutput values.
// You can construct a concrete instance of `GetDeploymentEnterpriseSearchTopologyInput` via:
//
//	GetDeploymentEnterpriseSearchTopologyArgs{...}
type GetDeploymentEnterpriseSearchTopologyInput interface {
	pulumi.Input

	ToGetDeploymentEnterpriseSearchTopologyOutput() GetDeploymentEnterpriseSearchTopologyOutput
	ToGetDeploymentEnterpriseSearchTopologyOutputWithContext(context.Context) GetDeploymentEnterpriseSearchTopologyOutput
}

type GetDeploymentEnterpriseSearchTopologyArgs struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	// Defines whether this instance should run as application/API server.
	NodeTypeAppserver pulumi.BoolInput `pulumi:"nodeTypeAppserver"`
	// Defines whether this instance should run as connector.
	NodeTypeConnector pulumi.BoolInput `pulumi:"nodeTypeConnector"`
	// Defines whether this instance should run as background worker.
	NodeTypeWorker pulumi.BoolInput `pulumi:"nodeTypeWorker"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size pulumi.StringInput `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource pulumi.StringInput `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount pulumi.IntInput `pulumi:"zoneCount"`
}

func (GetDeploymentEnterpriseSearchTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (i GetDeploymentEnterpriseSearchTopologyArgs) ToGetDeploymentEnterpriseSearchTopologyOutput() GetDeploymentEnterpriseSearchTopologyOutput {
	return i.ToGetDeploymentEnterpriseSearchTopologyOutputWithContext(context.Background())
}

func (i GetDeploymentEnterpriseSearchTopologyArgs) ToGetDeploymentEnterpriseSearchTopologyOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentEnterpriseSearchTopologyOutput)
}

func (i GetDeploymentEnterpriseSearchTopologyArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentEnterpriseSearchTopology] {
	return pulumix.Output[GetDeploymentEnterpriseSearchTopology]{
		OutputState: i.ToGetDeploymentEnterpriseSearchTopologyOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentEnterpriseSearchTopologyArrayInput is an input type that accepts GetDeploymentEnterpriseSearchTopologyArray and GetDeploymentEnterpriseSearchTopologyArrayOutput values.
// You can construct a concrete instance of `GetDeploymentEnterpriseSearchTopologyArrayInput` via:
//
//	GetDeploymentEnterpriseSearchTopologyArray{ GetDeploymentEnterpriseSearchTopologyArgs{...} }
type GetDeploymentEnterpriseSearchTopologyArrayInput interface {
	pulumi.Input

	ToGetDeploymentEnterpriseSearchTopologyArrayOutput() GetDeploymentEnterpriseSearchTopologyArrayOutput
	ToGetDeploymentEnterpriseSearchTopologyArrayOutputWithContext(context.Context) GetDeploymentEnterpriseSearchTopologyArrayOutput
}

type GetDeploymentEnterpriseSearchTopologyArray []GetDeploymentEnterpriseSearchTopologyInput

func (GetDeploymentEnterpriseSearchTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (i GetDeploymentEnterpriseSearchTopologyArray) ToGetDeploymentEnterpriseSearchTopologyArrayOutput() GetDeploymentEnterpriseSearchTopologyArrayOutput {
	return i.ToGetDeploymentEnterpriseSearchTopologyArrayOutputWithContext(context.Background())
}

func (i GetDeploymentEnterpriseSearchTopologyArray) ToGetDeploymentEnterpriseSearchTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentEnterpriseSearchTopologyArrayOutput)
}

func (i GetDeploymentEnterpriseSearchTopologyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentEnterpriseSearchTopology] {
	return pulumix.Output[[]GetDeploymentEnterpriseSearchTopology]{
		OutputState: i.ToGetDeploymentEnterpriseSearchTopologyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentEnterpriseSearchTopologyOutput struct{ *pulumi.OutputState }

func (GetDeploymentEnterpriseSearchTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (o GetDeploymentEnterpriseSearchTopologyOutput) ToGetDeploymentEnterpriseSearchTopologyOutput() GetDeploymentEnterpriseSearchTopologyOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchTopologyOutput) ToGetDeploymentEnterpriseSearchTopologyOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchTopologyOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchTopologyOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentEnterpriseSearchTopology] {
	return pulumix.Output[GetDeploymentEnterpriseSearchTopology]{
		OutputState: o.OutputState,
	}
}

// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
func (o GetDeploymentEnterpriseSearchTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearchTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

// Defines whether this instance should run as application/API server.
func (o GetDeploymentEnterpriseSearchTopologyOutput) NodeTypeAppserver() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearchTopology) bool { return v.NodeTypeAppserver }).(pulumi.BoolOutput)
}

// Defines whether this instance should run as connector.
func (o GetDeploymentEnterpriseSearchTopologyOutput) NodeTypeConnector() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearchTopology) bool { return v.NodeTypeConnector }).(pulumi.BoolOutput)
}

// Defines whether this instance should run as background worker.
func (o GetDeploymentEnterpriseSearchTopologyOutput) NodeTypeWorker() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearchTopology) bool { return v.NodeTypeWorker }).(pulumi.BoolOutput)
}

// Amount of "sizeResource" in Gigabytes. For example "4g".
func (o GetDeploymentEnterpriseSearchTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearchTopology) string { return v.Size }).(pulumi.StringOutput)
}

// Type of resource ("memory" or "storage")
func (o GetDeploymentEnterpriseSearchTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearchTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

// Number of zones in which nodes will be placed.
func (o GetDeploymentEnterpriseSearchTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeploymentEnterpriseSearchTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetDeploymentEnterpriseSearchTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentEnterpriseSearchTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentEnterpriseSearchTopology)(nil)).Elem()
}

func (o GetDeploymentEnterpriseSearchTopologyArrayOutput) ToGetDeploymentEnterpriseSearchTopologyArrayOutput() GetDeploymentEnterpriseSearchTopologyArrayOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchTopologyArrayOutput) ToGetDeploymentEnterpriseSearchTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentEnterpriseSearchTopologyArrayOutput {
	return o
}

func (o GetDeploymentEnterpriseSearchTopologyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentEnterpriseSearchTopology] {
	return pulumix.Output[[]GetDeploymentEnterpriseSearchTopology]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentEnterpriseSearchTopologyArrayOutput) Index(i pulumi.IntInput) GetDeploymentEnterpriseSearchTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentEnterpriseSearchTopology {
		return vs[0].([]GetDeploymentEnterpriseSearchTopology)[vs[1].(int)]
	}).(GetDeploymentEnterpriseSearchTopologyOutput)
}

type GetDeploymentIntegrationsServer struct {
	// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
	ElasticsearchClusterRefId string `pulumi:"elasticsearchClusterRefId"`
	// Resource kind health status.
	Healthy bool `pulumi:"healthy"`
	// HTTP endpoint for the resource kind.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the resource kind.
	HttpsEndpoint string `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Integrations Server resource.
	RefId string `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId string `pulumi:"resourceId"`
	// Resource kind status (for example, "started", "stopped", etc).
	Status string `pulumi:"status"`
	// Node topology element definition.
	Topologies []GetDeploymentIntegrationsServerTopology `pulumi:"topologies"`
	// Elastic stack version.
	Version string `pulumi:"version"`
}

// GetDeploymentIntegrationsServerInput is an input type that accepts GetDeploymentIntegrationsServerArgs and GetDeploymentIntegrationsServerOutput values.
// You can construct a concrete instance of `GetDeploymentIntegrationsServerInput` via:
//
//	GetDeploymentIntegrationsServerArgs{...}
type GetDeploymentIntegrationsServerInput interface {
	pulumi.Input

	ToGetDeploymentIntegrationsServerOutput() GetDeploymentIntegrationsServerOutput
	ToGetDeploymentIntegrationsServerOutputWithContext(context.Context) GetDeploymentIntegrationsServerOutput
}

type GetDeploymentIntegrationsServerArgs struct {
	// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
	ElasticsearchClusterRefId pulumi.StringInput `pulumi:"elasticsearchClusterRefId"`
	// Resource kind health status.
	Healthy pulumi.BoolInput `pulumi:"healthy"`
	// HTTP endpoint for the resource kind.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the resource kind.
	HttpsEndpoint pulumi.StringInput `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Integrations Server resource.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Resource kind status (for example, "started", "stopped", etc).
	Status pulumi.StringInput `pulumi:"status"`
	// Node topology element definition.
	Topologies GetDeploymentIntegrationsServerTopologyArrayInput `pulumi:"topologies"`
	// Elastic stack version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDeploymentIntegrationsServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentIntegrationsServer)(nil)).Elem()
}

func (i GetDeploymentIntegrationsServerArgs) ToGetDeploymentIntegrationsServerOutput() GetDeploymentIntegrationsServerOutput {
	return i.ToGetDeploymentIntegrationsServerOutputWithContext(context.Background())
}

func (i GetDeploymentIntegrationsServerArgs) ToGetDeploymentIntegrationsServerOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentIntegrationsServerOutput)
}

func (i GetDeploymentIntegrationsServerArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentIntegrationsServer] {
	return pulumix.Output[GetDeploymentIntegrationsServer]{
		OutputState: i.ToGetDeploymentIntegrationsServerOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentIntegrationsServerArrayInput is an input type that accepts GetDeploymentIntegrationsServerArray and GetDeploymentIntegrationsServerArrayOutput values.
// You can construct a concrete instance of `GetDeploymentIntegrationsServerArrayInput` via:
//
//	GetDeploymentIntegrationsServerArray{ GetDeploymentIntegrationsServerArgs{...} }
type GetDeploymentIntegrationsServerArrayInput interface {
	pulumi.Input

	ToGetDeploymentIntegrationsServerArrayOutput() GetDeploymentIntegrationsServerArrayOutput
	ToGetDeploymentIntegrationsServerArrayOutputWithContext(context.Context) GetDeploymentIntegrationsServerArrayOutput
}

type GetDeploymentIntegrationsServerArray []GetDeploymentIntegrationsServerInput

func (GetDeploymentIntegrationsServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentIntegrationsServer)(nil)).Elem()
}

func (i GetDeploymentIntegrationsServerArray) ToGetDeploymentIntegrationsServerArrayOutput() GetDeploymentIntegrationsServerArrayOutput {
	return i.ToGetDeploymentIntegrationsServerArrayOutputWithContext(context.Background())
}

func (i GetDeploymentIntegrationsServerArray) ToGetDeploymentIntegrationsServerArrayOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentIntegrationsServerArrayOutput)
}

func (i GetDeploymentIntegrationsServerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentIntegrationsServer] {
	return pulumix.Output[[]GetDeploymentIntegrationsServer]{
		OutputState: i.ToGetDeploymentIntegrationsServerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentIntegrationsServerOutput struct{ *pulumi.OutputState }

func (GetDeploymentIntegrationsServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentIntegrationsServer)(nil)).Elem()
}

func (o GetDeploymentIntegrationsServerOutput) ToGetDeploymentIntegrationsServerOutput() GetDeploymentIntegrationsServerOutput {
	return o
}

func (o GetDeploymentIntegrationsServerOutput) ToGetDeploymentIntegrationsServerOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerOutput {
	return o
}

func (o GetDeploymentIntegrationsServerOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentIntegrationsServer] {
	return pulumix.Output[GetDeploymentIntegrationsServer]{
		OutputState: o.OutputState,
	}
}

// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
func (o GetDeploymentIntegrationsServerOutput) ElasticsearchClusterRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) string { return v.ElasticsearchClusterRefId }).(pulumi.StringOutput)
}

// Resource kind health status.
func (o GetDeploymentIntegrationsServerOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) bool { return v.Healthy }).(pulumi.BoolOutput)
}

// HTTP endpoint for the resource kind.
func (o GetDeploymentIntegrationsServerOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// HTTPS endpoint for the resource kind.
func (o GetDeploymentIntegrationsServerOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

// A locally-unique friendly alias for this Integrations Server resource.
func (o GetDeploymentIntegrationsServerOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) string { return v.RefId }).(pulumi.StringOutput)
}

// The resource unique identifier.
func (o GetDeploymentIntegrationsServerOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Resource kind status (for example, "started", "stopped", etc).
func (o GetDeploymentIntegrationsServerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) string { return v.Status }).(pulumi.StringOutput)
}

// Node topology element definition.
func (o GetDeploymentIntegrationsServerOutput) Topologies() GetDeploymentIntegrationsServerTopologyArrayOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) []GetDeploymentIntegrationsServerTopology { return v.Topologies }).(GetDeploymentIntegrationsServerTopologyArrayOutput)
}

// Elastic stack version.
func (o GetDeploymentIntegrationsServerOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServer) string { return v.Version }).(pulumi.StringOutput)
}

type GetDeploymentIntegrationsServerArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentIntegrationsServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentIntegrationsServer)(nil)).Elem()
}

func (o GetDeploymentIntegrationsServerArrayOutput) ToGetDeploymentIntegrationsServerArrayOutput() GetDeploymentIntegrationsServerArrayOutput {
	return o
}

func (o GetDeploymentIntegrationsServerArrayOutput) ToGetDeploymentIntegrationsServerArrayOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerArrayOutput {
	return o
}

func (o GetDeploymentIntegrationsServerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentIntegrationsServer] {
	return pulumix.Output[[]GetDeploymentIntegrationsServer]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentIntegrationsServerArrayOutput) Index(i pulumi.IntInput) GetDeploymentIntegrationsServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentIntegrationsServer {
		return vs[0].([]GetDeploymentIntegrationsServer)[vs[1].(int)]
	}).(GetDeploymentIntegrationsServerOutput)
}

type GetDeploymentIntegrationsServerTopology struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size string `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource string `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount int `pulumi:"zoneCount"`
}

// GetDeploymentIntegrationsServerTopologyInput is an input type that accepts GetDeploymentIntegrationsServerTopologyArgs and GetDeploymentIntegrationsServerTopologyOutput values.
// You can construct a concrete instance of `GetDeploymentIntegrationsServerTopologyInput` via:
//
//	GetDeploymentIntegrationsServerTopologyArgs{...}
type GetDeploymentIntegrationsServerTopologyInput interface {
	pulumi.Input

	ToGetDeploymentIntegrationsServerTopologyOutput() GetDeploymentIntegrationsServerTopologyOutput
	ToGetDeploymentIntegrationsServerTopologyOutputWithContext(context.Context) GetDeploymentIntegrationsServerTopologyOutput
}

type GetDeploymentIntegrationsServerTopologyArgs struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size pulumi.StringInput `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource pulumi.StringInput `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount pulumi.IntInput `pulumi:"zoneCount"`
}

func (GetDeploymentIntegrationsServerTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentIntegrationsServerTopology)(nil)).Elem()
}

func (i GetDeploymentIntegrationsServerTopologyArgs) ToGetDeploymentIntegrationsServerTopologyOutput() GetDeploymentIntegrationsServerTopologyOutput {
	return i.ToGetDeploymentIntegrationsServerTopologyOutputWithContext(context.Background())
}

func (i GetDeploymentIntegrationsServerTopologyArgs) ToGetDeploymentIntegrationsServerTopologyOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentIntegrationsServerTopologyOutput)
}

func (i GetDeploymentIntegrationsServerTopologyArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentIntegrationsServerTopology] {
	return pulumix.Output[GetDeploymentIntegrationsServerTopology]{
		OutputState: i.ToGetDeploymentIntegrationsServerTopologyOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentIntegrationsServerTopologyArrayInput is an input type that accepts GetDeploymentIntegrationsServerTopologyArray and GetDeploymentIntegrationsServerTopologyArrayOutput values.
// You can construct a concrete instance of `GetDeploymentIntegrationsServerTopologyArrayInput` via:
//
//	GetDeploymentIntegrationsServerTopologyArray{ GetDeploymentIntegrationsServerTopologyArgs{...} }
type GetDeploymentIntegrationsServerTopologyArrayInput interface {
	pulumi.Input

	ToGetDeploymentIntegrationsServerTopologyArrayOutput() GetDeploymentIntegrationsServerTopologyArrayOutput
	ToGetDeploymentIntegrationsServerTopologyArrayOutputWithContext(context.Context) GetDeploymentIntegrationsServerTopologyArrayOutput
}

type GetDeploymentIntegrationsServerTopologyArray []GetDeploymentIntegrationsServerTopologyInput

func (GetDeploymentIntegrationsServerTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentIntegrationsServerTopology)(nil)).Elem()
}

func (i GetDeploymentIntegrationsServerTopologyArray) ToGetDeploymentIntegrationsServerTopologyArrayOutput() GetDeploymentIntegrationsServerTopologyArrayOutput {
	return i.ToGetDeploymentIntegrationsServerTopologyArrayOutputWithContext(context.Background())
}

func (i GetDeploymentIntegrationsServerTopologyArray) ToGetDeploymentIntegrationsServerTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentIntegrationsServerTopologyArrayOutput)
}

func (i GetDeploymentIntegrationsServerTopologyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentIntegrationsServerTopology] {
	return pulumix.Output[[]GetDeploymentIntegrationsServerTopology]{
		OutputState: i.ToGetDeploymentIntegrationsServerTopologyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentIntegrationsServerTopologyOutput struct{ *pulumi.OutputState }

func (GetDeploymentIntegrationsServerTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentIntegrationsServerTopology)(nil)).Elem()
}

func (o GetDeploymentIntegrationsServerTopologyOutput) ToGetDeploymentIntegrationsServerTopologyOutput() GetDeploymentIntegrationsServerTopologyOutput {
	return o
}

func (o GetDeploymentIntegrationsServerTopologyOutput) ToGetDeploymentIntegrationsServerTopologyOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerTopologyOutput {
	return o
}

func (o GetDeploymentIntegrationsServerTopologyOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentIntegrationsServerTopology] {
	return pulumix.Output[GetDeploymentIntegrationsServerTopology]{
		OutputState: o.OutputState,
	}
}

// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
func (o GetDeploymentIntegrationsServerTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServerTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

// Amount of "sizeResource" in Gigabytes. For example "4g".
func (o GetDeploymentIntegrationsServerTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServerTopology) string { return v.Size }).(pulumi.StringOutput)
}

// Type of resource ("memory" or "storage")
func (o GetDeploymentIntegrationsServerTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServerTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

// Number of zones in which nodes will be placed.
func (o GetDeploymentIntegrationsServerTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeploymentIntegrationsServerTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetDeploymentIntegrationsServerTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentIntegrationsServerTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentIntegrationsServerTopology)(nil)).Elem()
}

func (o GetDeploymentIntegrationsServerTopologyArrayOutput) ToGetDeploymentIntegrationsServerTopologyArrayOutput() GetDeploymentIntegrationsServerTopologyArrayOutput {
	return o
}

func (o GetDeploymentIntegrationsServerTopologyArrayOutput) ToGetDeploymentIntegrationsServerTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentIntegrationsServerTopologyArrayOutput {
	return o
}

func (o GetDeploymentIntegrationsServerTopologyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentIntegrationsServerTopology] {
	return pulumix.Output[[]GetDeploymentIntegrationsServerTopology]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentIntegrationsServerTopologyArrayOutput) Index(i pulumi.IntInput) GetDeploymentIntegrationsServerTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentIntegrationsServerTopology {
		return vs[0].([]GetDeploymentIntegrationsServerTopology)[vs[1].(int)]
	}).(GetDeploymentIntegrationsServerTopologyOutput)
}

type GetDeploymentKibana struct {
	// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
	ElasticsearchClusterRefId string `pulumi:"elasticsearchClusterRefId"`
	// Kibana resource health status.
	Healthy bool `pulumi:"healthy"`
	// HTTP endpoint for the Kibana resource.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the Kibana resource.
	HttpsEndpoint string `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Kibana resource.
	RefId string `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId string `pulumi:"resourceId"`
	// Kibana resource status (for example, "started", "stopped", etc).
	Status string `pulumi:"status"`
	// Node topology element definition.
	Topologies []GetDeploymentKibanaTopology `pulumi:"topologies"`
	// Elastic stack version.
	Version string `pulumi:"version"`
}

// GetDeploymentKibanaInput is an input type that accepts GetDeploymentKibanaArgs and GetDeploymentKibanaOutput values.
// You can construct a concrete instance of `GetDeploymentKibanaInput` via:
//
//	GetDeploymentKibanaArgs{...}
type GetDeploymentKibanaInput interface {
	pulumi.Input

	ToGetDeploymentKibanaOutput() GetDeploymentKibanaOutput
	ToGetDeploymentKibanaOutputWithContext(context.Context) GetDeploymentKibanaOutput
}

type GetDeploymentKibanaArgs struct {
	// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
	ElasticsearchClusterRefId pulumi.StringInput `pulumi:"elasticsearchClusterRefId"`
	// Kibana resource health status.
	Healthy pulumi.BoolInput `pulumi:"healthy"`
	// HTTP endpoint for the Kibana resource.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// HTTPS endpoint for the Kibana resource.
	HttpsEndpoint pulumi.StringInput `pulumi:"httpsEndpoint"`
	// A locally-unique friendly alias for this Kibana resource.
	RefId pulumi.StringInput `pulumi:"refId"`
	// The resource unique identifier.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// Kibana resource status (for example, "started", "stopped", etc).
	Status pulumi.StringInput `pulumi:"status"`
	// Node topology element definition.
	Topologies GetDeploymentKibanaTopologyArrayInput `pulumi:"topologies"`
	// Elastic stack version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDeploymentKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentKibana)(nil)).Elem()
}

func (i GetDeploymentKibanaArgs) ToGetDeploymentKibanaOutput() GetDeploymentKibanaOutput {
	return i.ToGetDeploymentKibanaOutputWithContext(context.Background())
}

func (i GetDeploymentKibanaArgs) ToGetDeploymentKibanaOutputWithContext(ctx context.Context) GetDeploymentKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentKibanaOutput)
}

func (i GetDeploymentKibanaArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentKibana] {
	return pulumix.Output[GetDeploymentKibana]{
		OutputState: i.ToGetDeploymentKibanaOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentKibanaArrayInput is an input type that accepts GetDeploymentKibanaArray and GetDeploymentKibanaArrayOutput values.
// You can construct a concrete instance of `GetDeploymentKibanaArrayInput` via:
//
//	GetDeploymentKibanaArray{ GetDeploymentKibanaArgs{...} }
type GetDeploymentKibanaArrayInput interface {
	pulumi.Input

	ToGetDeploymentKibanaArrayOutput() GetDeploymentKibanaArrayOutput
	ToGetDeploymentKibanaArrayOutputWithContext(context.Context) GetDeploymentKibanaArrayOutput
}

type GetDeploymentKibanaArray []GetDeploymentKibanaInput

func (GetDeploymentKibanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentKibana)(nil)).Elem()
}

func (i GetDeploymentKibanaArray) ToGetDeploymentKibanaArrayOutput() GetDeploymentKibanaArrayOutput {
	return i.ToGetDeploymentKibanaArrayOutputWithContext(context.Background())
}

func (i GetDeploymentKibanaArray) ToGetDeploymentKibanaArrayOutputWithContext(ctx context.Context) GetDeploymentKibanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentKibanaArrayOutput)
}

func (i GetDeploymentKibanaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentKibana] {
	return pulumix.Output[[]GetDeploymentKibana]{
		OutputState: i.ToGetDeploymentKibanaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentKibanaOutput struct{ *pulumi.OutputState }

func (GetDeploymentKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentKibana)(nil)).Elem()
}

func (o GetDeploymentKibanaOutput) ToGetDeploymentKibanaOutput() GetDeploymentKibanaOutput {
	return o
}

func (o GetDeploymentKibanaOutput) ToGetDeploymentKibanaOutputWithContext(ctx context.Context) GetDeploymentKibanaOutput {
	return o
}

func (o GetDeploymentKibanaOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentKibana] {
	return pulumix.Output[GetDeploymentKibana]{
		OutputState: o.OutputState,
	}
}

// A locally-unique friendly alias for an Elasticsearch resource in this deployment.
func (o GetDeploymentKibanaOutput) ElasticsearchClusterRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibana) string { return v.ElasticsearchClusterRefId }).(pulumi.StringOutput)
}

// Kibana resource health status.
func (o GetDeploymentKibanaOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentKibana) bool { return v.Healthy }).(pulumi.BoolOutput)
}

// HTTP endpoint for the Kibana resource.
func (o GetDeploymentKibanaOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibana) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// HTTPS endpoint for the Kibana resource.
func (o GetDeploymentKibanaOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibana) string { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

// A locally-unique friendly alias for this Kibana resource.
func (o GetDeploymentKibanaOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibana) string { return v.RefId }).(pulumi.StringOutput)
}

// The resource unique identifier.
func (o GetDeploymentKibanaOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibana) string { return v.ResourceId }).(pulumi.StringOutput)
}

// Kibana resource status (for example, "started", "stopped", etc).
func (o GetDeploymentKibanaOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibana) string { return v.Status }).(pulumi.StringOutput)
}

// Node topology element definition.
func (o GetDeploymentKibanaOutput) Topologies() GetDeploymentKibanaTopologyArrayOutput {
	return o.ApplyT(func(v GetDeploymentKibana) []GetDeploymentKibanaTopology { return v.Topologies }).(GetDeploymentKibanaTopologyArrayOutput)
}

// Elastic stack version.
func (o GetDeploymentKibanaOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibana) string { return v.Version }).(pulumi.StringOutput)
}

type GetDeploymentKibanaArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentKibanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentKibana)(nil)).Elem()
}

func (o GetDeploymentKibanaArrayOutput) ToGetDeploymentKibanaArrayOutput() GetDeploymentKibanaArrayOutput {
	return o
}

func (o GetDeploymentKibanaArrayOutput) ToGetDeploymentKibanaArrayOutputWithContext(ctx context.Context) GetDeploymentKibanaArrayOutput {
	return o
}

func (o GetDeploymentKibanaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentKibana] {
	return pulumix.Output[[]GetDeploymentKibana]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentKibanaArrayOutput) Index(i pulumi.IntInput) GetDeploymentKibanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentKibana {
		return vs[0].([]GetDeploymentKibana)[vs[1].(int)]
	}).(GetDeploymentKibanaOutput)
}

type GetDeploymentKibanaTopology struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId string `pulumi:"instanceConfigurationId"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size string `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource string `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount int `pulumi:"zoneCount"`
}

// GetDeploymentKibanaTopologyInput is an input type that accepts GetDeploymentKibanaTopologyArgs and GetDeploymentKibanaTopologyOutput values.
// You can construct a concrete instance of `GetDeploymentKibanaTopologyInput` via:
//
//	GetDeploymentKibanaTopologyArgs{...}
type GetDeploymentKibanaTopologyInput interface {
	pulumi.Input

	ToGetDeploymentKibanaTopologyOutput() GetDeploymentKibanaTopologyOutput
	ToGetDeploymentKibanaTopologyOutputWithContext(context.Context) GetDeploymentKibanaTopologyOutput
}

type GetDeploymentKibanaTopologyArgs struct {
	// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
	InstanceConfigurationId pulumi.StringInput `pulumi:"instanceConfigurationId"`
	// Amount of "sizeResource" in Gigabytes. For example "4g".
	Size pulumi.StringInput `pulumi:"size"`
	// Type of resource ("memory" or "storage")
	SizeResource pulumi.StringInput `pulumi:"sizeResource"`
	// Number of zones in which nodes will be placed.
	ZoneCount pulumi.IntInput `pulumi:"zoneCount"`
}

func (GetDeploymentKibanaTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentKibanaTopology)(nil)).Elem()
}

func (i GetDeploymentKibanaTopologyArgs) ToGetDeploymentKibanaTopologyOutput() GetDeploymentKibanaTopologyOutput {
	return i.ToGetDeploymentKibanaTopologyOutputWithContext(context.Background())
}

func (i GetDeploymentKibanaTopologyArgs) ToGetDeploymentKibanaTopologyOutputWithContext(ctx context.Context) GetDeploymentKibanaTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentKibanaTopologyOutput)
}

func (i GetDeploymentKibanaTopologyArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentKibanaTopology] {
	return pulumix.Output[GetDeploymentKibanaTopology]{
		OutputState: i.ToGetDeploymentKibanaTopologyOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentKibanaTopologyArrayInput is an input type that accepts GetDeploymentKibanaTopologyArray and GetDeploymentKibanaTopologyArrayOutput values.
// You can construct a concrete instance of `GetDeploymentKibanaTopologyArrayInput` via:
//
//	GetDeploymentKibanaTopologyArray{ GetDeploymentKibanaTopologyArgs{...} }
type GetDeploymentKibanaTopologyArrayInput interface {
	pulumi.Input

	ToGetDeploymentKibanaTopologyArrayOutput() GetDeploymentKibanaTopologyArrayOutput
	ToGetDeploymentKibanaTopologyArrayOutputWithContext(context.Context) GetDeploymentKibanaTopologyArrayOutput
}

type GetDeploymentKibanaTopologyArray []GetDeploymentKibanaTopologyInput

func (GetDeploymentKibanaTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentKibanaTopology)(nil)).Elem()
}

func (i GetDeploymentKibanaTopologyArray) ToGetDeploymentKibanaTopologyArrayOutput() GetDeploymentKibanaTopologyArrayOutput {
	return i.ToGetDeploymentKibanaTopologyArrayOutputWithContext(context.Background())
}

func (i GetDeploymentKibanaTopologyArray) ToGetDeploymentKibanaTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentKibanaTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentKibanaTopologyArrayOutput)
}

func (i GetDeploymentKibanaTopologyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentKibanaTopology] {
	return pulumix.Output[[]GetDeploymentKibanaTopology]{
		OutputState: i.ToGetDeploymentKibanaTopologyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentKibanaTopologyOutput struct{ *pulumi.OutputState }

func (GetDeploymentKibanaTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentKibanaTopology)(nil)).Elem()
}

func (o GetDeploymentKibanaTopologyOutput) ToGetDeploymentKibanaTopologyOutput() GetDeploymentKibanaTopologyOutput {
	return o
}

func (o GetDeploymentKibanaTopologyOutput) ToGetDeploymentKibanaTopologyOutputWithContext(ctx context.Context) GetDeploymentKibanaTopologyOutput {
	return o
}

func (o GetDeploymentKibanaTopologyOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentKibanaTopology] {
	return pulumix.Output[GetDeploymentKibanaTopology]{
		OutputState: o.OutputState,
	}
}

// Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the ID of an existing instance configuration.
func (o GetDeploymentKibanaTopologyOutput) InstanceConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibanaTopology) string { return v.InstanceConfigurationId }).(pulumi.StringOutput)
}

// Amount of "sizeResource" in Gigabytes. For example "4g".
func (o GetDeploymentKibanaTopologyOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibanaTopology) string { return v.Size }).(pulumi.StringOutput)
}

// Type of resource ("memory" or "storage")
func (o GetDeploymentKibanaTopologyOutput) SizeResource() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentKibanaTopology) string { return v.SizeResource }).(pulumi.StringOutput)
}

// Number of zones in which nodes will be placed.
func (o GetDeploymentKibanaTopologyOutput) ZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeploymentKibanaTopology) int { return v.ZoneCount }).(pulumi.IntOutput)
}

type GetDeploymentKibanaTopologyArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentKibanaTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentKibanaTopology)(nil)).Elem()
}

func (o GetDeploymentKibanaTopologyArrayOutput) ToGetDeploymentKibanaTopologyArrayOutput() GetDeploymentKibanaTopologyArrayOutput {
	return o
}

func (o GetDeploymentKibanaTopologyArrayOutput) ToGetDeploymentKibanaTopologyArrayOutputWithContext(ctx context.Context) GetDeploymentKibanaTopologyArrayOutput {
	return o
}

func (o GetDeploymentKibanaTopologyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentKibanaTopology] {
	return pulumix.Output[[]GetDeploymentKibanaTopology]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentKibanaTopologyArrayOutput) Index(i pulumi.IntInput) GetDeploymentKibanaTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentKibanaTopology {
		return vs[0].([]GetDeploymentKibanaTopology)[vs[1].(int)]
	}).(GetDeploymentKibanaTopologyOutput)
}

type GetDeploymentObservability struct {
	// Destination deployment ID for the shipped logs and monitoring metrics.
	DeploymentId string `pulumi:"deploymentId"`
	// Defines whether logs are shipped to the destination deployment.
	Logs bool `pulumi:"logs"`
	// Defines whether metrics are shipped to the destination deployment.
	Metrics bool `pulumi:"metrics"`
	// Elasticsearch resource kind refId of the destination deployment.
	RefId string `pulumi:"refId"`
}

// GetDeploymentObservabilityInput is an input type that accepts GetDeploymentObservabilityArgs and GetDeploymentObservabilityOutput values.
// You can construct a concrete instance of `GetDeploymentObservabilityInput` via:
//
//	GetDeploymentObservabilityArgs{...}
type GetDeploymentObservabilityInput interface {
	pulumi.Input

	ToGetDeploymentObservabilityOutput() GetDeploymentObservabilityOutput
	ToGetDeploymentObservabilityOutputWithContext(context.Context) GetDeploymentObservabilityOutput
}

type GetDeploymentObservabilityArgs struct {
	// Destination deployment ID for the shipped logs and monitoring metrics.
	DeploymentId pulumi.StringInput `pulumi:"deploymentId"`
	// Defines whether logs are shipped to the destination deployment.
	Logs pulumi.BoolInput `pulumi:"logs"`
	// Defines whether metrics are shipped to the destination deployment.
	Metrics pulumi.BoolInput `pulumi:"metrics"`
	// Elasticsearch resource kind refId of the destination deployment.
	RefId pulumi.StringInput `pulumi:"refId"`
}

func (GetDeploymentObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentObservability)(nil)).Elem()
}

func (i GetDeploymentObservabilityArgs) ToGetDeploymentObservabilityOutput() GetDeploymentObservabilityOutput {
	return i.ToGetDeploymentObservabilityOutputWithContext(context.Background())
}

func (i GetDeploymentObservabilityArgs) ToGetDeploymentObservabilityOutputWithContext(ctx context.Context) GetDeploymentObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentObservabilityOutput)
}

func (i GetDeploymentObservabilityArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentObservability] {
	return pulumix.Output[GetDeploymentObservability]{
		OutputState: i.ToGetDeploymentObservabilityOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentObservabilityArrayInput is an input type that accepts GetDeploymentObservabilityArray and GetDeploymentObservabilityArrayOutput values.
// You can construct a concrete instance of `GetDeploymentObservabilityArrayInput` via:
//
//	GetDeploymentObservabilityArray{ GetDeploymentObservabilityArgs{...} }
type GetDeploymentObservabilityArrayInput interface {
	pulumi.Input

	ToGetDeploymentObservabilityArrayOutput() GetDeploymentObservabilityArrayOutput
	ToGetDeploymentObservabilityArrayOutputWithContext(context.Context) GetDeploymentObservabilityArrayOutput
}

type GetDeploymentObservabilityArray []GetDeploymentObservabilityInput

func (GetDeploymentObservabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentObservability)(nil)).Elem()
}

func (i GetDeploymentObservabilityArray) ToGetDeploymentObservabilityArrayOutput() GetDeploymentObservabilityArrayOutput {
	return i.ToGetDeploymentObservabilityArrayOutputWithContext(context.Background())
}

func (i GetDeploymentObservabilityArray) ToGetDeploymentObservabilityArrayOutputWithContext(ctx context.Context) GetDeploymentObservabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentObservabilityArrayOutput)
}

func (i GetDeploymentObservabilityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentObservability] {
	return pulumix.Output[[]GetDeploymentObservability]{
		OutputState: i.ToGetDeploymentObservabilityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentObservabilityOutput struct{ *pulumi.OutputState }

func (GetDeploymentObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentObservability)(nil)).Elem()
}

func (o GetDeploymentObservabilityOutput) ToGetDeploymentObservabilityOutput() GetDeploymentObservabilityOutput {
	return o
}

func (o GetDeploymentObservabilityOutput) ToGetDeploymentObservabilityOutputWithContext(ctx context.Context) GetDeploymentObservabilityOutput {
	return o
}

func (o GetDeploymentObservabilityOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentObservability] {
	return pulumix.Output[GetDeploymentObservability]{
		OutputState: o.OutputState,
	}
}

// Destination deployment ID for the shipped logs and monitoring metrics.
func (o GetDeploymentObservabilityOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentObservability) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// Defines whether logs are shipped to the destination deployment.
func (o GetDeploymentObservabilityOutput) Logs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentObservability) bool { return v.Logs }).(pulumi.BoolOutput)
}

// Defines whether metrics are shipped to the destination deployment.
func (o GetDeploymentObservabilityOutput) Metrics() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeploymentObservability) bool { return v.Metrics }).(pulumi.BoolOutput)
}

// Elasticsearch resource kind refId of the destination deployment.
func (o GetDeploymentObservabilityOutput) RefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentObservability) string { return v.RefId }).(pulumi.StringOutput)
}

type GetDeploymentObservabilityArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentObservabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentObservability)(nil)).Elem()
}

func (o GetDeploymentObservabilityArrayOutput) ToGetDeploymentObservabilityArrayOutput() GetDeploymentObservabilityArrayOutput {
	return o
}

func (o GetDeploymentObservabilityArrayOutput) ToGetDeploymentObservabilityArrayOutputWithContext(ctx context.Context) GetDeploymentObservabilityArrayOutput {
	return o
}

func (o GetDeploymentObservabilityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentObservability] {
	return pulumix.Output[[]GetDeploymentObservability]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentObservabilityArrayOutput) Index(i pulumi.IntInput) GetDeploymentObservabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentObservability {
		return vs[0].([]GetDeploymentObservability)[vs[1].(int)]
	}).(GetDeploymentObservabilityOutput)
}

type GetDeploymentsApm struct {
	// Overall health status of the resource instances.
	Healthy *string `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status *string `pulumi:"status"`
	// Elastic stack version.
	Version *string `pulumi:"version"`
}

// GetDeploymentsApmInput is an input type that accepts GetDeploymentsApmArgs and GetDeploymentsApmOutput values.
// You can construct a concrete instance of `GetDeploymentsApmInput` via:
//
//	GetDeploymentsApmArgs{...}
type GetDeploymentsApmInput interface {
	pulumi.Input

	ToGetDeploymentsApmOutput() GetDeploymentsApmOutput
	ToGetDeploymentsApmOutputWithContext(context.Context) GetDeploymentsApmOutput
}

type GetDeploymentsApmArgs struct {
	// Overall health status of the resource instances.
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Elastic stack version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetDeploymentsApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsApm)(nil)).Elem()
}

func (i GetDeploymentsApmArgs) ToGetDeploymentsApmOutput() GetDeploymentsApmOutput {
	return i.ToGetDeploymentsApmOutputWithContext(context.Background())
}

func (i GetDeploymentsApmArgs) ToGetDeploymentsApmOutputWithContext(ctx context.Context) GetDeploymentsApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsApmOutput)
}

func (i GetDeploymentsApmArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsApm] {
	return pulumix.Output[GetDeploymentsApm]{
		OutputState: i.ToGetDeploymentsApmOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentsApmArrayInput is an input type that accepts GetDeploymentsApmArray and GetDeploymentsApmArrayOutput values.
// You can construct a concrete instance of `GetDeploymentsApmArrayInput` via:
//
//	GetDeploymentsApmArray{ GetDeploymentsApmArgs{...} }
type GetDeploymentsApmArrayInput interface {
	pulumi.Input

	ToGetDeploymentsApmArrayOutput() GetDeploymentsApmArrayOutput
	ToGetDeploymentsApmArrayOutputWithContext(context.Context) GetDeploymentsApmArrayOutput
}

type GetDeploymentsApmArray []GetDeploymentsApmInput

func (GetDeploymentsApmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsApm)(nil)).Elem()
}

func (i GetDeploymentsApmArray) ToGetDeploymentsApmArrayOutput() GetDeploymentsApmArrayOutput {
	return i.ToGetDeploymentsApmArrayOutputWithContext(context.Background())
}

func (i GetDeploymentsApmArray) ToGetDeploymentsApmArrayOutputWithContext(ctx context.Context) GetDeploymentsApmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsApmArrayOutput)
}

func (i GetDeploymentsApmArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsApm] {
	return pulumix.Output[[]GetDeploymentsApm]{
		OutputState: i.ToGetDeploymentsApmArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentsApmOutput struct{ *pulumi.OutputState }

func (GetDeploymentsApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsApm)(nil)).Elem()
}

func (o GetDeploymentsApmOutput) ToGetDeploymentsApmOutput() GetDeploymentsApmOutput {
	return o
}

func (o GetDeploymentsApmOutput) ToGetDeploymentsApmOutputWithContext(ctx context.Context) GetDeploymentsApmOutput {
	return o
}

func (o GetDeploymentsApmOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsApm] {
	return pulumix.Output[GetDeploymentsApm]{
		OutputState: o.OutputState,
	}
}

// Overall health status of the resource instances.
func (o GetDeploymentsApmOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsApm) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
func (o GetDeploymentsApmOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsApm) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Elastic stack version.
func (o GetDeploymentsApmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsApm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetDeploymentsApmArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentsApmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsApm)(nil)).Elem()
}

func (o GetDeploymentsApmArrayOutput) ToGetDeploymentsApmArrayOutput() GetDeploymentsApmArrayOutput {
	return o
}

func (o GetDeploymentsApmArrayOutput) ToGetDeploymentsApmArrayOutputWithContext(ctx context.Context) GetDeploymentsApmArrayOutput {
	return o
}

func (o GetDeploymentsApmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsApm] {
	return pulumix.Output[[]GetDeploymentsApm]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentsApmArrayOutput) Index(i pulumi.IntInput) GetDeploymentsApmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentsApm {
		return vs[0].([]GetDeploymentsApm)[vs[1].(int)]
	}).(GetDeploymentsApmOutput)
}

type GetDeploymentsDeployment struct {
	// Deployment alias.
	Alias string `pulumi:"alias"`
	// The APM resource reference.
	ApmRefId string `pulumi:"apmRefId"`
	// The APM resource unique ID.
	ApmResourceId string `pulumi:"apmResourceId"`
	// The deployment unique ID.
	DeploymentId string `pulumi:"deploymentId"`
	// The Elasticsearch resource reference.
	ElasticsearchRefId string `pulumi:"elasticsearchRefId"`
	// The Elasticsearch resource unique ID.
	ElasticsearchResourceId string `pulumi:"elasticsearchResourceId"`
	// The Enterprise Search resource reference.
	EnterpriseSearchRefId string `pulumi:"enterpriseSearchRefId"`
	// The Enterprise Search resource unique ID.
	EnterpriseSearchResourceId string `pulumi:"enterpriseSearchResourceId"`
	// The Integrations Server resource reference.
	IntegrationsServerRefId string `pulumi:"integrationsServerRefId"`
	// The Integrations Server resource unique ID.
	IntegrationsServerResourceId string `pulumi:"integrationsServerResourceId"`
	// The Kibana resource reference.
	KibanaRefId string `pulumi:"kibanaRefId"`
	// The Kibana resource unique ID.
	KibanaResourceId string `pulumi:"kibanaResourceId"`
	// The name of the deployment.
	Name string `pulumi:"name"`
}

// GetDeploymentsDeploymentInput is an input type that accepts GetDeploymentsDeploymentArgs and GetDeploymentsDeploymentOutput values.
// You can construct a concrete instance of `GetDeploymentsDeploymentInput` via:
//
//	GetDeploymentsDeploymentArgs{...}
type GetDeploymentsDeploymentInput interface {
	pulumi.Input

	ToGetDeploymentsDeploymentOutput() GetDeploymentsDeploymentOutput
	ToGetDeploymentsDeploymentOutputWithContext(context.Context) GetDeploymentsDeploymentOutput
}

type GetDeploymentsDeploymentArgs struct {
	// Deployment alias.
	Alias pulumi.StringInput `pulumi:"alias"`
	// The APM resource reference.
	ApmRefId pulumi.StringInput `pulumi:"apmRefId"`
	// The APM resource unique ID.
	ApmResourceId pulumi.StringInput `pulumi:"apmResourceId"`
	// The deployment unique ID.
	DeploymentId pulumi.StringInput `pulumi:"deploymentId"`
	// The Elasticsearch resource reference.
	ElasticsearchRefId pulumi.StringInput `pulumi:"elasticsearchRefId"`
	// The Elasticsearch resource unique ID.
	ElasticsearchResourceId pulumi.StringInput `pulumi:"elasticsearchResourceId"`
	// The Enterprise Search resource reference.
	EnterpriseSearchRefId pulumi.StringInput `pulumi:"enterpriseSearchRefId"`
	// The Enterprise Search resource unique ID.
	EnterpriseSearchResourceId pulumi.StringInput `pulumi:"enterpriseSearchResourceId"`
	// The Integrations Server resource reference.
	IntegrationsServerRefId pulumi.StringInput `pulumi:"integrationsServerRefId"`
	// The Integrations Server resource unique ID.
	IntegrationsServerResourceId pulumi.StringInput `pulumi:"integrationsServerResourceId"`
	// The Kibana resource reference.
	KibanaRefId pulumi.StringInput `pulumi:"kibanaRefId"`
	// The Kibana resource unique ID.
	KibanaResourceId pulumi.StringInput `pulumi:"kibanaResourceId"`
	// The name of the deployment.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDeploymentsDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsDeployment)(nil)).Elem()
}

func (i GetDeploymentsDeploymentArgs) ToGetDeploymentsDeploymentOutput() GetDeploymentsDeploymentOutput {
	return i.ToGetDeploymentsDeploymentOutputWithContext(context.Background())
}

func (i GetDeploymentsDeploymentArgs) ToGetDeploymentsDeploymentOutputWithContext(ctx context.Context) GetDeploymentsDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsDeploymentOutput)
}

func (i GetDeploymentsDeploymentArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsDeployment] {
	return pulumix.Output[GetDeploymentsDeployment]{
		OutputState: i.ToGetDeploymentsDeploymentOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentsDeploymentArrayInput is an input type that accepts GetDeploymentsDeploymentArray and GetDeploymentsDeploymentArrayOutput values.
// You can construct a concrete instance of `GetDeploymentsDeploymentArrayInput` via:
//
//	GetDeploymentsDeploymentArray{ GetDeploymentsDeploymentArgs{...} }
type GetDeploymentsDeploymentArrayInput interface {
	pulumi.Input

	ToGetDeploymentsDeploymentArrayOutput() GetDeploymentsDeploymentArrayOutput
	ToGetDeploymentsDeploymentArrayOutputWithContext(context.Context) GetDeploymentsDeploymentArrayOutput
}

type GetDeploymentsDeploymentArray []GetDeploymentsDeploymentInput

func (GetDeploymentsDeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsDeployment)(nil)).Elem()
}

func (i GetDeploymentsDeploymentArray) ToGetDeploymentsDeploymentArrayOutput() GetDeploymentsDeploymentArrayOutput {
	return i.ToGetDeploymentsDeploymentArrayOutputWithContext(context.Background())
}

func (i GetDeploymentsDeploymentArray) ToGetDeploymentsDeploymentArrayOutputWithContext(ctx context.Context) GetDeploymentsDeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsDeploymentArrayOutput)
}

func (i GetDeploymentsDeploymentArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsDeployment] {
	return pulumix.Output[[]GetDeploymentsDeployment]{
		OutputState: i.ToGetDeploymentsDeploymentArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentsDeploymentOutput struct{ *pulumi.OutputState }

func (GetDeploymentsDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsDeployment)(nil)).Elem()
}

func (o GetDeploymentsDeploymentOutput) ToGetDeploymentsDeploymentOutput() GetDeploymentsDeploymentOutput {
	return o
}

func (o GetDeploymentsDeploymentOutput) ToGetDeploymentsDeploymentOutputWithContext(ctx context.Context) GetDeploymentsDeploymentOutput {
	return o
}

func (o GetDeploymentsDeploymentOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsDeployment] {
	return pulumix.Output[GetDeploymentsDeployment]{
		OutputState: o.OutputState,
	}
}

// Deployment alias.
func (o GetDeploymentsDeploymentOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.Alias }).(pulumi.StringOutput)
}

// The APM resource reference.
func (o GetDeploymentsDeploymentOutput) ApmRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.ApmRefId }).(pulumi.StringOutput)
}

// The APM resource unique ID.
func (o GetDeploymentsDeploymentOutput) ApmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.ApmResourceId }).(pulumi.StringOutput)
}

// The deployment unique ID.
func (o GetDeploymentsDeploymentOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// The Elasticsearch resource reference.
func (o GetDeploymentsDeploymentOutput) ElasticsearchRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.ElasticsearchRefId }).(pulumi.StringOutput)
}

// The Elasticsearch resource unique ID.
func (o GetDeploymentsDeploymentOutput) ElasticsearchResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.ElasticsearchResourceId }).(pulumi.StringOutput)
}

// The Enterprise Search resource reference.
func (o GetDeploymentsDeploymentOutput) EnterpriseSearchRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.EnterpriseSearchRefId }).(pulumi.StringOutput)
}

// The Enterprise Search resource unique ID.
func (o GetDeploymentsDeploymentOutput) EnterpriseSearchResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.EnterpriseSearchResourceId }).(pulumi.StringOutput)
}

// The Integrations Server resource reference.
func (o GetDeploymentsDeploymentOutput) IntegrationsServerRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.IntegrationsServerRefId }).(pulumi.StringOutput)
}

// The Integrations Server resource unique ID.
func (o GetDeploymentsDeploymentOutput) IntegrationsServerResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.IntegrationsServerResourceId }).(pulumi.StringOutput)
}

// The Kibana resource reference.
func (o GetDeploymentsDeploymentOutput) KibanaRefId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.KibanaRefId }).(pulumi.StringOutput)
}

// The Kibana resource unique ID.
func (o GetDeploymentsDeploymentOutput) KibanaResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.KibanaResourceId }).(pulumi.StringOutput)
}

// The name of the deployment.
func (o GetDeploymentsDeploymentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeploymentsDeployment) string { return v.Name }).(pulumi.StringOutput)
}

type GetDeploymentsDeploymentArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentsDeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsDeployment)(nil)).Elem()
}

func (o GetDeploymentsDeploymentArrayOutput) ToGetDeploymentsDeploymentArrayOutput() GetDeploymentsDeploymentArrayOutput {
	return o
}

func (o GetDeploymentsDeploymentArrayOutput) ToGetDeploymentsDeploymentArrayOutputWithContext(ctx context.Context) GetDeploymentsDeploymentArrayOutput {
	return o
}

func (o GetDeploymentsDeploymentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsDeployment] {
	return pulumix.Output[[]GetDeploymentsDeployment]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentsDeploymentArrayOutput) Index(i pulumi.IntInput) GetDeploymentsDeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentsDeployment {
		return vs[0].([]GetDeploymentsDeployment)[vs[1].(int)]
	}).(GetDeploymentsDeploymentOutput)
}

type GetDeploymentsElasticsearch struct {
	// Overall health status of the resource instances.
	Healthy *string `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status *string `pulumi:"status"`
	// Elastic stack version.
	Version *string `pulumi:"version"`
}

// GetDeploymentsElasticsearchInput is an input type that accepts GetDeploymentsElasticsearchArgs and GetDeploymentsElasticsearchOutput values.
// You can construct a concrete instance of `GetDeploymentsElasticsearchInput` via:
//
//	GetDeploymentsElasticsearchArgs{...}
type GetDeploymentsElasticsearchInput interface {
	pulumi.Input

	ToGetDeploymentsElasticsearchOutput() GetDeploymentsElasticsearchOutput
	ToGetDeploymentsElasticsearchOutputWithContext(context.Context) GetDeploymentsElasticsearchOutput
}

type GetDeploymentsElasticsearchArgs struct {
	// Overall health status of the resource instances.
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Elastic stack version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetDeploymentsElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsElasticsearch)(nil)).Elem()
}

func (i GetDeploymentsElasticsearchArgs) ToGetDeploymentsElasticsearchOutput() GetDeploymentsElasticsearchOutput {
	return i.ToGetDeploymentsElasticsearchOutputWithContext(context.Background())
}

func (i GetDeploymentsElasticsearchArgs) ToGetDeploymentsElasticsearchOutputWithContext(ctx context.Context) GetDeploymentsElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsElasticsearchOutput)
}

func (i GetDeploymentsElasticsearchArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsElasticsearch] {
	return pulumix.Output[GetDeploymentsElasticsearch]{
		OutputState: i.ToGetDeploymentsElasticsearchOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentsElasticsearchArrayInput is an input type that accepts GetDeploymentsElasticsearchArray and GetDeploymentsElasticsearchArrayOutput values.
// You can construct a concrete instance of `GetDeploymentsElasticsearchArrayInput` via:
//
//	GetDeploymentsElasticsearchArray{ GetDeploymentsElasticsearchArgs{...} }
type GetDeploymentsElasticsearchArrayInput interface {
	pulumi.Input

	ToGetDeploymentsElasticsearchArrayOutput() GetDeploymentsElasticsearchArrayOutput
	ToGetDeploymentsElasticsearchArrayOutputWithContext(context.Context) GetDeploymentsElasticsearchArrayOutput
}

type GetDeploymentsElasticsearchArray []GetDeploymentsElasticsearchInput

func (GetDeploymentsElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsElasticsearch)(nil)).Elem()
}

func (i GetDeploymentsElasticsearchArray) ToGetDeploymentsElasticsearchArrayOutput() GetDeploymentsElasticsearchArrayOutput {
	return i.ToGetDeploymentsElasticsearchArrayOutputWithContext(context.Background())
}

func (i GetDeploymentsElasticsearchArray) ToGetDeploymentsElasticsearchArrayOutputWithContext(ctx context.Context) GetDeploymentsElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsElasticsearchArrayOutput)
}

func (i GetDeploymentsElasticsearchArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsElasticsearch] {
	return pulumix.Output[[]GetDeploymentsElasticsearch]{
		OutputState: i.ToGetDeploymentsElasticsearchArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentsElasticsearchOutput struct{ *pulumi.OutputState }

func (GetDeploymentsElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsElasticsearch)(nil)).Elem()
}

func (o GetDeploymentsElasticsearchOutput) ToGetDeploymentsElasticsearchOutput() GetDeploymentsElasticsearchOutput {
	return o
}

func (o GetDeploymentsElasticsearchOutput) ToGetDeploymentsElasticsearchOutputWithContext(ctx context.Context) GetDeploymentsElasticsearchOutput {
	return o
}

func (o GetDeploymentsElasticsearchOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsElasticsearch] {
	return pulumix.Output[GetDeploymentsElasticsearch]{
		OutputState: o.OutputState,
	}
}

// Overall health status of the resource instances.
func (o GetDeploymentsElasticsearchOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsElasticsearch) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
func (o GetDeploymentsElasticsearchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsElasticsearch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Elastic stack version.
func (o GetDeploymentsElasticsearchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsElasticsearch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetDeploymentsElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentsElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsElasticsearch)(nil)).Elem()
}

func (o GetDeploymentsElasticsearchArrayOutput) ToGetDeploymentsElasticsearchArrayOutput() GetDeploymentsElasticsearchArrayOutput {
	return o
}

func (o GetDeploymentsElasticsearchArrayOutput) ToGetDeploymentsElasticsearchArrayOutputWithContext(ctx context.Context) GetDeploymentsElasticsearchArrayOutput {
	return o
}

func (o GetDeploymentsElasticsearchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsElasticsearch] {
	return pulumix.Output[[]GetDeploymentsElasticsearch]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentsElasticsearchArrayOutput) Index(i pulumi.IntInput) GetDeploymentsElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentsElasticsearch {
		return vs[0].([]GetDeploymentsElasticsearch)[vs[1].(int)]
	}).(GetDeploymentsElasticsearchOutput)
}

type GetDeploymentsEnterpriseSearch struct {
	// Overall health status of the resource instances.
	Healthy *string `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status *string `pulumi:"status"`
	// Elastic stack version.
	Version *string `pulumi:"version"`
}

// GetDeploymentsEnterpriseSearchInput is an input type that accepts GetDeploymentsEnterpriseSearchArgs and GetDeploymentsEnterpriseSearchOutput values.
// You can construct a concrete instance of `GetDeploymentsEnterpriseSearchInput` via:
//
//	GetDeploymentsEnterpriseSearchArgs{...}
type GetDeploymentsEnterpriseSearchInput interface {
	pulumi.Input

	ToGetDeploymentsEnterpriseSearchOutput() GetDeploymentsEnterpriseSearchOutput
	ToGetDeploymentsEnterpriseSearchOutputWithContext(context.Context) GetDeploymentsEnterpriseSearchOutput
}

type GetDeploymentsEnterpriseSearchArgs struct {
	// Overall health status of the resource instances.
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Elastic stack version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetDeploymentsEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsEnterpriseSearch)(nil)).Elem()
}

func (i GetDeploymentsEnterpriseSearchArgs) ToGetDeploymentsEnterpriseSearchOutput() GetDeploymentsEnterpriseSearchOutput {
	return i.ToGetDeploymentsEnterpriseSearchOutputWithContext(context.Background())
}

func (i GetDeploymentsEnterpriseSearchArgs) ToGetDeploymentsEnterpriseSearchOutputWithContext(ctx context.Context) GetDeploymentsEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsEnterpriseSearchOutput)
}

func (i GetDeploymentsEnterpriseSearchArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsEnterpriseSearch] {
	return pulumix.Output[GetDeploymentsEnterpriseSearch]{
		OutputState: i.ToGetDeploymentsEnterpriseSearchOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentsEnterpriseSearchArrayInput is an input type that accepts GetDeploymentsEnterpriseSearchArray and GetDeploymentsEnterpriseSearchArrayOutput values.
// You can construct a concrete instance of `GetDeploymentsEnterpriseSearchArrayInput` via:
//
//	GetDeploymentsEnterpriseSearchArray{ GetDeploymentsEnterpriseSearchArgs{...} }
type GetDeploymentsEnterpriseSearchArrayInput interface {
	pulumi.Input

	ToGetDeploymentsEnterpriseSearchArrayOutput() GetDeploymentsEnterpriseSearchArrayOutput
	ToGetDeploymentsEnterpriseSearchArrayOutputWithContext(context.Context) GetDeploymentsEnterpriseSearchArrayOutput
}

type GetDeploymentsEnterpriseSearchArray []GetDeploymentsEnterpriseSearchInput

func (GetDeploymentsEnterpriseSearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsEnterpriseSearch)(nil)).Elem()
}

func (i GetDeploymentsEnterpriseSearchArray) ToGetDeploymentsEnterpriseSearchArrayOutput() GetDeploymentsEnterpriseSearchArrayOutput {
	return i.ToGetDeploymentsEnterpriseSearchArrayOutputWithContext(context.Background())
}

func (i GetDeploymentsEnterpriseSearchArray) ToGetDeploymentsEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetDeploymentsEnterpriseSearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsEnterpriseSearchArrayOutput)
}

func (i GetDeploymentsEnterpriseSearchArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsEnterpriseSearch] {
	return pulumix.Output[[]GetDeploymentsEnterpriseSearch]{
		OutputState: i.ToGetDeploymentsEnterpriseSearchArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentsEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (GetDeploymentsEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsEnterpriseSearch)(nil)).Elem()
}

func (o GetDeploymentsEnterpriseSearchOutput) ToGetDeploymentsEnterpriseSearchOutput() GetDeploymentsEnterpriseSearchOutput {
	return o
}

func (o GetDeploymentsEnterpriseSearchOutput) ToGetDeploymentsEnterpriseSearchOutputWithContext(ctx context.Context) GetDeploymentsEnterpriseSearchOutput {
	return o
}

func (o GetDeploymentsEnterpriseSearchOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsEnterpriseSearch] {
	return pulumix.Output[GetDeploymentsEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

// Overall health status of the resource instances.
func (o GetDeploymentsEnterpriseSearchOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsEnterpriseSearch) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
func (o GetDeploymentsEnterpriseSearchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsEnterpriseSearch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Elastic stack version.
func (o GetDeploymentsEnterpriseSearchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsEnterpriseSearch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetDeploymentsEnterpriseSearchArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentsEnterpriseSearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsEnterpriseSearch)(nil)).Elem()
}

func (o GetDeploymentsEnterpriseSearchArrayOutput) ToGetDeploymentsEnterpriseSearchArrayOutput() GetDeploymentsEnterpriseSearchArrayOutput {
	return o
}

func (o GetDeploymentsEnterpriseSearchArrayOutput) ToGetDeploymentsEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetDeploymentsEnterpriseSearchArrayOutput {
	return o
}

func (o GetDeploymentsEnterpriseSearchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsEnterpriseSearch] {
	return pulumix.Output[[]GetDeploymentsEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentsEnterpriseSearchArrayOutput) Index(i pulumi.IntInput) GetDeploymentsEnterpriseSearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentsEnterpriseSearch {
		return vs[0].([]GetDeploymentsEnterpriseSearch)[vs[1].(int)]
	}).(GetDeploymentsEnterpriseSearchOutput)
}

type GetDeploymentsIntegrationsServer struct {
	// Overall health status of the resource instances.
	Healthy *string `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status *string `pulumi:"status"`
	// Elastic stack version.
	Version *string `pulumi:"version"`
}

// GetDeploymentsIntegrationsServerInput is an input type that accepts GetDeploymentsIntegrationsServerArgs and GetDeploymentsIntegrationsServerOutput values.
// You can construct a concrete instance of `GetDeploymentsIntegrationsServerInput` via:
//
//	GetDeploymentsIntegrationsServerArgs{...}
type GetDeploymentsIntegrationsServerInput interface {
	pulumi.Input

	ToGetDeploymentsIntegrationsServerOutput() GetDeploymentsIntegrationsServerOutput
	ToGetDeploymentsIntegrationsServerOutputWithContext(context.Context) GetDeploymentsIntegrationsServerOutput
}

type GetDeploymentsIntegrationsServerArgs struct {
	// Overall health status of the resource instances.
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Elastic stack version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetDeploymentsIntegrationsServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsIntegrationsServer)(nil)).Elem()
}

func (i GetDeploymentsIntegrationsServerArgs) ToGetDeploymentsIntegrationsServerOutput() GetDeploymentsIntegrationsServerOutput {
	return i.ToGetDeploymentsIntegrationsServerOutputWithContext(context.Background())
}

func (i GetDeploymentsIntegrationsServerArgs) ToGetDeploymentsIntegrationsServerOutputWithContext(ctx context.Context) GetDeploymentsIntegrationsServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsIntegrationsServerOutput)
}

func (i GetDeploymentsIntegrationsServerArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsIntegrationsServer] {
	return pulumix.Output[GetDeploymentsIntegrationsServer]{
		OutputState: i.ToGetDeploymentsIntegrationsServerOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentsIntegrationsServerArrayInput is an input type that accepts GetDeploymentsIntegrationsServerArray and GetDeploymentsIntegrationsServerArrayOutput values.
// You can construct a concrete instance of `GetDeploymentsIntegrationsServerArrayInput` via:
//
//	GetDeploymentsIntegrationsServerArray{ GetDeploymentsIntegrationsServerArgs{...} }
type GetDeploymentsIntegrationsServerArrayInput interface {
	pulumi.Input

	ToGetDeploymentsIntegrationsServerArrayOutput() GetDeploymentsIntegrationsServerArrayOutput
	ToGetDeploymentsIntegrationsServerArrayOutputWithContext(context.Context) GetDeploymentsIntegrationsServerArrayOutput
}

type GetDeploymentsIntegrationsServerArray []GetDeploymentsIntegrationsServerInput

func (GetDeploymentsIntegrationsServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsIntegrationsServer)(nil)).Elem()
}

func (i GetDeploymentsIntegrationsServerArray) ToGetDeploymentsIntegrationsServerArrayOutput() GetDeploymentsIntegrationsServerArrayOutput {
	return i.ToGetDeploymentsIntegrationsServerArrayOutputWithContext(context.Background())
}

func (i GetDeploymentsIntegrationsServerArray) ToGetDeploymentsIntegrationsServerArrayOutputWithContext(ctx context.Context) GetDeploymentsIntegrationsServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsIntegrationsServerArrayOutput)
}

func (i GetDeploymentsIntegrationsServerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsIntegrationsServer] {
	return pulumix.Output[[]GetDeploymentsIntegrationsServer]{
		OutputState: i.ToGetDeploymentsIntegrationsServerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentsIntegrationsServerOutput struct{ *pulumi.OutputState }

func (GetDeploymentsIntegrationsServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsIntegrationsServer)(nil)).Elem()
}

func (o GetDeploymentsIntegrationsServerOutput) ToGetDeploymentsIntegrationsServerOutput() GetDeploymentsIntegrationsServerOutput {
	return o
}

func (o GetDeploymentsIntegrationsServerOutput) ToGetDeploymentsIntegrationsServerOutputWithContext(ctx context.Context) GetDeploymentsIntegrationsServerOutput {
	return o
}

func (o GetDeploymentsIntegrationsServerOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsIntegrationsServer] {
	return pulumix.Output[GetDeploymentsIntegrationsServer]{
		OutputState: o.OutputState,
	}
}

// Overall health status of the resource instances.
func (o GetDeploymentsIntegrationsServerOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsIntegrationsServer) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
func (o GetDeploymentsIntegrationsServerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsIntegrationsServer) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Elastic stack version.
func (o GetDeploymentsIntegrationsServerOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsIntegrationsServer) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetDeploymentsIntegrationsServerArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentsIntegrationsServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsIntegrationsServer)(nil)).Elem()
}

func (o GetDeploymentsIntegrationsServerArrayOutput) ToGetDeploymentsIntegrationsServerArrayOutput() GetDeploymentsIntegrationsServerArrayOutput {
	return o
}

func (o GetDeploymentsIntegrationsServerArrayOutput) ToGetDeploymentsIntegrationsServerArrayOutputWithContext(ctx context.Context) GetDeploymentsIntegrationsServerArrayOutput {
	return o
}

func (o GetDeploymentsIntegrationsServerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsIntegrationsServer] {
	return pulumix.Output[[]GetDeploymentsIntegrationsServer]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentsIntegrationsServerArrayOutput) Index(i pulumi.IntInput) GetDeploymentsIntegrationsServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentsIntegrationsServer {
		return vs[0].([]GetDeploymentsIntegrationsServer)[vs[1].(int)]
	}).(GetDeploymentsIntegrationsServerOutput)
}

type GetDeploymentsKibana struct {
	// Overall health status of the resource instances.
	Healthy *string `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status *string `pulumi:"status"`
	// Elastic stack version.
	Version *string `pulumi:"version"`
}

// GetDeploymentsKibanaInput is an input type that accepts GetDeploymentsKibanaArgs and GetDeploymentsKibanaOutput values.
// You can construct a concrete instance of `GetDeploymentsKibanaInput` via:
//
//	GetDeploymentsKibanaArgs{...}
type GetDeploymentsKibanaInput interface {
	pulumi.Input

	ToGetDeploymentsKibanaOutput() GetDeploymentsKibanaOutput
	ToGetDeploymentsKibanaOutputWithContext(context.Context) GetDeploymentsKibanaOutput
}

type GetDeploymentsKibanaArgs struct {
	// Overall health status of the resource instances.
	Healthy pulumi.StringPtrInput `pulumi:"healthy"`
	// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Elastic stack version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetDeploymentsKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsKibana)(nil)).Elem()
}

func (i GetDeploymentsKibanaArgs) ToGetDeploymentsKibanaOutput() GetDeploymentsKibanaOutput {
	return i.ToGetDeploymentsKibanaOutputWithContext(context.Background())
}

func (i GetDeploymentsKibanaArgs) ToGetDeploymentsKibanaOutputWithContext(ctx context.Context) GetDeploymentsKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsKibanaOutput)
}

func (i GetDeploymentsKibanaArgs) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsKibana] {
	return pulumix.Output[GetDeploymentsKibana]{
		OutputState: i.ToGetDeploymentsKibanaOutputWithContext(ctx).OutputState,
	}
}

// GetDeploymentsKibanaArrayInput is an input type that accepts GetDeploymentsKibanaArray and GetDeploymentsKibanaArrayOutput values.
// You can construct a concrete instance of `GetDeploymentsKibanaArrayInput` via:
//
//	GetDeploymentsKibanaArray{ GetDeploymentsKibanaArgs{...} }
type GetDeploymentsKibanaArrayInput interface {
	pulumi.Input

	ToGetDeploymentsKibanaArrayOutput() GetDeploymentsKibanaArrayOutput
	ToGetDeploymentsKibanaArrayOutputWithContext(context.Context) GetDeploymentsKibanaArrayOutput
}

type GetDeploymentsKibanaArray []GetDeploymentsKibanaInput

func (GetDeploymentsKibanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsKibana)(nil)).Elem()
}

func (i GetDeploymentsKibanaArray) ToGetDeploymentsKibanaArrayOutput() GetDeploymentsKibanaArrayOutput {
	return i.ToGetDeploymentsKibanaArrayOutputWithContext(context.Background())
}

func (i GetDeploymentsKibanaArray) ToGetDeploymentsKibanaArrayOutputWithContext(ctx context.Context) GetDeploymentsKibanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeploymentsKibanaArrayOutput)
}

func (i GetDeploymentsKibanaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsKibana] {
	return pulumix.Output[[]GetDeploymentsKibana]{
		OutputState: i.ToGetDeploymentsKibanaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDeploymentsKibanaOutput struct{ *pulumi.OutputState }

func (GetDeploymentsKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeploymentsKibana)(nil)).Elem()
}

func (o GetDeploymentsKibanaOutput) ToGetDeploymentsKibanaOutput() GetDeploymentsKibanaOutput {
	return o
}

func (o GetDeploymentsKibanaOutput) ToGetDeploymentsKibanaOutputWithContext(ctx context.Context) GetDeploymentsKibanaOutput {
	return o
}

func (o GetDeploymentsKibanaOutput) ToOutput(ctx context.Context) pulumix.Output[GetDeploymentsKibana] {
	return pulumix.Output[GetDeploymentsKibana]{
		OutputState: o.OutputState,
	}
}

// Overall health status of the resource instances.
func (o GetDeploymentsKibanaOutput) Healthy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsKibana) *string { return v.Healthy }).(pulumi.StringPtrOutput)
}

// Resource kind status. Can be one of `initializing`, `stopping`, `stopped`, `rebooting`, `restarting`.
func (o GetDeploymentsKibanaOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsKibana) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Elastic stack version.
func (o GetDeploymentsKibanaOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDeploymentsKibana) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetDeploymentsKibanaArrayOutput struct{ *pulumi.OutputState }

func (GetDeploymentsKibanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeploymentsKibana)(nil)).Elem()
}

func (o GetDeploymentsKibanaArrayOutput) ToGetDeploymentsKibanaArrayOutput() GetDeploymentsKibanaArrayOutput {
	return o
}

func (o GetDeploymentsKibanaArrayOutput) ToGetDeploymentsKibanaArrayOutputWithContext(ctx context.Context) GetDeploymentsKibanaArrayOutput {
	return o
}

func (o GetDeploymentsKibanaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDeploymentsKibana] {
	return pulumix.Output[[]GetDeploymentsKibana]{
		OutputState: o.OutputState,
	}
}

func (o GetDeploymentsKibanaArrayOutput) Index(i pulumi.IntInput) GetDeploymentsKibanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeploymentsKibana {
		return vs[0].([]GetDeploymentsKibana)[vs[1].(int)]
	}).(GetDeploymentsKibanaOutput)
}

type GetStackApm struct {
	// Maximum size of the instances.
	CapacityConstraintsMax int `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin int `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes []string `pulumi:"compatibleNodeTypes"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists []string `pulumi:"denylists"`
	// Docker image to use for the APM instance.
	DockerImage string `pulumi:"dockerImage"`
}

// GetStackApmInput is an input type that accepts GetStackApmArgs and GetStackApmOutput values.
// You can construct a concrete instance of `GetStackApmInput` via:
//
//	GetStackApmArgs{...}
type GetStackApmInput interface {
	pulumi.Input

	ToGetStackApmOutput() GetStackApmOutput
	ToGetStackApmOutputWithContext(context.Context) GetStackApmOutput
}

type GetStackApmArgs struct {
	// Maximum size of the instances.
	CapacityConstraintsMax pulumi.IntInput `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin pulumi.IntInput `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists pulumi.StringArrayInput `pulumi:"denylists"`
	// Docker image to use for the APM instance.
	DockerImage pulumi.StringInput `pulumi:"dockerImage"`
}

func (GetStackApmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackApm)(nil)).Elem()
}

func (i GetStackApmArgs) ToGetStackApmOutput() GetStackApmOutput {
	return i.ToGetStackApmOutputWithContext(context.Background())
}

func (i GetStackApmArgs) ToGetStackApmOutputWithContext(ctx context.Context) GetStackApmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackApmOutput)
}

func (i GetStackApmArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackApm] {
	return pulumix.Output[GetStackApm]{
		OutputState: i.ToGetStackApmOutputWithContext(ctx).OutputState,
	}
}

// GetStackApmArrayInput is an input type that accepts GetStackApmArray and GetStackApmArrayOutput values.
// You can construct a concrete instance of `GetStackApmArrayInput` via:
//
//	GetStackApmArray{ GetStackApmArgs{...} }
type GetStackApmArrayInput interface {
	pulumi.Input

	ToGetStackApmArrayOutput() GetStackApmArrayOutput
	ToGetStackApmArrayOutputWithContext(context.Context) GetStackApmArrayOutput
}

type GetStackApmArray []GetStackApmInput

func (GetStackApmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackApm)(nil)).Elem()
}

func (i GetStackApmArray) ToGetStackApmArrayOutput() GetStackApmArrayOutput {
	return i.ToGetStackApmArrayOutputWithContext(context.Background())
}

func (i GetStackApmArray) ToGetStackApmArrayOutputWithContext(ctx context.Context) GetStackApmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackApmArrayOutput)
}

func (i GetStackApmArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackApm] {
	return pulumix.Output[[]GetStackApm]{
		OutputState: i.ToGetStackApmArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackApmOutput struct{ *pulumi.OutputState }

func (GetStackApmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackApm)(nil)).Elem()
}

func (o GetStackApmOutput) ToGetStackApmOutput() GetStackApmOutput {
	return o
}

func (o GetStackApmOutput) ToGetStackApmOutputWithContext(ctx context.Context) GetStackApmOutput {
	return o
}

func (o GetStackApmOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackApm] {
	return pulumix.Output[GetStackApm]{
		OutputState: o.OutputState,
	}
}

// Maximum size of the instances.
func (o GetStackApmOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackApm) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

// Minimum size of the instances.
func (o GetStackApmOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackApm) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

// List of node types compatible with this one.
func (o GetStackApmOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackApm) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

// List of configuration options that cannot be overridden by user settings.
func (o GetStackApmOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackApm) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

// Docker image to use for the APM instance.
func (o GetStackApmOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackApm) string { return v.DockerImage }).(pulumi.StringOutput)
}

type GetStackApmArrayOutput struct{ *pulumi.OutputState }

func (GetStackApmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackApm)(nil)).Elem()
}

func (o GetStackApmArrayOutput) ToGetStackApmArrayOutput() GetStackApmArrayOutput {
	return o
}

func (o GetStackApmArrayOutput) ToGetStackApmArrayOutputWithContext(ctx context.Context) GetStackApmArrayOutput {
	return o
}

func (o GetStackApmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackApm] {
	return pulumix.Output[[]GetStackApm]{
		OutputState: o.OutputState,
	}
}

func (o GetStackApmArrayOutput) Index(i pulumi.IntInput) GetStackApmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackApm {
		return vs[0].([]GetStackApm)[vs[1].(int)]
	}).(GetStackApmOutput)
}

type GetStackElasticsearch struct {
	// Maximum size of the instances.
	CapacityConstraintsMax int `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin int `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes []string `pulumi:"compatibleNodeTypes"`
	// List of default plugins.
	DefaultPlugins []string `pulumi:"defaultPlugins"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists []string `pulumi:"denylists"`
	// Docker image to use for the Elasticsearch cluster instances.
	DockerImage string `pulumi:"dockerImage"`
	// List of available plugins to be specified by users in Elasticsearch cluster instances.
	Plugins []string `pulumi:"plugins"`
}

// GetStackElasticsearchInput is an input type that accepts GetStackElasticsearchArgs and GetStackElasticsearchOutput values.
// You can construct a concrete instance of `GetStackElasticsearchInput` via:
//
//	GetStackElasticsearchArgs{...}
type GetStackElasticsearchInput interface {
	pulumi.Input

	ToGetStackElasticsearchOutput() GetStackElasticsearchOutput
	ToGetStackElasticsearchOutputWithContext(context.Context) GetStackElasticsearchOutput
}

type GetStackElasticsearchArgs struct {
	// Maximum size of the instances.
	CapacityConstraintsMax pulumi.IntInput `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin pulumi.IntInput `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	// List of default plugins.
	DefaultPlugins pulumi.StringArrayInput `pulumi:"defaultPlugins"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists pulumi.StringArrayInput `pulumi:"denylists"`
	// Docker image to use for the Elasticsearch cluster instances.
	DockerImage pulumi.StringInput `pulumi:"dockerImage"`
	// List of available plugins to be specified by users in Elasticsearch cluster instances.
	Plugins pulumi.StringArrayInput `pulumi:"plugins"`
}

func (GetStackElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackElasticsearch)(nil)).Elem()
}

func (i GetStackElasticsearchArgs) ToGetStackElasticsearchOutput() GetStackElasticsearchOutput {
	return i.ToGetStackElasticsearchOutputWithContext(context.Background())
}

func (i GetStackElasticsearchArgs) ToGetStackElasticsearchOutputWithContext(ctx context.Context) GetStackElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackElasticsearchOutput)
}

func (i GetStackElasticsearchArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackElasticsearch] {
	return pulumix.Output[GetStackElasticsearch]{
		OutputState: i.ToGetStackElasticsearchOutputWithContext(ctx).OutputState,
	}
}

// GetStackElasticsearchArrayInput is an input type that accepts GetStackElasticsearchArray and GetStackElasticsearchArrayOutput values.
// You can construct a concrete instance of `GetStackElasticsearchArrayInput` via:
//
//	GetStackElasticsearchArray{ GetStackElasticsearchArgs{...} }
type GetStackElasticsearchArrayInput interface {
	pulumi.Input

	ToGetStackElasticsearchArrayOutput() GetStackElasticsearchArrayOutput
	ToGetStackElasticsearchArrayOutputWithContext(context.Context) GetStackElasticsearchArrayOutput
}

type GetStackElasticsearchArray []GetStackElasticsearchInput

func (GetStackElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackElasticsearch)(nil)).Elem()
}

func (i GetStackElasticsearchArray) ToGetStackElasticsearchArrayOutput() GetStackElasticsearchArrayOutput {
	return i.ToGetStackElasticsearchArrayOutputWithContext(context.Background())
}

func (i GetStackElasticsearchArray) ToGetStackElasticsearchArrayOutputWithContext(ctx context.Context) GetStackElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackElasticsearchArrayOutput)
}

func (i GetStackElasticsearchArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackElasticsearch] {
	return pulumix.Output[[]GetStackElasticsearch]{
		OutputState: i.ToGetStackElasticsearchArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackElasticsearchOutput struct{ *pulumi.OutputState }

func (GetStackElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackElasticsearch)(nil)).Elem()
}

func (o GetStackElasticsearchOutput) ToGetStackElasticsearchOutput() GetStackElasticsearchOutput {
	return o
}

func (o GetStackElasticsearchOutput) ToGetStackElasticsearchOutputWithContext(ctx context.Context) GetStackElasticsearchOutput {
	return o
}

func (o GetStackElasticsearchOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackElasticsearch] {
	return pulumix.Output[GetStackElasticsearch]{
		OutputState: o.OutputState,
	}
}

// Maximum size of the instances.
func (o GetStackElasticsearchOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackElasticsearch) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

// Minimum size of the instances.
func (o GetStackElasticsearchOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackElasticsearch) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

// List of node types compatible with this one.
func (o GetStackElasticsearchOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackElasticsearch) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

// List of default plugins.
func (o GetStackElasticsearchOutput) DefaultPlugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackElasticsearch) []string { return v.DefaultPlugins }).(pulumi.StringArrayOutput)
}

// List of configuration options that cannot be overridden by user settings.
func (o GetStackElasticsearchOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackElasticsearch) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

// Docker image to use for the Elasticsearch cluster instances.
func (o GetStackElasticsearchOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackElasticsearch) string { return v.DockerImage }).(pulumi.StringOutput)
}

// List of available plugins to be specified by users in Elasticsearch cluster instances.
func (o GetStackElasticsearchOutput) Plugins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackElasticsearch) []string { return v.Plugins }).(pulumi.StringArrayOutput)
}

type GetStackElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (GetStackElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackElasticsearch)(nil)).Elem()
}

func (o GetStackElasticsearchArrayOutput) ToGetStackElasticsearchArrayOutput() GetStackElasticsearchArrayOutput {
	return o
}

func (o GetStackElasticsearchArrayOutput) ToGetStackElasticsearchArrayOutputWithContext(ctx context.Context) GetStackElasticsearchArrayOutput {
	return o
}

func (o GetStackElasticsearchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackElasticsearch] {
	return pulumix.Output[[]GetStackElasticsearch]{
		OutputState: o.OutputState,
	}
}

func (o GetStackElasticsearchArrayOutput) Index(i pulumi.IntInput) GetStackElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackElasticsearch {
		return vs[0].([]GetStackElasticsearch)[vs[1].(int)]
	}).(GetStackElasticsearchOutput)
}

type GetStackEnterpriseSearch struct {
	// Maximum size of the instances.
	CapacityConstraintsMax int `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin int `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes []string `pulumi:"compatibleNodeTypes"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists []string `pulumi:"denylists"`
	// Docker image to use for the Enterprise Search instance.
	DockerImage string `pulumi:"dockerImage"`
}

// GetStackEnterpriseSearchInput is an input type that accepts GetStackEnterpriseSearchArgs and GetStackEnterpriseSearchOutput values.
// You can construct a concrete instance of `GetStackEnterpriseSearchInput` via:
//
//	GetStackEnterpriseSearchArgs{...}
type GetStackEnterpriseSearchInput interface {
	pulumi.Input

	ToGetStackEnterpriseSearchOutput() GetStackEnterpriseSearchOutput
	ToGetStackEnterpriseSearchOutputWithContext(context.Context) GetStackEnterpriseSearchOutput
}

type GetStackEnterpriseSearchArgs struct {
	// Maximum size of the instances.
	CapacityConstraintsMax pulumi.IntInput `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin pulumi.IntInput `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists pulumi.StringArrayInput `pulumi:"denylists"`
	// Docker image to use for the Enterprise Search instance.
	DockerImage pulumi.StringInput `pulumi:"dockerImage"`
}

func (GetStackEnterpriseSearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackEnterpriseSearch)(nil)).Elem()
}

func (i GetStackEnterpriseSearchArgs) ToGetStackEnterpriseSearchOutput() GetStackEnterpriseSearchOutput {
	return i.ToGetStackEnterpriseSearchOutputWithContext(context.Background())
}

func (i GetStackEnterpriseSearchArgs) ToGetStackEnterpriseSearchOutputWithContext(ctx context.Context) GetStackEnterpriseSearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackEnterpriseSearchOutput)
}

func (i GetStackEnterpriseSearchArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackEnterpriseSearch] {
	return pulumix.Output[GetStackEnterpriseSearch]{
		OutputState: i.ToGetStackEnterpriseSearchOutputWithContext(ctx).OutputState,
	}
}

// GetStackEnterpriseSearchArrayInput is an input type that accepts GetStackEnterpriseSearchArray and GetStackEnterpriseSearchArrayOutput values.
// You can construct a concrete instance of `GetStackEnterpriseSearchArrayInput` via:
//
//	GetStackEnterpriseSearchArray{ GetStackEnterpriseSearchArgs{...} }
type GetStackEnterpriseSearchArrayInput interface {
	pulumi.Input

	ToGetStackEnterpriseSearchArrayOutput() GetStackEnterpriseSearchArrayOutput
	ToGetStackEnterpriseSearchArrayOutputWithContext(context.Context) GetStackEnterpriseSearchArrayOutput
}

type GetStackEnterpriseSearchArray []GetStackEnterpriseSearchInput

func (GetStackEnterpriseSearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackEnterpriseSearch)(nil)).Elem()
}

func (i GetStackEnterpriseSearchArray) ToGetStackEnterpriseSearchArrayOutput() GetStackEnterpriseSearchArrayOutput {
	return i.ToGetStackEnterpriseSearchArrayOutputWithContext(context.Background())
}

func (i GetStackEnterpriseSearchArray) ToGetStackEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetStackEnterpriseSearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackEnterpriseSearchArrayOutput)
}

func (i GetStackEnterpriseSearchArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackEnterpriseSearch] {
	return pulumix.Output[[]GetStackEnterpriseSearch]{
		OutputState: i.ToGetStackEnterpriseSearchArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackEnterpriseSearchOutput struct{ *pulumi.OutputState }

func (GetStackEnterpriseSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackEnterpriseSearch)(nil)).Elem()
}

func (o GetStackEnterpriseSearchOutput) ToGetStackEnterpriseSearchOutput() GetStackEnterpriseSearchOutput {
	return o
}

func (o GetStackEnterpriseSearchOutput) ToGetStackEnterpriseSearchOutputWithContext(ctx context.Context) GetStackEnterpriseSearchOutput {
	return o
}

func (o GetStackEnterpriseSearchOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackEnterpriseSearch] {
	return pulumix.Output[GetStackEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

// Maximum size of the instances.
func (o GetStackEnterpriseSearchOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackEnterpriseSearch) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

// Minimum size of the instances.
func (o GetStackEnterpriseSearchOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackEnterpriseSearch) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

// List of node types compatible with this one.
func (o GetStackEnterpriseSearchOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackEnterpriseSearch) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

// List of configuration options that cannot be overridden by user settings.
func (o GetStackEnterpriseSearchOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackEnterpriseSearch) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

// Docker image to use for the Enterprise Search instance.
func (o GetStackEnterpriseSearchOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackEnterpriseSearch) string { return v.DockerImage }).(pulumi.StringOutput)
}

type GetStackEnterpriseSearchArrayOutput struct{ *pulumi.OutputState }

func (GetStackEnterpriseSearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackEnterpriseSearch)(nil)).Elem()
}

func (o GetStackEnterpriseSearchArrayOutput) ToGetStackEnterpriseSearchArrayOutput() GetStackEnterpriseSearchArrayOutput {
	return o
}

func (o GetStackEnterpriseSearchArrayOutput) ToGetStackEnterpriseSearchArrayOutputWithContext(ctx context.Context) GetStackEnterpriseSearchArrayOutput {
	return o
}

func (o GetStackEnterpriseSearchArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackEnterpriseSearch] {
	return pulumix.Output[[]GetStackEnterpriseSearch]{
		OutputState: o.OutputState,
	}
}

func (o GetStackEnterpriseSearchArrayOutput) Index(i pulumi.IntInput) GetStackEnterpriseSearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackEnterpriseSearch {
		return vs[0].([]GetStackEnterpriseSearch)[vs[1].(int)]
	}).(GetStackEnterpriseSearchOutput)
}

type GetStackKibana struct {
	// Maximum size of the instances.
	CapacityConstraintsMax int `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin int `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes []string `pulumi:"compatibleNodeTypes"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists []string `pulumi:"denylists"`
	// Docker image to use for the Kibana instance.
	DockerImage string `pulumi:"dockerImage"`
}

// GetStackKibanaInput is an input type that accepts GetStackKibanaArgs and GetStackKibanaOutput values.
// You can construct a concrete instance of `GetStackKibanaInput` via:
//
//	GetStackKibanaArgs{...}
type GetStackKibanaInput interface {
	pulumi.Input

	ToGetStackKibanaOutput() GetStackKibanaOutput
	ToGetStackKibanaOutputWithContext(context.Context) GetStackKibanaOutput
}

type GetStackKibanaArgs struct {
	// Maximum size of the instances.
	CapacityConstraintsMax pulumi.IntInput `pulumi:"capacityConstraintsMax"`
	// Minimum size of the instances.
	CapacityConstraintsMin pulumi.IntInput `pulumi:"capacityConstraintsMin"`
	// List of node types compatible with this one.
	CompatibleNodeTypes pulumi.StringArrayInput `pulumi:"compatibleNodeTypes"`
	// List of configuration options that cannot be overridden by user settings.
	Denylists pulumi.StringArrayInput `pulumi:"denylists"`
	// Docker image to use for the Kibana instance.
	DockerImage pulumi.StringInput `pulumi:"dockerImage"`
}

func (GetStackKibanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackKibana)(nil)).Elem()
}

func (i GetStackKibanaArgs) ToGetStackKibanaOutput() GetStackKibanaOutput {
	return i.ToGetStackKibanaOutputWithContext(context.Background())
}

func (i GetStackKibanaArgs) ToGetStackKibanaOutputWithContext(ctx context.Context) GetStackKibanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackKibanaOutput)
}

func (i GetStackKibanaArgs) ToOutput(ctx context.Context) pulumix.Output[GetStackKibana] {
	return pulumix.Output[GetStackKibana]{
		OutputState: i.ToGetStackKibanaOutputWithContext(ctx).OutputState,
	}
}

// GetStackKibanaArrayInput is an input type that accepts GetStackKibanaArray and GetStackKibanaArrayOutput values.
// You can construct a concrete instance of `GetStackKibanaArrayInput` via:
//
//	GetStackKibanaArray{ GetStackKibanaArgs{...} }
type GetStackKibanaArrayInput interface {
	pulumi.Input

	ToGetStackKibanaArrayOutput() GetStackKibanaArrayOutput
	ToGetStackKibanaArrayOutputWithContext(context.Context) GetStackKibanaArrayOutput
}

type GetStackKibanaArray []GetStackKibanaInput

func (GetStackKibanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackKibana)(nil)).Elem()
}

func (i GetStackKibanaArray) ToGetStackKibanaArrayOutput() GetStackKibanaArrayOutput {
	return i.ToGetStackKibanaArrayOutputWithContext(context.Background())
}

func (i GetStackKibanaArray) ToGetStackKibanaArrayOutputWithContext(ctx context.Context) GetStackKibanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackKibanaArrayOutput)
}

func (i GetStackKibanaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetStackKibana] {
	return pulumix.Output[[]GetStackKibana]{
		OutputState: i.ToGetStackKibanaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetStackKibanaOutput struct{ *pulumi.OutputState }

func (GetStackKibanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackKibana)(nil)).Elem()
}

func (o GetStackKibanaOutput) ToGetStackKibanaOutput() GetStackKibanaOutput {
	return o
}

func (o GetStackKibanaOutput) ToGetStackKibanaOutputWithContext(ctx context.Context) GetStackKibanaOutput {
	return o
}

func (o GetStackKibanaOutput) ToOutput(ctx context.Context) pulumix.Output[GetStackKibana] {
	return pulumix.Output[GetStackKibana]{
		OutputState: o.OutputState,
	}
}

// Maximum size of the instances.
func (o GetStackKibanaOutput) CapacityConstraintsMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackKibana) int { return v.CapacityConstraintsMax }).(pulumi.IntOutput)
}

// Minimum size of the instances.
func (o GetStackKibanaOutput) CapacityConstraintsMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetStackKibana) int { return v.CapacityConstraintsMin }).(pulumi.IntOutput)
}

// List of node types compatible with this one.
func (o GetStackKibanaOutput) CompatibleNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackKibana) []string { return v.CompatibleNodeTypes }).(pulumi.StringArrayOutput)
}

// List of configuration options that cannot be overridden by user settings.
func (o GetStackKibanaOutput) Denylists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStackKibana) []string { return v.Denylists }).(pulumi.StringArrayOutput)
}

// Docker image to use for the Kibana instance.
func (o GetStackKibanaOutput) DockerImage() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackKibana) string { return v.DockerImage }).(pulumi.StringOutput)
}

type GetStackKibanaArrayOutput struct{ *pulumi.OutputState }

func (GetStackKibanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackKibana)(nil)).Elem()
}

func (o GetStackKibanaArrayOutput) ToGetStackKibanaArrayOutput() GetStackKibanaArrayOutput {
	return o
}

func (o GetStackKibanaArrayOutput) ToGetStackKibanaArrayOutputWithContext(ctx context.Context) GetStackKibanaArrayOutput {
	return o
}

func (o GetStackKibanaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetStackKibana] {
	return pulumix.Output[[]GetStackKibana]{
		OutputState: o.OutputState,
	}
}

func (o GetStackKibanaArrayOutput) Index(i pulumi.IntInput) GetStackKibanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackKibana {
		return vs[0].([]GetStackKibana)[vs[1].(int)]
	}).(GetStackKibanaOutput)
}

type GetTrafficFilterRuleset struct {
	// The description of the ruleset.
	Description string `pulumi:"description"`
	// The ID of the ruleset
	Id string `pulumi:"id"`
	// Should the ruleset be automatically included in the new deployments.
	IncludeByDefault bool `pulumi:"includeByDefault"`
	// The name of the ruleset.
	Name string `pulumi:"name"`
	// The ruleset can be attached only to deployments in the specific region.
	Region string `pulumi:"region"`
	// An individual rule
	Rules []GetTrafficFilterRulesetRule `pulumi:"rules"`
}

// GetTrafficFilterRulesetInput is an input type that accepts GetTrafficFilterRulesetArgs and GetTrafficFilterRulesetOutput values.
// You can construct a concrete instance of `GetTrafficFilterRulesetInput` via:
//
//	GetTrafficFilterRulesetArgs{...}
type GetTrafficFilterRulesetInput interface {
	pulumi.Input

	ToGetTrafficFilterRulesetOutput() GetTrafficFilterRulesetOutput
	ToGetTrafficFilterRulesetOutputWithContext(context.Context) GetTrafficFilterRulesetOutput
}

type GetTrafficFilterRulesetArgs struct {
	// The description of the ruleset.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the ruleset
	Id pulumi.StringInput `pulumi:"id"`
	// Should the ruleset be automatically included in the new deployments.
	IncludeByDefault pulumi.BoolInput `pulumi:"includeByDefault"`
	// The name of the ruleset.
	Name pulumi.StringInput `pulumi:"name"`
	// The ruleset can be attached only to deployments in the specific region.
	Region pulumi.StringInput `pulumi:"region"`
	// An individual rule
	Rules GetTrafficFilterRulesetRuleArrayInput `pulumi:"rules"`
}

func (GetTrafficFilterRulesetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficFilterRuleset)(nil)).Elem()
}

func (i GetTrafficFilterRulesetArgs) ToGetTrafficFilterRulesetOutput() GetTrafficFilterRulesetOutput {
	return i.ToGetTrafficFilterRulesetOutputWithContext(context.Background())
}

func (i GetTrafficFilterRulesetArgs) ToGetTrafficFilterRulesetOutputWithContext(ctx context.Context) GetTrafficFilterRulesetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficFilterRulesetOutput)
}

func (i GetTrafficFilterRulesetArgs) ToOutput(ctx context.Context) pulumix.Output[GetTrafficFilterRuleset] {
	return pulumix.Output[GetTrafficFilterRuleset]{
		OutputState: i.ToGetTrafficFilterRulesetOutputWithContext(ctx).OutputState,
	}
}

// GetTrafficFilterRulesetArrayInput is an input type that accepts GetTrafficFilterRulesetArray and GetTrafficFilterRulesetArrayOutput values.
// You can construct a concrete instance of `GetTrafficFilterRulesetArrayInput` via:
//
//	GetTrafficFilterRulesetArray{ GetTrafficFilterRulesetArgs{...} }
type GetTrafficFilterRulesetArrayInput interface {
	pulumi.Input

	ToGetTrafficFilterRulesetArrayOutput() GetTrafficFilterRulesetArrayOutput
	ToGetTrafficFilterRulesetArrayOutputWithContext(context.Context) GetTrafficFilterRulesetArrayOutput
}

type GetTrafficFilterRulesetArray []GetTrafficFilterRulesetInput

func (GetTrafficFilterRulesetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficFilterRuleset)(nil)).Elem()
}

func (i GetTrafficFilterRulesetArray) ToGetTrafficFilterRulesetArrayOutput() GetTrafficFilterRulesetArrayOutput {
	return i.ToGetTrafficFilterRulesetArrayOutputWithContext(context.Background())
}

func (i GetTrafficFilterRulesetArray) ToGetTrafficFilterRulesetArrayOutputWithContext(ctx context.Context) GetTrafficFilterRulesetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficFilterRulesetArrayOutput)
}

func (i GetTrafficFilterRulesetArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTrafficFilterRuleset] {
	return pulumix.Output[[]GetTrafficFilterRuleset]{
		OutputState: i.ToGetTrafficFilterRulesetArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTrafficFilterRulesetOutput struct{ *pulumi.OutputState }

func (GetTrafficFilterRulesetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficFilterRuleset)(nil)).Elem()
}

func (o GetTrafficFilterRulesetOutput) ToGetTrafficFilterRulesetOutput() GetTrafficFilterRulesetOutput {
	return o
}

func (o GetTrafficFilterRulesetOutput) ToGetTrafficFilterRulesetOutputWithContext(ctx context.Context) GetTrafficFilterRulesetOutput {
	return o
}

func (o GetTrafficFilterRulesetOutput) ToOutput(ctx context.Context) pulumix.Output[GetTrafficFilterRuleset] {
	return pulumix.Output[GetTrafficFilterRuleset]{
		OutputState: o.OutputState,
	}
}

// The description of the ruleset.
func (o GetTrafficFilterRulesetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficFilterRuleset) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the ruleset
func (o GetTrafficFilterRulesetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficFilterRuleset) string { return v.Id }).(pulumi.StringOutput)
}

// Should the ruleset be automatically included in the new deployments.
func (o GetTrafficFilterRulesetOutput) IncludeByDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTrafficFilterRuleset) bool { return v.IncludeByDefault }).(pulumi.BoolOutput)
}

// The name of the ruleset.
func (o GetTrafficFilterRulesetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficFilterRuleset) string { return v.Name }).(pulumi.StringOutput)
}

// The ruleset can be attached only to deployments in the specific region.
func (o GetTrafficFilterRulesetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficFilterRuleset) string { return v.Region }).(pulumi.StringOutput)
}

// An individual rule
func (o GetTrafficFilterRulesetOutput) Rules() GetTrafficFilterRulesetRuleArrayOutput {
	return o.ApplyT(func(v GetTrafficFilterRuleset) []GetTrafficFilterRulesetRule { return v.Rules }).(GetTrafficFilterRulesetRuleArrayOutput)
}

type GetTrafficFilterRulesetArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficFilterRulesetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficFilterRuleset)(nil)).Elem()
}

func (o GetTrafficFilterRulesetArrayOutput) ToGetTrafficFilterRulesetArrayOutput() GetTrafficFilterRulesetArrayOutput {
	return o
}

func (o GetTrafficFilterRulesetArrayOutput) ToGetTrafficFilterRulesetArrayOutputWithContext(ctx context.Context) GetTrafficFilterRulesetArrayOutput {
	return o
}

func (o GetTrafficFilterRulesetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTrafficFilterRuleset] {
	return pulumix.Output[[]GetTrafficFilterRuleset]{
		OutputState: o.OutputState,
	}
}

func (o GetTrafficFilterRulesetArrayOutput) Index(i pulumi.IntInput) GetTrafficFilterRulesetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficFilterRuleset {
		return vs[0].([]GetTrafficFilterRuleset)[vs[1].(int)]
	}).(GetTrafficFilterRulesetOutput)
}

type GetTrafficFilterRulesetRule struct {
	// The description of the ruleset.
	Description string `pulumi:"description"`
	// The ID of the ruleset
	Id string `pulumi:"id"`
	// Allowed traffic filter source: IP address, CIDR mask, or VPC endpoint ID.
	Source string `pulumi:"source"`
}

// GetTrafficFilterRulesetRuleInput is an input type that accepts GetTrafficFilterRulesetRuleArgs and GetTrafficFilterRulesetRuleOutput values.
// You can construct a concrete instance of `GetTrafficFilterRulesetRuleInput` via:
//
//	GetTrafficFilterRulesetRuleArgs{...}
type GetTrafficFilterRulesetRuleInput interface {
	pulumi.Input

	ToGetTrafficFilterRulesetRuleOutput() GetTrafficFilterRulesetRuleOutput
	ToGetTrafficFilterRulesetRuleOutputWithContext(context.Context) GetTrafficFilterRulesetRuleOutput
}

type GetTrafficFilterRulesetRuleArgs struct {
	// The description of the ruleset.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the ruleset
	Id pulumi.StringInput `pulumi:"id"`
	// Allowed traffic filter source: IP address, CIDR mask, or VPC endpoint ID.
	Source pulumi.StringInput `pulumi:"source"`
}

func (GetTrafficFilterRulesetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficFilterRulesetRule)(nil)).Elem()
}

func (i GetTrafficFilterRulesetRuleArgs) ToGetTrafficFilterRulesetRuleOutput() GetTrafficFilterRulesetRuleOutput {
	return i.ToGetTrafficFilterRulesetRuleOutputWithContext(context.Background())
}

func (i GetTrafficFilterRulesetRuleArgs) ToGetTrafficFilterRulesetRuleOutputWithContext(ctx context.Context) GetTrafficFilterRulesetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficFilterRulesetRuleOutput)
}

func (i GetTrafficFilterRulesetRuleArgs) ToOutput(ctx context.Context) pulumix.Output[GetTrafficFilterRulesetRule] {
	return pulumix.Output[GetTrafficFilterRulesetRule]{
		OutputState: i.ToGetTrafficFilterRulesetRuleOutputWithContext(ctx).OutputState,
	}
}

// GetTrafficFilterRulesetRuleArrayInput is an input type that accepts GetTrafficFilterRulesetRuleArray and GetTrafficFilterRulesetRuleArrayOutput values.
// You can construct a concrete instance of `GetTrafficFilterRulesetRuleArrayInput` via:
//
//	GetTrafficFilterRulesetRuleArray{ GetTrafficFilterRulesetRuleArgs{...} }
type GetTrafficFilterRulesetRuleArrayInput interface {
	pulumi.Input

	ToGetTrafficFilterRulesetRuleArrayOutput() GetTrafficFilterRulesetRuleArrayOutput
	ToGetTrafficFilterRulesetRuleArrayOutputWithContext(context.Context) GetTrafficFilterRulesetRuleArrayOutput
}

type GetTrafficFilterRulesetRuleArray []GetTrafficFilterRulesetRuleInput

func (GetTrafficFilterRulesetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficFilterRulesetRule)(nil)).Elem()
}

func (i GetTrafficFilterRulesetRuleArray) ToGetTrafficFilterRulesetRuleArrayOutput() GetTrafficFilterRulesetRuleArrayOutput {
	return i.ToGetTrafficFilterRulesetRuleArrayOutputWithContext(context.Background())
}

func (i GetTrafficFilterRulesetRuleArray) ToGetTrafficFilterRulesetRuleArrayOutputWithContext(ctx context.Context) GetTrafficFilterRulesetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTrafficFilterRulesetRuleArrayOutput)
}

func (i GetTrafficFilterRulesetRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTrafficFilterRulesetRule] {
	return pulumix.Output[[]GetTrafficFilterRulesetRule]{
		OutputState: i.ToGetTrafficFilterRulesetRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTrafficFilterRulesetRuleOutput struct{ *pulumi.OutputState }

func (GetTrafficFilterRulesetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTrafficFilterRulesetRule)(nil)).Elem()
}

func (o GetTrafficFilterRulesetRuleOutput) ToGetTrafficFilterRulesetRuleOutput() GetTrafficFilterRulesetRuleOutput {
	return o
}

func (o GetTrafficFilterRulesetRuleOutput) ToGetTrafficFilterRulesetRuleOutputWithContext(ctx context.Context) GetTrafficFilterRulesetRuleOutput {
	return o
}

func (o GetTrafficFilterRulesetRuleOutput) ToOutput(ctx context.Context) pulumix.Output[GetTrafficFilterRulesetRule] {
	return pulumix.Output[GetTrafficFilterRulesetRule]{
		OutputState: o.OutputState,
	}
}

// The description of the ruleset.
func (o GetTrafficFilterRulesetRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficFilterRulesetRule) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the ruleset
func (o GetTrafficFilterRulesetRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficFilterRulesetRule) string { return v.Id }).(pulumi.StringOutput)
}

// Allowed traffic filter source: IP address, CIDR mask, or VPC endpoint ID.
func (o GetTrafficFilterRulesetRuleOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetTrafficFilterRulesetRule) string { return v.Source }).(pulumi.StringOutput)
}

type GetTrafficFilterRulesetRuleArrayOutput struct{ *pulumi.OutputState }

func (GetTrafficFilterRulesetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTrafficFilterRulesetRule)(nil)).Elem()
}

func (o GetTrafficFilterRulesetRuleArrayOutput) ToGetTrafficFilterRulesetRuleArrayOutput() GetTrafficFilterRulesetRuleArrayOutput {
	return o
}

func (o GetTrafficFilterRulesetRuleArrayOutput) ToGetTrafficFilterRulesetRuleArrayOutputWithContext(ctx context.Context) GetTrafficFilterRulesetRuleArrayOutput {
	return o
}

func (o GetTrafficFilterRulesetRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTrafficFilterRulesetRule] {
	return pulumix.Output[[]GetTrafficFilterRulesetRule]{
		OutputState: o.OutputState,
	}
}

func (o GetTrafficFilterRulesetRuleArrayOutput) Index(i pulumi.IntInput) GetTrafficFilterRulesetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTrafficFilterRulesetRule {
		return vs[0].([]GetTrafficFilterRulesetRule)[vs[1].(int)]
	}).(GetTrafficFilterRulesetRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentApmInput)(nil)).Elem(), DeploymentApmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentApmPtrInput)(nil)).Elem(), DeploymentApmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentApmConfigInput)(nil)).Elem(), DeploymentApmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentApmConfigPtrInput)(nil)).Elem(), DeploymentApmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchInput)(nil)).Elem(), DeploymentElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchPtrInput)(nil)).Elem(), DeploymentElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchColdInput)(nil)).Elem(), DeploymentElasticsearchColdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchColdPtrInput)(nil)).Elem(), DeploymentElasticsearchColdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchColdAutoscalingInput)(nil)).Elem(), DeploymentElasticsearchColdAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchColdAutoscalingPtrInput)(nil)).Elem(), DeploymentElasticsearchColdAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchConfigInput)(nil)).Elem(), DeploymentElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchConfigPtrInput)(nil)).Elem(), DeploymentElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchCoordinatingInput)(nil)).Elem(), DeploymentElasticsearchCoordinatingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchCoordinatingPtrInput)(nil)).Elem(), DeploymentElasticsearchCoordinatingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchCoordinatingAutoscalingInput)(nil)).Elem(), DeploymentElasticsearchCoordinatingAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchCoordinatingAutoscalingPtrInput)(nil)).Elem(), DeploymentElasticsearchCoordinatingAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchExtensionInput)(nil)).Elem(), DeploymentElasticsearchExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchExtensionArrayInput)(nil)).Elem(), DeploymentElasticsearchExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchFrozenInput)(nil)).Elem(), DeploymentElasticsearchFrozenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchFrozenPtrInput)(nil)).Elem(), DeploymentElasticsearchFrozenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchFrozenAutoscalingInput)(nil)).Elem(), DeploymentElasticsearchFrozenAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchFrozenAutoscalingPtrInput)(nil)).Elem(), DeploymentElasticsearchFrozenAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchHotInput)(nil)).Elem(), DeploymentElasticsearchHotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchHotPtrInput)(nil)).Elem(), DeploymentElasticsearchHotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchHotAutoscalingInput)(nil)).Elem(), DeploymentElasticsearchHotAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchHotAutoscalingPtrInput)(nil)).Elem(), DeploymentElasticsearchHotAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchKeystoreContentsInput)(nil)).Elem(), DeploymentElasticsearchKeystoreContentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchKeystoreContentsMapInput)(nil)).Elem(), DeploymentElasticsearchKeystoreContentsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMasterInput)(nil)).Elem(), DeploymentElasticsearchMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMasterPtrInput)(nil)).Elem(), DeploymentElasticsearchMasterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMasterAutoscalingInput)(nil)).Elem(), DeploymentElasticsearchMasterAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMasterAutoscalingPtrInput)(nil)).Elem(), DeploymentElasticsearchMasterAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMlInput)(nil)).Elem(), DeploymentElasticsearchMlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMlPtrInput)(nil)).Elem(), DeploymentElasticsearchMlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMlAutoscalingInput)(nil)).Elem(), DeploymentElasticsearchMlAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchMlAutoscalingPtrInput)(nil)).Elem(), DeploymentElasticsearchMlAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchRemoteClusterInput)(nil)).Elem(), DeploymentElasticsearchRemoteClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchRemoteClusterArrayInput)(nil)).Elem(), DeploymentElasticsearchRemoteClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotInput)(nil)).Elem(), DeploymentElasticsearchSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotPtrInput)(nil)).Elem(), DeploymentElasticsearchSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotRepositoryInput)(nil)).Elem(), DeploymentElasticsearchSnapshotRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotRepositoryPtrInput)(nil)).Elem(), DeploymentElasticsearchSnapshotRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotRepositoryReferenceInput)(nil)).Elem(), DeploymentElasticsearchSnapshotRepositoryReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotRepositoryReferencePtrInput)(nil)).Elem(), DeploymentElasticsearchSnapshotRepositoryReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotSourceInput)(nil)).Elem(), DeploymentElasticsearchSnapshotSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchSnapshotSourcePtrInput)(nil)).Elem(), DeploymentElasticsearchSnapshotSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchTrustAccountInput)(nil)).Elem(), DeploymentElasticsearchTrustAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchTrustAccountArrayInput)(nil)).Elem(), DeploymentElasticsearchTrustAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchTrustExternalInput)(nil)).Elem(), DeploymentElasticsearchTrustExternalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchTrustExternalArrayInput)(nil)).Elem(), DeploymentElasticsearchTrustExternalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchWarmInput)(nil)).Elem(), DeploymentElasticsearchWarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchWarmPtrInput)(nil)).Elem(), DeploymentElasticsearchWarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchWarmAutoscalingInput)(nil)).Elem(), DeploymentElasticsearchWarmAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentElasticsearchWarmAutoscalingPtrInput)(nil)).Elem(), DeploymentElasticsearchWarmAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentEnterpriseSearchInput)(nil)).Elem(), DeploymentEnterpriseSearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentEnterpriseSearchPtrInput)(nil)).Elem(), DeploymentEnterpriseSearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentEnterpriseSearchConfigInput)(nil)).Elem(), DeploymentEnterpriseSearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentEnterpriseSearchConfigPtrInput)(nil)).Elem(), DeploymentEnterpriseSearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIntegrationsServerInput)(nil)).Elem(), DeploymentIntegrationsServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIntegrationsServerPtrInput)(nil)).Elem(), DeploymentIntegrationsServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIntegrationsServerConfigInput)(nil)).Elem(), DeploymentIntegrationsServerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIntegrationsServerConfigPtrInput)(nil)).Elem(), DeploymentIntegrationsServerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIntegrationsServerEndpointsInput)(nil)).Elem(), DeploymentIntegrationsServerEndpointsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIntegrationsServerEndpointsPtrInput)(nil)).Elem(), DeploymentIntegrationsServerEndpointsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentKibanaInput)(nil)).Elem(), DeploymentKibanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentKibanaPtrInput)(nil)).Elem(), DeploymentKibanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentKibanaConfigInput)(nil)).Elem(), DeploymentKibanaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentKibanaConfigPtrInput)(nil)).Elem(), DeploymentKibanaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentObservabilityInput)(nil)).Elem(), DeploymentObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentObservabilityPtrInput)(nil)).Elem(), DeploymentObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentTrafficFilterRuleInput)(nil)).Elem(), DeploymentTrafficFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentTrafficFilterRuleArrayInput)(nil)).Elem(), DeploymentTrafficFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotRepositoryGenericInput)(nil)).Elem(), SnapshotRepositoryGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotRepositoryGenericPtrInput)(nil)).Elem(), SnapshotRepositoryGenericArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotRepositoryS3Input)(nil)).Elem(), SnapshotRepositoryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotRepositoryS3PtrInput)(nil)).Elem(), SnapshotRepositoryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentApmInput)(nil)).Elem(), GetDeploymentApmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentApmArrayInput)(nil)).Elem(), GetDeploymentApmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentApmTopologyInput)(nil)).Elem(), GetDeploymentApmTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentApmTopologyArrayInput)(nil)).Elem(), GetDeploymentApmTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentElasticsearchInput)(nil)).Elem(), GetDeploymentElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentElasticsearchArrayInput)(nil)).Elem(), GetDeploymentElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentElasticsearchTopologyInput)(nil)).Elem(), GetDeploymentElasticsearchTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentElasticsearchTopologyArrayInput)(nil)).Elem(), GetDeploymentElasticsearchTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentElasticsearchTopologyAutoscalingInput)(nil)).Elem(), GetDeploymentElasticsearchTopologyAutoscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentElasticsearchTopologyAutoscalingArrayInput)(nil)).Elem(), GetDeploymentElasticsearchTopologyAutoscalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentEnterpriseSearchInput)(nil)).Elem(), GetDeploymentEnterpriseSearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentEnterpriseSearchArrayInput)(nil)).Elem(), GetDeploymentEnterpriseSearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentEnterpriseSearchTopologyInput)(nil)).Elem(), GetDeploymentEnterpriseSearchTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentEnterpriseSearchTopologyArrayInput)(nil)).Elem(), GetDeploymentEnterpriseSearchTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentIntegrationsServerInput)(nil)).Elem(), GetDeploymentIntegrationsServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentIntegrationsServerArrayInput)(nil)).Elem(), GetDeploymentIntegrationsServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentIntegrationsServerTopologyInput)(nil)).Elem(), GetDeploymentIntegrationsServerTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentIntegrationsServerTopologyArrayInput)(nil)).Elem(), GetDeploymentIntegrationsServerTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentKibanaInput)(nil)).Elem(), GetDeploymentKibanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentKibanaArrayInput)(nil)).Elem(), GetDeploymentKibanaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentKibanaTopologyInput)(nil)).Elem(), GetDeploymentKibanaTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentKibanaTopologyArrayInput)(nil)).Elem(), GetDeploymentKibanaTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentObservabilityInput)(nil)).Elem(), GetDeploymentObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentObservabilityArrayInput)(nil)).Elem(), GetDeploymentObservabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsApmInput)(nil)).Elem(), GetDeploymentsApmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsApmArrayInput)(nil)).Elem(), GetDeploymentsApmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsDeploymentInput)(nil)).Elem(), GetDeploymentsDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsDeploymentArrayInput)(nil)).Elem(), GetDeploymentsDeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsElasticsearchInput)(nil)).Elem(), GetDeploymentsElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsElasticsearchArrayInput)(nil)).Elem(), GetDeploymentsElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsEnterpriseSearchInput)(nil)).Elem(), GetDeploymentsEnterpriseSearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsEnterpriseSearchArrayInput)(nil)).Elem(), GetDeploymentsEnterpriseSearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsIntegrationsServerInput)(nil)).Elem(), GetDeploymentsIntegrationsServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsIntegrationsServerArrayInput)(nil)).Elem(), GetDeploymentsIntegrationsServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsKibanaInput)(nil)).Elem(), GetDeploymentsKibanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeploymentsKibanaArrayInput)(nil)).Elem(), GetDeploymentsKibanaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackApmInput)(nil)).Elem(), GetStackApmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackApmArrayInput)(nil)).Elem(), GetStackApmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackElasticsearchInput)(nil)).Elem(), GetStackElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackElasticsearchArrayInput)(nil)).Elem(), GetStackElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackEnterpriseSearchInput)(nil)).Elem(), GetStackEnterpriseSearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackEnterpriseSearchArrayInput)(nil)).Elem(), GetStackEnterpriseSearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackKibanaInput)(nil)).Elem(), GetStackKibanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStackKibanaArrayInput)(nil)).Elem(), GetStackKibanaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficFilterRulesetInput)(nil)).Elem(), GetTrafficFilterRulesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficFilterRulesetArrayInput)(nil)).Elem(), GetTrafficFilterRulesetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficFilterRulesetRuleInput)(nil)).Elem(), GetTrafficFilterRulesetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTrafficFilterRulesetRuleArrayInput)(nil)).Elem(), GetTrafficFilterRulesetRuleArray{})
	pulumi.RegisterOutputType(DeploymentApmOutput{})
	pulumi.RegisterOutputType(DeploymentApmPtrOutput{})
	pulumi.RegisterOutputType(DeploymentApmConfigOutput{})
	pulumi.RegisterOutputType(DeploymentApmConfigPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchColdOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchColdPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchColdAutoscalingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchColdAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchConfigOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchConfigPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchCoordinatingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchCoordinatingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchCoordinatingAutoscalingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchCoordinatingAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchExtensionOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchExtensionArrayOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchFrozenOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchFrozenPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchFrozenAutoscalingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchFrozenAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchHotOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchHotPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchHotAutoscalingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchHotAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchKeystoreContentsOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchKeystoreContentsMapOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMasterOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMasterPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMasterAutoscalingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMasterAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMlOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMlPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMlAutoscalingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchMlAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchRemoteClusterOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchRemoteClusterArrayOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotRepositoryOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotRepositoryPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotRepositoryReferenceOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotRepositoryReferencePtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotSourceOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchSnapshotSourcePtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchTrustAccountOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchTrustAccountArrayOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchTrustExternalOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchTrustExternalArrayOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchWarmOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchWarmPtrOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchWarmAutoscalingOutput{})
	pulumi.RegisterOutputType(DeploymentElasticsearchWarmAutoscalingPtrOutput{})
	pulumi.RegisterOutputType(DeploymentEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(DeploymentEnterpriseSearchPtrOutput{})
	pulumi.RegisterOutputType(DeploymentEnterpriseSearchConfigOutput{})
	pulumi.RegisterOutputType(DeploymentEnterpriseSearchConfigPtrOutput{})
	pulumi.RegisterOutputType(DeploymentIntegrationsServerOutput{})
	pulumi.RegisterOutputType(DeploymentIntegrationsServerPtrOutput{})
	pulumi.RegisterOutputType(DeploymentIntegrationsServerConfigOutput{})
	pulumi.RegisterOutputType(DeploymentIntegrationsServerConfigPtrOutput{})
	pulumi.RegisterOutputType(DeploymentIntegrationsServerEndpointsOutput{})
	pulumi.RegisterOutputType(DeploymentIntegrationsServerEndpointsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentKibanaOutput{})
	pulumi.RegisterOutputType(DeploymentKibanaPtrOutput{})
	pulumi.RegisterOutputType(DeploymentKibanaConfigOutput{})
	pulumi.RegisterOutputType(DeploymentKibanaConfigPtrOutput{})
	pulumi.RegisterOutputType(DeploymentObservabilityOutput{})
	pulumi.RegisterOutputType(DeploymentObservabilityPtrOutput{})
	pulumi.RegisterOutputType(DeploymentTrafficFilterRuleOutput{})
	pulumi.RegisterOutputType(DeploymentTrafficFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(SnapshotRepositoryGenericOutput{})
	pulumi.RegisterOutputType(SnapshotRepositoryGenericPtrOutput{})
	pulumi.RegisterOutputType(SnapshotRepositoryS3Output{})
	pulumi.RegisterOutputType(SnapshotRepositoryS3PtrOutput{})
	pulumi.RegisterOutputType(GetDeploymentApmOutput{})
	pulumi.RegisterOutputType(GetDeploymentApmArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentApmTopologyOutput{})
	pulumi.RegisterOutputType(GetDeploymentApmTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentElasticsearchOutput{})
	pulumi.RegisterOutputType(GetDeploymentElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentElasticsearchTopologyOutput{})
	pulumi.RegisterOutputType(GetDeploymentElasticsearchTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentElasticsearchTopologyAutoscalingOutput{})
	pulumi.RegisterOutputType(GetDeploymentElasticsearchTopologyAutoscalingArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(GetDeploymentEnterpriseSearchArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentEnterpriseSearchTopologyOutput{})
	pulumi.RegisterOutputType(GetDeploymentEnterpriseSearchTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentIntegrationsServerOutput{})
	pulumi.RegisterOutputType(GetDeploymentIntegrationsServerArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentIntegrationsServerTopologyOutput{})
	pulumi.RegisterOutputType(GetDeploymentIntegrationsServerTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentKibanaOutput{})
	pulumi.RegisterOutputType(GetDeploymentKibanaArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentKibanaTopologyOutput{})
	pulumi.RegisterOutputType(GetDeploymentKibanaTopologyArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentObservabilityOutput{})
	pulumi.RegisterOutputType(GetDeploymentObservabilityArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentsApmOutput{})
	pulumi.RegisterOutputType(GetDeploymentsApmArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentsDeploymentOutput{})
	pulumi.RegisterOutputType(GetDeploymentsDeploymentArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentsElasticsearchOutput{})
	pulumi.RegisterOutputType(GetDeploymentsElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentsEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(GetDeploymentsEnterpriseSearchArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentsIntegrationsServerOutput{})
	pulumi.RegisterOutputType(GetDeploymentsIntegrationsServerArrayOutput{})
	pulumi.RegisterOutputType(GetDeploymentsKibanaOutput{})
	pulumi.RegisterOutputType(GetDeploymentsKibanaArrayOutput{})
	pulumi.RegisterOutputType(GetStackApmOutput{})
	pulumi.RegisterOutputType(GetStackApmArrayOutput{})
	pulumi.RegisterOutputType(GetStackElasticsearchOutput{})
	pulumi.RegisterOutputType(GetStackElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(GetStackEnterpriseSearchOutput{})
	pulumi.RegisterOutputType(GetStackEnterpriseSearchArrayOutput{})
	pulumi.RegisterOutputType(GetStackKibanaOutput{})
	pulumi.RegisterOutputType(GetStackKibanaArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficFilterRulesetOutput{})
	pulumi.RegisterOutputType(GetTrafficFilterRulesetArrayOutput{})
	pulumi.RegisterOutputType(GetTrafficFilterRulesetRuleOutput{})
	pulumi.RegisterOutputType(GetTrafficFilterRulesetRuleArrayOutput{})
}
