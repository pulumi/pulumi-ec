// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

// API Key to use for API authentication. The only valid authentication mechanism for the Elasticsearch Service.
func GetApikey(ctx *pulumi.Context) string {
	return config.Get(ctx, "ec:apikey")
}

// Endpoint where the terraform provider will point to. Defaults to "https://api.elastic-cloud.com".
func GetEndpoint(ctx *pulumi.Context) string {
	return config.Get(ctx, "ec:endpoint")
}

// Allow the provider to skip TLS validation on its outgoing HTTP calls.
func GetInsecure(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "ec:insecure")
}

// Password to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
// Private.
func GetPassword(ctx *pulumi.Context) string {
	return config.Get(ctx, "ec:password")
}

// Timeout used for individual HTTP calls. Defaults to "1m".
func GetTimeout(ctx *pulumi.Context) string {
	return config.Get(ctx, "ec:timeout")
}

// Username to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
// Private.
func GetUsername(ctx *pulumi.Context) string {
	return config.Get(ctx, "ec:username")
}

// When set, a "request.log" file will be written with all outgoing HTTP requests. Defaults to "false".
func GetVerbose(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "ec:verbose")
}

// When set with verbose, the contents of the Authorization header will not be redacted. Defaults to "false".
func GetVerboseCredentials(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "ec:verboseCredentials")
}

// Timeout used for individual HTTP calls. Defaults to "1m".
func GetVerboseFile(ctx *pulumi.Context) string {
	return config.Get(ctx, "ec:verboseFile")
}
