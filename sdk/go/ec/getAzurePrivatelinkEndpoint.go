// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ec/sdk/go/ec/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to retrieve information about the Azure Private Link configuration for a given region. Further documentation on how to establish a PrivateLink connection can be found in the ESS [documentation](https://www.elastic.co/guide/en/cloud/current/ec-traffic-filtering-vnet.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ec/sdk/go/ec"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec.GetAzurePrivatelinkEndpoint(ctx, &ec.GetAzurePrivatelinkEndpointArgs{
//				Region: "eastus",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAzurePrivatelinkEndpoint(ctx *pulumi.Context, args *GetAzurePrivatelinkEndpointArgs, opts ...pulumi.InvokeOption) (*GetAzurePrivatelinkEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAzurePrivatelinkEndpointResult
	err := ctx.Invoke("ec:index/getAzurePrivatelinkEndpoint:getAzurePrivatelinkEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzurePrivatelinkEndpoint.
type GetAzurePrivatelinkEndpointArgs struct {
	// Region to retrieve the Private Link configuration for.
	Region string `pulumi:"region"`
}

// A collection of values returned by getAzurePrivatelinkEndpoint.
type GetAzurePrivatelinkEndpointResult struct {
	// The domain name to used in when configuring a private hosted zone in the VNet connection.
	DomainName string `pulumi:"domainName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Region to retrieve the Private Link configuration for.
	Region string `pulumi:"region"`
	// The service alias to establish a connection to.
	ServiceAlias string `pulumi:"serviceAlias"`
}

func GetAzurePrivatelinkEndpointOutput(ctx *pulumi.Context, args GetAzurePrivatelinkEndpointOutputArgs, opts ...pulumi.InvokeOption) GetAzurePrivatelinkEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAzurePrivatelinkEndpointResult, error) {
			args := v.(GetAzurePrivatelinkEndpointArgs)
			r, err := GetAzurePrivatelinkEndpoint(ctx, &args, opts...)
			var s GetAzurePrivatelinkEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAzurePrivatelinkEndpointResultOutput)
}

// A collection of arguments for invoking getAzurePrivatelinkEndpoint.
type GetAzurePrivatelinkEndpointOutputArgs struct {
	// Region to retrieve the Private Link configuration for.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetAzurePrivatelinkEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzurePrivatelinkEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getAzurePrivatelinkEndpoint.
type GetAzurePrivatelinkEndpointResultOutput struct{ *pulumi.OutputState }

func (GetAzurePrivatelinkEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzurePrivatelinkEndpointResult)(nil)).Elem()
}

func (o GetAzurePrivatelinkEndpointResultOutput) ToGetAzurePrivatelinkEndpointResultOutput() GetAzurePrivatelinkEndpointResultOutput {
	return o
}

func (o GetAzurePrivatelinkEndpointResultOutput) ToGetAzurePrivatelinkEndpointResultOutputWithContext(ctx context.Context) GetAzurePrivatelinkEndpointResultOutput {
	return o
}

func (o GetAzurePrivatelinkEndpointResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetAzurePrivatelinkEndpointResult] {
	return pulumix.Output[GetAzurePrivatelinkEndpointResult]{
		OutputState: o.OutputState,
	}
}

// The domain name to used in when configuring a private hosted zone in the VNet connection.
func (o GetAzurePrivatelinkEndpointResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzurePrivatelinkEndpointResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAzurePrivatelinkEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzurePrivatelinkEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

// Region to retrieve the Private Link configuration for.
func (o GetAzurePrivatelinkEndpointResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzurePrivatelinkEndpointResult) string { return v.Region }).(pulumi.StringOutput)
}

// The service alias to establish a connection to.
func (o GetAzurePrivatelinkEndpointResultOutput) ServiceAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzurePrivatelinkEndpointResult) string { return v.ServiceAlias }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAzurePrivatelinkEndpointResultOutput{})
}
