// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud
{
    public static class GetTrafficFilter
    {
        /// <summary>
        /// Use this data source to filter for an existing traffic filter that has been created via one of the provided filters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ElasticCloud = Pulumi.ElasticCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var name = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Name = "example-filter",
        ///     });
        /// 
        ///     var id = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Id = "41d275439f884ce89359039e53eac516",
        ///     });
        /// 
        ///     var region = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Region = "us-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTrafficFilterResult> InvokeAsync(GetTrafficFilterArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrafficFilterResult>("ec:index/getTrafficFilter:getTrafficFilter", args ?? new GetTrafficFilterArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to filter for an existing traffic filter that has been created via one of the provided filters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ElasticCloud = Pulumi.ElasticCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var name = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Name = "example-filter",
        ///     });
        /// 
        ///     var id = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Id = "41d275439f884ce89359039e53eac516",
        ///     });
        /// 
        ///     var region = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Region = "us-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTrafficFilterResult> Invoke(GetTrafficFilterInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrafficFilterResult>("ec:index/getTrafficFilter:getTrafficFilter", args ?? new GetTrafficFilterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to filter for an existing traffic filter that has been created via one of the provided filters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ElasticCloud = Pulumi.ElasticCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var name = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Name = "example-filter",
        ///     });
        /// 
        ///     var id = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Id = "41d275439f884ce89359039e53eac516",
        ///     });
        /// 
        ///     var region = ElasticCloud.GetTrafficFilter.Invoke(new()
        ///     {
        ///         Region = "us-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTrafficFilterResult> Invoke(GetTrafficFilterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrafficFilterResult>("ec:index/getTrafficFilter:getTrafficFilter", args ?? new GetTrafficFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrafficFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the traffic filter to select.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The exact name of the traffic filter to select.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Region where the traffic filter is. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetTrafficFilterArgs()
        {
        }
        public static new GetTrafficFilterArgs Empty => new GetTrafficFilterArgs();
    }

    public sealed class GetTrafficFilterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the traffic filter to select.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The exact name of the traffic filter to select.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region where the traffic filter is. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetTrafficFilterInvokeArgs()
        {
        }
        public static new GetTrafficFilterInvokeArgs Empty => new GetTrafficFilterInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrafficFilterResult
    {
        /// <summary>
        /// The id of the traffic filter to select.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The exact name of the traffic filter to select.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Region where the traffic filter is. For Elastic Cloud Enterprise (ECE) installations, use `ece-region`
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// An individual ruleset
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTrafficFilterRulesetResult> Rulesets;

        [OutputConstructor]
        private GetTrafficFilterResult(
            string? id,

            string? name,

            string? region,

            ImmutableArray<Outputs.GetTrafficFilterRulesetResult> rulesets)
        {
            Id = id;
            Name = name;
            Region = region;
            Rulesets = rulesets;
        }
    }
}
