// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud.Inputs
{

    public sealed class OrganizationMembersArgs : global::Pulumi.ResourceArgs
    {
        [Input("deploymentRoles")]
        private InputList<Inputs.OrganizationMembersDeploymentRoleArgs>? _deploymentRoles;

        /// <summary>
        /// Grant access to one or more deployments. For more info see: [Deployment instance roles](https://www.elastic.co/guide/en/cloud/current/ec-user-privileges.html#ec_instance_access_roles).
        /// </summary>
        public InputList<Inputs.OrganizationMembersDeploymentRoleArgs> DeploymentRoles
        {
            get => _deploymentRoles ?? (_deploymentRoles = new InputList<Inputs.OrganizationMembersDeploymentRoleArgs>());
            set => _deploymentRoles = value;
        }

        /// <summary>
        /// Email address of the user.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Set to true while the user has not yet accepted their invitation to the organization.
        /// </summary>
        [Input("invitationPending")]
        public Input<bool>? InvitationPending { get; set; }

        /// <summary>
        /// The optional organization role for the member. Can be one of `organization-admin`, `billing-admin`. For more info see: [Organization roles](https://www.elastic.co/guide/en/cloud/current/ec-user-privileges.html#ec_organization_level_roles)
        /// </summary>
        [Input("organizationRole")]
        public Input<string>? OrganizationRole { get; set; }

        [Input("projectElasticsearchRoles")]
        private InputList<Inputs.OrganizationMembersProjectElasticsearchRoleArgs>? _projectElasticsearchRoles;

        /// <summary>
        /// Roles assigned for elasticsearch projects. For more info see: [Serverless elasticsearch roles](https://www.elastic.co/docs/current/serverless/general/assign-user-roles#es)
        /// </summary>
        public InputList<Inputs.OrganizationMembersProjectElasticsearchRoleArgs> ProjectElasticsearchRoles
        {
            get => _projectElasticsearchRoles ?? (_projectElasticsearchRoles = new InputList<Inputs.OrganizationMembersProjectElasticsearchRoleArgs>());
            set => _projectElasticsearchRoles = value;
        }

        [Input("projectObservabilityRoles")]
        private InputList<Inputs.OrganizationMembersProjectObservabilityRoleArgs>? _projectObservabilityRoles;

        /// <summary>
        /// Roles assigned for observability projects. For more info see: [Serverless observability roles](https://www.elastic.co/docs/current/serverless/general/assign-user-roles#observability)
        /// </summary>
        public InputList<Inputs.OrganizationMembersProjectObservabilityRoleArgs> ProjectObservabilityRoles
        {
            get => _projectObservabilityRoles ?? (_projectObservabilityRoles = new InputList<Inputs.OrganizationMembersProjectObservabilityRoleArgs>());
            set => _projectObservabilityRoles = value;
        }

        [Input("projectSecurityRoles")]
        private InputList<Inputs.OrganizationMembersProjectSecurityRoleArgs>? _projectSecurityRoles;

        /// <summary>
        /// Roles assigned for security projects. For more info see: [Serverless security roles](https://www.elastic.co/docs/current/serverless/general/assign-user-roles#security)
        /// </summary>
        public InputList<Inputs.OrganizationMembersProjectSecurityRoleArgs> ProjectSecurityRoles
        {
            get => _projectSecurityRoles ?? (_projectSecurityRoles = new InputList<Inputs.OrganizationMembersProjectSecurityRoleArgs>());
            set => _projectSecurityRoles = value;
        }

        /// <summary>
        /// User ID.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public OrganizationMembersArgs()
        {
        }
        public static new OrganizationMembersArgs Empty => new OrganizationMembersArgs();
    }
}
