// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud.Inputs
{

    public sealed class DeploymentElasticsearchTopologyGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscaling")]
        public Input<Inputs.DeploymentElasticsearchTopologyAutoscalingGetArgs>? Autoscaling { get; set; }

        [Input("configs")]
        private InputList<Inputs.DeploymentElasticsearchTopologyConfigGetArgs>? _configs;

        /// <summary>
        /// Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
        /// </summary>
        public InputList<Inputs.DeploymentElasticsearchTopologyConfigGetArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.DeploymentElasticsearchTopologyConfigGetArgs>());
            set => _configs = value;
        }

        /// <summary>
        /// Unique topology identifier. It generally refers to an Elasticsearch data tier, such as `hot_content`, `warm`, `cold`, `coordinating`, `frozen`, `ml` or `master`.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Default instance configuration of the deployment template. To change it, use the [full list](https://www.elastic.co/guide/en/cloud/current/ec-regions-templates-instances.html) of regions and deployment templates available in ESS.
        /// </summary>
        [Input("instanceConfigurationId")]
        public Input<string>? InstanceConfigurationId { get; set; }

        [Input("nodeRoles")]
        private InputList<string>? _nodeRoles;
        public InputList<string> NodeRoles
        {
            get => _nodeRoles ?? (_nodeRoles = new InputList<string>());
            set => _nodeRoles = value;
        }

        /// <summary>
        /// The node type for the Elasticsearch cluster (data node).
        /// </summary>
        [Input("nodeTypeData")]
        public Input<string>? NodeTypeData { get; set; }

        /// <summary>
        /// The node type for the Elasticsearch cluster (ingest node).
        /// </summary>
        [Input("nodeTypeIngest")]
        public Input<string>? NodeTypeIngest { get; set; }

        /// <summary>
        /// The node type for the Elasticsearch cluster (master node).
        /// </summary>
        [Input("nodeTypeMaster")]
        public Input<string>? NodeTypeMaster { get; set; }

        /// <summary>
        /// The node type for the Elasticsearch cluster (machine learning node).
        /// </summary>
        [Input("nodeTypeMl")]
        public Input<string>? NodeTypeMl { get; set; }

        /// <summary>
        /// Amount of memory (RAM) per `topology` element in the "&lt;size in GB&gt;g" notation. When omitted, it defaults to the deployment template value.
        /// </summary>
        [Input("size")]
        public Input<string>? Size { get; set; }

        /// <summary>
        /// Type of resource to which the size is assigned. Defaults to `"memory"`.
        /// </summary>
        [Input("sizeResource")]
        public Input<string>? SizeResource { get; set; }

        /// <summary>
        /// Number of zones that the Enterprise Search deployment will span. This is used to set HA. When omitted, it defaults to the deployment template value.
        /// </summary>
        [Input("zoneCount")]
        public Input<int>? ZoneCount { get; set; }

        public DeploymentElasticsearchTopologyGetArgs()
        {
        }
        public static new DeploymentElasticsearchTopologyGetArgs Empty => new DeploymentElasticsearchTopologyGetArgs();
    }
}
