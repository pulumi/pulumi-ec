// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud
{
    /// <summary>
    /// The provider type for the ec package. By default, resources use package-wide configuration
    /// settings, however an explicit `Provider` instance may be created and passed during resource
    /// construction to achieve fine-grained programmatic control over provider settings. See the
    /// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
    /// </summary>
    [ElasticCloudResourceType("pulumi:providers:ec")]
    public partial class Provider : global::Pulumi.ProviderResource
    {
        /// <summary>
        /// API Key to use for API authentication. The only valid authentication mechanism for the Elasticsearch Service.
        /// </summary>
        [Output("apikey")]
        public Output<string?> Apikey { get; private set; } = null!;

        [Output("endpoint")]
        public Output<string?> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Password to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
        /// Private.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// Timeout used for individual HTTP calls. Defaults to "1m".
        /// </summary>
        [Output("timeout")]
        public Output<string?> Timeout { get; private set; } = null!;

        /// <summary>
        /// Username to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
        /// Private.
        /// </summary>
        [Output("username")]
        public Output<string?> Username { get; private set; } = null!;

        /// <summary>
        /// Timeout used for individual HTTP calls. Defaults to "1m".
        /// </summary>
        [Output("verboseFile")]
        public Output<string?> VerboseFile { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs? args = null, CustomResourceOptions? options = null)
            : base("ec", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "apikey",
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

        /// <summary>
        /// This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
        /// </summary>
        public global::Pulumi.Output<ProviderTerraformConfigResult> TerraformConfig()
            => global::Pulumi.Deployment.Instance.Call<ProviderTerraformConfigResult>("pulumi:providers:ec/terraformConfig", CallArgs.Empty, this);
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("apikey")]
        private Input<string>? _apikey;

        /// <summary>
        /// API Key to use for API authentication. The only valid authentication mechanism for the Elasticsearch Service.
        /// </summary>
        public Input<string>? Apikey
        {
            get => _apikey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apikey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Allow the provider to skip TLS validation on its outgoing HTTP calls.
        /// </summary>
        [Input("insecure", json: true)]
        public Input<bool>? Insecure { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Password to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
        /// Private.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Timeout used for individual HTTP calls. Defaults to "1m".
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        /// <summary>
        /// Username to use for API authentication. Available only when targeting ECE Installations or Elasticsearch Service
        /// Private.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// When set, a "request.log" file will be written with all outgoing HTTP requests. Defaults to "false".
        /// </summary>
        [Input("verbose", json: true)]
        public Input<bool>? Verbose { get; set; }

        /// <summary>
        /// When set with verbose, the contents of the Authorization header will not be redacted. Defaults to "false".
        /// </summary>
        [Input("verboseCredentials", json: true)]
        public Input<bool>? VerboseCredentials { get; set; }

        /// <summary>
        /// Timeout used for individual HTTP calls. Defaults to "1m".
        /// </summary>
        [Input("verboseFile")]
        public Input<string>? VerboseFile { get; set; }

        public ProviderArgs()
        {
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }

    /// <summary>
    /// The results of the <see cref="Provider.TerraformConfig"/> method.
    /// </summary>
    [OutputType]
    public sealed class ProviderTerraformConfigResult
    {
        public readonly ImmutableDictionary<string, object> Result;

        [OutputConstructor]
        private ProviderTerraformConfigResult(ImmutableDictionary<string, object> result)
        {
            Result = result;
        }
    }
}
