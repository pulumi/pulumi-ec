// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud.Outputs
{

    [OutputType]
    public sealed class OrganizationMembers
    {
        /// <summary>
        /// Grant access to one or more deployments. For more info see: [Deployment instance roles](https://www.elastic.co/guide/en/cloud/current/ec-user-privileges.html#ec_instance_access_roles).
        /// </summary>
        public readonly ImmutableArray<Outputs.OrganizationMembersDeploymentRole> DeploymentRoles;
        /// <summary>
        /// Email address of the user.
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// Set to true while the user has not yet accepted their invitation to the organization.
        /// </summary>
        public readonly bool? InvitationPending;
        /// <summary>
        /// The optional organization role for the member. Can be one of `organization-admin`, `billing-admin`. For more info see: [Organization roles](https://www.elastic.co/guide/en/cloud/current/ec-user-privileges.html#ec_organization_level_roles)
        /// </summary>
        public readonly string? OrganizationRole;
        /// <summary>
        /// Roles assigned for elasticsearch projects. For more info see: [Serverless elasticsearch roles](https://www.elastic.co/docs/current/serverless/general/assign-user-roles#es)
        /// </summary>
        public readonly ImmutableArray<Outputs.OrganizationMembersProjectElasticsearchRole> ProjectElasticsearchRoles;
        /// <summary>
        /// Roles assigned for observability projects. For more info see: [Serverless observability roles](https://www.elastic.co/docs/current/serverless/general/assign-user-roles#observability)
        /// </summary>
        public readonly ImmutableArray<Outputs.OrganizationMembersProjectObservabilityRole> ProjectObservabilityRoles;
        /// <summary>
        /// Roles assigned for security projects. For more info see: [Serverless security roles](https://www.elastic.co/docs/current/serverless/general/assign-user-roles#security)
        /// </summary>
        public readonly ImmutableArray<Outputs.OrganizationMembersProjectSecurityRole> ProjectSecurityRoles;
        /// <summary>
        /// User ID.
        /// </summary>
        public readonly string? UserId;

        [OutputConstructor]
        private OrganizationMembers(
            ImmutableArray<Outputs.OrganizationMembersDeploymentRole> deploymentRoles,

            string? email,

            bool? invitationPending,

            string? organizationRole,

            ImmutableArray<Outputs.OrganizationMembersProjectElasticsearchRole> projectElasticsearchRoles,

            ImmutableArray<Outputs.OrganizationMembersProjectObservabilityRole> projectObservabilityRoles,

            ImmutableArray<Outputs.OrganizationMembersProjectSecurityRole> projectSecurityRoles,

            string? userId)
        {
            DeploymentRoles = deploymentRoles;
            Email = email;
            InvitationPending = invitationPending;
            OrganizationRole = organizationRole;
            ProjectElasticsearchRoles = projectElasticsearchRoles;
            ProjectObservabilityRoles = projectObservabilityRoles;
            ProjectSecurityRoles = projectSecurityRoles;
            UserId = userId;
        }
    }
}
