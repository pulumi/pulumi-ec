// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud.Outputs
{

    [OutputType]
    public sealed class DeploymentIntegrationsServer
    {
        /// <summary>
        /// Optionally define the Integrations Server configuration options for the IntegrationsServer Server
        /// </summary>
        public readonly Outputs.DeploymentIntegrationsServerConfig? Config;
        public readonly string? ElasticsearchClusterRefId;
        /// <summary>
        /// URLs for the accessing the Fleet and APM API's within this Integrations Server resource.
        /// </summary>
        public readonly Outputs.DeploymentIntegrationsServerEndpoints? Endpoints;
        public readonly string? HttpEndpoint;
        public readonly string? HttpsEndpoint;
        public readonly string? InstanceConfigurationId;
        public readonly int? InstanceConfigurationVersion;
        public readonly string? LatestInstanceConfigurationId;
        public readonly int? LatestInstanceConfigurationVersion;
        public readonly string? RefId;
        public readonly string? Region;
        public readonly string? ResourceId;
        public readonly string? Size;
        /// <summary>
        /// Optional size type, defaults to "memory".
        /// </summary>
        public readonly string? SizeResource;
        public readonly int? ZoneCount;

        [OutputConstructor]
        private DeploymentIntegrationsServer(
            Outputs.DeploymentIntegrationsServerConfig? config,

            string? elasticsearchClusterRefId,

            Outputs.DeploymentIntegrationsServerEndpoints? endpoints,

            string? httpEndpoint,

            string? httpsEndpoint,

            string? instanceConfigurationId,

            int? instanceConfigurationVersion,

            string? latestInstanceConfigurationId,

            int? latestInstanceConfigurationVersion,

            string? refId,

            string? region,

            string? resourceId,

            string? size,

            string? sizeResource,

            int? zoneCount)
        {
            Config = config;
            ElasticsearchClusterRefId = elasticsearchClusterRefId;
            Endpoints = endpoints;
            HttpEndpoint = httpEndpoint;
            HttpsEndpoint = httpsEndpoint;
            InstanceConfigurationId = instanceConfigurationId;
            InstanceConfigurationVersion = instanceConfigurationVersion;
            LatestInstanceConfigurationId = latestInstanceConfigurationId;
            LatestInstanceConfigurationVersion = latestInstanceConfigurationVersion;
            RefId = refId;
            Region = region;
            ResourceId = resourceId;
            Size = size;
            SizeResource = sizeResource;
            ZoneCount = zoneCount;
        }
    }
}
