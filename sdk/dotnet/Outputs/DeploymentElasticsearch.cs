// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud.Outputs
{

    [OutputType]
    public sealed class DeploymentElasticsearch
    {
        /// <summary>
        /// Enable or disable autoscaling. Defaults to the setting coming from the deployment template.
        /// </summary>
        public readonly bool? Autoscale;
        public readonly string? CloudId;
        /// <summary>
        /// 'cold' topology element
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchCold? Cold;
        /// <summary>
        /// Elasticsearch settings which will be applied to all topologies
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchConfig? Config;
        /// <summary>
        /// 'coordinating' topology element
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchCoordinating? Coordinating;
        /// <summary>
        /// Optional Elasticsearch extensions such as custom bundles or plugins.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchExtension> Extensions;
        /// <summary>
        /// 'frozen' topology element
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchFrozen? Frozen;
        /// <summary>
        /// 'hot' topology element
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchHot Hot;
        public readonly string? HttpEndpoint;
        public readonly string? HttpsEndpoint;
        /// <summary>
        /// Keystore contents that are controlled by the deployment resource.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.DeploymentElasticsearchKeystoreContents>? KeystoreContents;
        /// <summary>
        /// 'master' topology element
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchMaster? Master;
        /// <summary>
        /// 'ml' topology element
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchMl? Ml;
        /// <summary>
        /// A human readable reference for the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
        /// </summary>
        public readonly string? RefId;
        /// <summary>
        /// Elasticsearch Service (ESS) region where the deployment should be hosted. For Elastic Cloud Enterprise (ECE) installations, set to `"ece-region".
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Optional Elasticsearch remote clusters to configure for the Elasticsearch resource, can be set multiple times
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchRemoteCluster> RemoteClusters;
        public readonly string? ResourceId;
        /// <summary>
        /// (ECE only) Snapshot configuration settings for an Elasticsearch cluster.
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchSnapshot? Snapshot;
        public readonly Outputs.DeploymentElasticsearchSnapshotSource? SnapshotSource;
        public readonly string? Strategy;
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchTrustAccount> TrustAccounts;
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchTrustExternal> TrustExternals;
        public readonly Outputs.DeploymentElasticsearchWarm? Warm;

        [OutputConstructor]
        private DeploymentElasticsearch(
            bool? autoscale,

            string? cloudId,

            Outputs.DeploymentElasticsearchCold? cold,

            Outputs.DeploymentElasticsearchConfig? config,

            Outputs.DeploymentElasticsearchCoordinating? coordinating,

            ImmutableArray<Outputs.DeploymentElasticsearchExtension> extensions,

            Outputs.DeploymentElasticsearchFrozen? frozen,

            Outputs.DeploymentElasticsearchHot hot,

            string? httpEndpoint,

            string? httpsEndpoint,

            ImmutableDictionary<string, Outputs.DeploymentElasticsearchKeystoreContents>? keystoreContents,

            Outputs.DeploymentElasticsearchMaster? master,

            Outputs.DeploymentElasticsearchMl? ml,

            string? refId,

            string? region,

            ImmutableArray<Outputs.DeploymentElasticsearchRemoteCluster> remoteClusters,

            string? resourceId,

            Outputs.DeploymentElasticsearchSnapshot? snapshot,

            Outputs.DeploymentElasticsearchSnapshotSource? snapshotSource,

            string? strategy,

            ImmutableArray<Outputs.DeploymentElasticsearchTrustAccount> trustAccounts,

            ImmutableArray<Outputs.DeploymentElasticsearchTrustExternal> trustExternals,

            Outputs.DeploymentElasticsearchWarm? warm)
        {
            Autoscale = autoscale;
            CloudId = cloudId;
            Cold = cold;
            Config = config;
            Coordinating = coordinating;
            Extensions = extensions;
            Frozen = frozen;
            Hot = hot;
            HttpEndpoint = httpEndpoint;
            HttpsEndpoint = httpsEndpoint;
            KeystoreContents = keystoreContents;
            Master = master;
            Ml = ml;
            RefId = refId;
            Region = region;
            RemoteClusters = remoteClusters;
            ResourceId = resourceId;
            Snapshot = snapshot;
            SnapshotSource = snapshotSource;
            Strategy = strategy;
            TrustAccounts = trustAccounts;
            TrustExternals = trustExternals;
            Warm = warm;
        }
    }
}
