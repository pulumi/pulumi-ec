// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud.Outputs
{

    [OutputType]
    public sealed class DeploymentElasticsearch
    {
        /// <summary>
        /// Enable or disable autoscaling. Defaults to the setting coming from the deployment template. Accepted values are `"true"` or `"false"`.
        /// </summary>
        public readonly string? Autoscale;
        public readonly string? CloudId;
        /// <summary>
        /// Elasticsearch settings applied to all topologies unless overridden in the `topology` element.
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchConfig? Config;
        /// <summary>
        /// Custom Elasticsearch bundles or plugins. Can be set multiple times.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchExtension> Extensions;
        public readonly string? HttpEndpoint;
        public readonly string? HttpsEndpoint;
        /// <summary>
        /// Can be set on the Elasticsearch resource. The default value `main-elasticsearch` is recommended.
        /// </summary>
        public readonly string? RefId;
        /// <summary>
        /// Elasticsearch Service (ESS) region where to create the deployment. For Elastic Cloud Enterprise (ECE) installations, set `"ece-region"`.
        /// 
        /// &gt; If you change the `region`, the resource will be destroyed and re-created.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Elasticsearch remote clusters to configure for the Elasticsearch resource. Can be set multiple times.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchRemoteCluster> RemoteClusters;
        public readonly string? ResourceId;
        /// <summary>
        /// Restores data from a snapshot of another deployment.
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchSnapshotSource? SnapshotSource;
        /// <summary>
        /// Choose the configuration strategy used to apply the changes.
        /// </summary>
        public readonly Outputs.DeploymentElasticsearchStrategy? Strategy;
        /// <summary>
        /// Can be set multiple times to compose complex topologies.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchTopology> Topologies;
        /// <summary>
        /// The trust relationships with other ESS accounts.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchTrustAccount> TrustAccounts;
        /// <summary>
        /// The trust relationship with external entities (remote environments, remote accounts...).
        /// </summary>
        public readonly ImmutableArray<Outputs.DeploymentElasticsearchTrustExternal> TrustExternals;

        [OutputConstructor]
        private DeploymentElasticsearch(
            string? autoscale,

            string? cloudId,

            Outputs.DeploymentElasticsearchConfig? config,

            ImmutableArray<Outputs.DeploymentElasticsearchExtension> extensions,

            string? httpEndpoint,

            string? httpsEndpoint,

            string? refId,

            string? region,

            ImmutableArray<Outputs.DeploymentElasticsearchRemoteCluster> remoteClusters,

            string? resourceId,

            Outputs.DeploymentElasticsearchSnapshotSource? snapshotSource,

            Outputs.DeploymentElasticsearchStrategy? strategy,

            ImmutableArray<Outputs.DeploymentElasticsearchTopology> topologies,

            ImmutableArray<Outputs.DeploymentElasticsearchTrustAccount> trustAccounts,

            ImmutableArray<Outputs.DeploymentElasticsearchTrustExternal> trustExternals)
        {
            Autoscale = autoscale;
            CloudId = cloudId;
            Config = config;
            Extensions = extensions;
            HttpEndpoint = httpEndpoint;
            HttpsEndpoint = httpsEndpoint;
            RefId = refId;
            Region = region;
            RemoteClusters = remoteClusters;
            ResourceId = resourceId;
            SnapshotSource = snapshotSource;
            Strategy = strategy;
            Topologies = topologies;
            TrustAccounts = trustAccounts;
            TrustExternals = trustExternals;
        }
    }
}
