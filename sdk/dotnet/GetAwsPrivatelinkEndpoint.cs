// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ElasticCloud
{
    public static class GetAwsPrivatelinkEndpoint
    {
        /// <summary>
        /// Use this data source to retrieve information about the AWS Private Link configuration for a given region. Further documentation on how to establish a PrivateLink connection can be found in the ESS [documentation](https://www.elastic.co/guide/en/cloud/current/ec-traffic-filtering-vpc.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ElasticCloud = Pulumi.ElasticCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var us_east_1 = ElasticCloud.GetAwsPrivatelinkEndpoint.Invoke(new()
        ///     {
        ///         Region = "us-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAwsPrivatelinkEndpointResult> InvokeAsync(GetAwsPrivatelinkEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAwsPrivatelinkEndpointResult>("ec:index/getAwsPrivatelinkEndpoint:getAwsPrivatelinkEndpoint", args ?? new GetAwsPrivatelinkEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about the AWS Private Link configuration for a given region. Further documentation on how to establish a PrivateLink connection can be found in the ESS [documentation](https://www.elastic.co/guide/en/cloud/current/ec-traffic-filtering-vpc.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ElasticCloud = Pulumi.ElasticCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var us_east_1 = ElasticCloud.GetAwsPrivatelinkEndpoint.Invoke(new()
        ///     {
        ///         Region = "us-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAwsPrivatelinkEndpointResult> Invoke(GetAwsPrivatelinkEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsPrivatelinkEndpointResult>("ec:index/getAwsPrivatelinkEndpoint:getAwsPrivatelinkEndpoint", args ?? new GetAwsPrivatelinkEndpointInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about the AWS Private Link configuration for a given region. Further documentation on how to establish a PrivateLink connection can be found in the ESS [documentation](https://www.elastic.co/guide/en/cloud/current/ec-traffic-filtering-vpc.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ElasticCloud = Pulumi.ElasticCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var us_east_1 = ElasticCloud.GetAwsPrivatelinkEndpoint.Invoke(new()
        ///     {
        ///         Region = "us-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAwsPrivatelinkEndpointResult> Invoke(GetAwsPrivatelinkEndpointInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsPrivatelinkEndpointResult>("ec:index/getAwsPrivatelinkEndpoint:getAwsPrivatelinkEndpoint", args ?? new GetAwsPrivatelinkEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsPrivatelinkEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region to retrieve the Private Link configuration for.
        /// </summary>
        [Input("region", required: true)]
        public string Region { get; set; } = null!;

        public GetAwsPrivatelinkEndpointArgs()
        {
        }
        public static new GetAwsPrivatelinkEndpointArgs Empty => new GetAwsPrivatelinkEndpointArgs();
    }

    public sealed class GetAwsPrivatelinkEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region to retrieve the Private Link configuration for.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public GetAwsPrivatelinkEndpointInvokeArgs()
        {
        }
        public static new GetAwsPrivatelinkEndpointInvokeArgs Empty => new GetAwsPrivatelinkEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetAwsPrivatelinkEndpointResult
    {
        /// <summary>
        /// The domain name to used in when configuring a private hosted zone in the VPCE connection.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Region to retrieve the Private Link configuration for.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The VPC service name used to connect to the region.
        /// </summary>
        public readonly string VpcServiceName;
        /// <summary>
        /// The IDs of the availability zones hosting the VPC endpoints.
        /// </summary>
        public readonly ImmutableArray<string> ZoneIds;

        [OutputConstructor]
        private GetAwsPrivatelinkEndpointResult(
            string domainName,

            string id,

            string region,

            string vpcServiceName,

            ImmutableArray<string> zoneIds)
        {
            DomainName = domainName;
            Id = id;
            Region = region;
            VpcServiceName = vpcServiceName;
            ZoneIds = zoneIds;
        }
    }
}
